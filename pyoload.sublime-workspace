{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"an",
				"ann\tannotate"
			],
			[
				"_",
				"_empty"
			],
			[
				"if",
				"ifmain\tif __name__ == '__main__'"
			],
			[
				"speed",
				"speedCast"
			],
			[
				"com",
				"complex"
			],
			[
				"te",
				"testTypeMatch"
			],
			[
				"be",
				"begin2"
			],
			[
				"en",
				"end2"
			],
			[
				"per",
				"perf_counter_ns"
			],
			[
				"t",
				"time"
			],
			[
				"pe",
				"perf_counter_ns"
			],
			[
				"s",
				"sign"
			],
			[
				"ret",
				"return"
			],
			[
				"is_",
				"is_annoted"
			],
			[
				"ty",
				"typeMatch"
			],
			[
				"f",
				"force"
			],
			[
				"__py",
				"__pyod_annotate__"
			],
			[
				"Ca",
				"Callable"
			],
			[
				"getm",
				"getmodule"
			],
			[
				"re",
				"resolveAnnotations"
			],
			[
				"__",
				"__annotations__"
			],
			[
				"docstr",
				"docstring-markup"
			],
			[
				"doc",
				"docstrings"
			],
			[
				"Ty",
				"TypeError"
			],
			[
				"ann",
				"annotation"
			],
			[
				"para",
				"param"
			],
			[
				"p",
				"parameters"
			],
			[
				"si",
				"sign"
			],
			[
				"tr",
				"try\tTry/Except/Else"
			],
			[
				"di",
				"display"
			],
			[
				"N",
				"NoneType"
			],
			[
				"No",
				"NoneType"
			],
			[
				"In",
				"InternalAnnotationError"
			],
			[
				"cod",
				"code-block"
			],
			[
				"Che",
				"Checks"
			],
			[
				"se",
				"setter"
			],
			[
				"Ann",
				"AnnotationError"
			],
			[
				"CH",
				"Check"
			],
			[
				"C",
				"Checks"
			],
			[
				"pa",
				"param"
			],
			[
				"get",
				"get_name"
			],
			[
				"Ch",
				"CheckError"
			],
			[
				"typ",
				"typeMatch"
			],
			[
				"Fi",
				"FileNotFoundError"
			],
			[
				"ma",
				"maintainer_email="
			],
			[
				"pr",
				"project_dir"
			],
			[
				"__p",
				"__pyo_overloads_name__"
			],
			[
				"Di",
				"ZeroDivisionError"
			],
			[
				"py",
				"python"
			],
			[
				"Int",
				"InternalAnnotationError"
			],
			[
				"An",
				"AnnotationResolutionError"
			],
			[
				"A",
				"AnnotationResolutionError"
			],
			[
				"ch",
				"checks_list"
			],
			[
				"par",
				"params"
			],
			[
				"class",
				"classmethod"
			],
			[
				"__init",
				"__init_subclass__"
			],
			[
				"__a",
				"__annotations__"
			],
			[
				"V",
				"Validator"
			],
			[
				"ra",
				"random_profile"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/pyoload/__init__.py",
			"settings":
			{
				"buffer_size": 21179,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					32,
					1,
					"left_delete",
					null,
					"AQAAAAAAAAAAAAAAAAAAAAAAAAAuUgAAIiIiCnB5b2xvYWQgaXMgYSBsaXR0bGUgcHl0aG9uIHNjcmlwdCB0byBpbmNvcnBvcmF0ZSBzb21lIGZlYXR1cmVzIG9mCiB0eXBlY2hlY2tpbmcgYW5kIGNhc3RpbmcgaW4gcHl0aG9uLgoiIiIKZnJvbSBmdW5jdG9vbHMgaW1wb3J0IHBhcnRpYWwKZnJvbSBmdW5jdG9vbHMgaW1wb3J0IHdyYXBzCmZyb20gaW5zcGVjdCBpbXBvcnQgaXNjbGFzcwpmcm9tIHR5cGVzIGltcG9ydCBOb25lVHlwZQpmcm9tIHR5cGVzIGltcG9ydCBVbmlvblR5cGUKZnJvbSB0eXBpbmcgaW1wb3J0IEFueQpmcm9tIHR5cGluZyBpbXBvcnQgQ2FsbGFibGUKZnJvbSB0eXBpbmcgaW1wb3J0IEdlbmVyaWNBbGlhcwpmcm9tIHR5cGluZyBpbXBvcnQgVHlwZQoKaW1wb3J0IHN5cwoKCmNsYXNzIEFubm90YXRpb25FcnJvcihWYWx1ZUVycm9yKToKICAgICIiIgogICAgYmFzZSBleGNlcHRpb24gZm9yIG1vc3QgcHlvbG9hZCBlcnJvcnMKICAgICIiIgoKCmNsYXNzIEFubm90YXRpb25FcnJvcnMoQW5ub3RhdGlvbkVycm9yKToKICAgICIiIgogICAgSG9zdHMgYSBsaXN0IG9mIEFubm90YXRpb25FcnJvcgogICAgIiIiCgoKY2xhc3MgSW50ZXJuYWxBbm5vdGF0aW9uRXJyb3IoRXhjZXB0aW9uKToKICAgICIiIgogICAgKippbnRlcm5hbCoqCiAgICByYWlzZWQgYnkgb3ZlcmxvYWRzIG9uIHR5cGUgbWlzbWF0Y2gKICAgICIiIgoKCmNsYXNzIENhc3RpbmdFcnJvcihUeXBlRXJyb3IpOgogICAgIiIiCiAgICBFcnJvciBkdXJpbmcgY2FzdGluZwogICAgIiIiCgoKY2xhc3MgT3ZlcmxvYWRFcnJvcihUeXBlRXJyb3IpOgogICAgIiIiCiAgICBFcnJvciBpbiBvciBkdXJpbmcgb3ZlcmxvYWQKICAgICIiIgoKCmNsYXNzIEFubm90YXRpb25SZXNvbHV0aW9uRXJyb3IoQW5ub3RhdGlvbkVycm9yKToKICAgICIiIgogICAgQW5ub3RhdGlvbnMgY291bGQgbm90IGJlIHJlc29sdmVkIG9yIGV2YWx1YXRlZC4KICAgICIiIgogICAgX3JhaXNlID0gRmFsc2UKCgpjbGFzcyBQeW9sb2FkQW5ub3RhdGlvbjoKICAgICIiIgogICAgQSBwYXJlbnQgY2xhc3MgZm9yIHB5b2xvYWQgZXh0cmEgYW5ub3RhdGlvbnMgYXMgYENhc3RgIGFuZCBgVmFsdWVzYAogICAgIiIiCgoKY2xhc3MgVmFsdWVzKFB5b2xvYWRBbm5vdGF0aW9uLCB0dXBsZSk6CiAgICAiIiIKICAgIEEgdHVwbGUgc3ViY2xhc3Mgd2hpY2ggaG9sZHMgc2V2ZXJhbCB2YWx1ZXMgYXMgcG9zc2libGUgYW5ub3RhdGlvbnMKICAgICIiIgoKICAgIGRlZiBfX2NhbGxfXyhzZWxmOiAnVmFsdWVzJywgdmFsOiBBbnkpIC0+IGJvb2w6CiAgICAgICAgIiIiCiAgICAgICAgQ2hlY2tzIGlmIHRoZSB0dXBsZSBjb250YWluZXMgdGhlIHNwZWNpZmllZCB2YWx1ZS4KCiAgICAgICAgOnBhcmFtIHZhbDogdGhlIHZhbHVlIHRvIGJlIGNoZWNrZWQKCiAgICAgICAgOnJldHVybnM6IGlmIHRoZSB2YWx1ZSBgdmFsYCBpcyBjb250YWluZWQgaW4gYHNlbGZgCiAgICAgICAgIiIiCiAgICAgICAgcmV0dXJuIHZhbCBpbiBzZWxmCgogICAgZGVmIF9fc3RyX18oc2VsZik6CiAgICAgICAgcmV0dXJuICdWYWx1ZXMoJyArICcsICcuam9pbihtYXAocmVwciwgc2VsZikpICsgJyknCgogICAgX19yZXByX18gPSBfX3N0cl9fCgoKZGVmIGdldF9uYW1lKGZ1bmNPckNsczogQW55KSAtPiBzdHI6CiAgICAiIiIKICAgIEdpdmVzIGEgY2xhc3Mgb3IgZnVuY3Rpb24gbmFtZSwgcG9zc2libHkgdW5pcXVlIGdvdHRlbiBmcm9tCiAgICBpdCdzIG1vZHVsZSBuYW1lIGFuZCBxdWFsaWZpZXIgbmFtZQoKICAgIDpwYXJhbSBmdW5jT3JDbHM6IFRoZSBvYmplY3Qgd2hvJ3MgbmFtZSB0byByZXR1cm4KCiAgICA6cmV0dXJuczogbW9kdWxlbmFtZSArIHF1YWxuYW1lCiAgICAiIiIKICAgIHJldHVybiBmdW5jT3JDbHMuX19tb2R1bGVfXyArICcuJyArIGZ1bmNPckNscy5fX3F1YWxuYW1lX18KCgpjbGFzcyBDaGVjazoKICAgICIiIgogICAgQSBjbGFzcyBiYXNpY2x5IGFic3RyYWN0IHdoaWNoIGhvbGRzIHJlZ2lzdGVycmVkIGNoZWNrcyBpbiBweW9sb2FkCiAgICAiIiIKICAgIGNoZWNrc19saXN0ID0ge30KCiAgICBkZWYgX19pbml0X3N1YmNsYXNzX18oY2xzOiBBbnkpOgogICAgICAgICIiIgogICAgICAgIHJlZ2lzdGVyJ3Mgc3ViY2xhc3NlcyBhcyBjaGV4a3MKICAgICAgICAiIiIKICAgICAgICBpZiBoYXNhdHRyKGNscywgJ25hbWUnKToKICAgICAgICAgICAgbmFtZSA9IGNscy5uYW1lCiAgICAgICAgZWxzZToKICAgICAgICAgICAgbmFtZSA9IGNscy5fX25hbWVfXwogICAgICAgIENoZWNrLnJlZ2lzdGVyKG5hbWUpKGNscygpKQoKICAgIEBjbGFzc21ldGhvZAogICAgZGVmIHJlZ2lzdGVyKAogICAgICAgIGNsczogQW55LAogICAgICAgIG5hbWU6IHN0ciwKICAgICkgLT4gQ2FsbGFibGVbW0NhbGxhYmxlW1tBbnksIEFueV0sIE5vbmVUeXBlXV0sIENhbGxhYmxlXToKICAgICAgICAiIiIKICAgICAgICByZXR1cm5zIGEgY2FsbGFibGUgd2hpY2ggcmVnaXN0ZXJzIGEgbmV3IGNoZWNrZXIgbWV0aG9kCgogICAgICAgIDpwYXJhbSBjbHM6IHRoZSBDaGVjayBjbGFzcwogICAgICAgIDpwYXJhbSBuYW1lOiB0aGUgbmFtZSB0byBiZSByZWdpc3RlcnJlZCBhcy4KCiAgICAgICAgOnJldHVybnM6IGEgZnVuY3Rpb24gd2hpY2ggcmVnaXN0ZXJzIHRoZSBjaGVjayB1bmRlciB0aGUgbmFtZQogICAgICAgICIiIgogICAgICAgIG5hbWVzID0gW3ggZm9yIHggaW4gbmFtZS5zcGxpdCgnICcpIGlmIHguc3RyaXAoKSAhPSAnJ10KICAgICAgICBmb3IgbmFtZSBpbiBuYW1lczoKICAgICAgICAgICAgaWYgbmFtZSBpbiBjbHMuY2hlY2tzX2xpc3Q6CiAgICAgICAgICAgICAgICByYWlzZSBDaGVjay5DaGVja05hbWVBbHJlYWR5RXhpc3RzRXJyb3IobmFtZSkKCiAgICAgICAgZGVmIGlubmVyKGZ1bmM6IENhbGxhYmxlW0FueSwgQW55XSkgLT4gQ2FsbGFibGU6CiAgICAgICAgICAgIGZvciBuYW1lIGluIG5hbWVzOgogICAgICAgICAgICAgICAgY2xzLmNoZWNrc19saXN0W25hbWVdID0gZnVuYwogICAgICAgICAgICByZXR1cm4gZnVuYwogICAgICAgIHJldHVybiBpbm5lcgoKICAgIEBjbGFzc21ldGhvZAogICAgZGVmIGNoZWNrKGNsczogQW55LCBuYW1lOiBzdHIsIHBhcmFtczogQW55LCB2YWw6IEFueSkgLT4gTm9uZToKICAgICAgICAiIiIKICAgICAgICBQZXJmb3JtcyB0aGUgc3BlY2lmaWVkIGNoZWNrIHdpdGggdGhlIHNwZWNpZmllZCBwYXJhbXMgb24KICAgICAgICB0aGUgc3BlY2lmaWVkIHZhbHVlCgogICAgICAgIDpwYXJhbSBjbHM6IHB5b2xvYWQuQ2hlY2sgY2xhc3MKICAgICAgICA6cGFyYW0gbmFtZTogVGhlIHJlZ2lzdGVycmVkIG5hbWUgb2YgdGhlIGNoZWNrCiAgICAgICAgOnBhcmFtIHBhcmFtczogVGhlIHBhcmFtZXRlcnMgdG8gcGFzcyB0byB0aGUgY2hlY2sKICAgICAgICA6cGFyYW0gdmFsOiBUaGUgdmFsdWUgdG8gY2hlY2sKCiAgICAgICAgOnJldHVybnM6IGBOb25lYAogICAgICAgICIiIgogICAgICAgIGNoZWNrID0gY2xzLmNoZWNrc19saXN0LmdldChuYW1lKQogICAgICAgIGlmIGNoZWNrIGlzIE5vbmU6CiAgICAgICAgICAgIHJhaXNlIENoZWNrLkNoZWNrRG9lc05vdEV4aXN0RXJyb3IobmFtZSkKICAgICAgICBjaGVjayhwYXJhbXMsIHZhbCkKCiAgICBjbGFzcyBDaGVja05hbWVBbHJlYWR5RXhpc3RzRXJyb3IoVmFsdWVFcnJvcik6CiAgICAgICAgIiIiCiAgICAgICAgVGhlIGNoZWNrIG5hbWUgdG8gYmUgcmVnaXN0ZXJyZWQgYWxyZWFkeSBleGlzdHMKICAgICAgICAiIiIKCiAgICBjbGFzcyBDaGVja0RvZXNOb3RFeGlzdEVycm9yKFZhbHVlRXJyb3IpOgogICAgICAgICIiIgogICAgICAgIFRoZSBzcGVjaWZpZWQgY2hlY2sgZG9lcyBub3QgZXhpc3QKICAgICAgICAiIiIKCiAgICBjbGFzcyBDaGVja0Vycm9yKEV4Y2VwdGlvbik6CiAgICAgICAgIiIiCiAgICAgICAgRXJyb3Igb2NjdXJyaW5nIGR1cmluZyBjaGVjayBjYWxsLgogICAgICAgICIiIgoKCkBDaGVjay5yZWdpc3RlcignbGVuJykKZGVmIGxlbl9jaGVjayhwYXJhbXMsIHZhbCk6CiAgICBpZiBpc2luc3RhbmNlKHBhcmFtcywgaW50KToKICAgICAgICBpZiBub3QgbGVuKHZhbCkgPT0gcGFyYW1zOgogICAgICAgICAgICByYWlzZSBDaGVjay5DaGVja0Vycm9yKGYnbGVuZ3RoIG9mIHt2YWwhcn0gbm90IGVxIHtwYXJhbXMhcn0nKQogICAgZWxpZiBpc2luc3RhbmNlKHBhcmFtcywgdHVwbGUpIGFuZCBsZW4ocGFyYW1zKSA+IDA6CiAgICAgICAgbWkgPSBtYSA9IE5vbmUKICAgICAgICBtaSwgbWEgPSBwYXJhbXMKICAgICAgICBpZiBtaSBpcyBub3QgTm9uZToKICAgICAgICAgICAgaWYgbm90IGxlbih2YWwpID4gbWk6CiAgICAgICAgICAgICAgICByYWlzZSBDaGVjay5DaGVja0Vycm9yKGYnbGVuZ3RoIG9mIHt2YWwhcn0gbm90IGd0IHttaSFyfScpCiAgICAgICAgaWYgbWEgaXMgbm90IE5vbmU6CiAgICAgICAgICAgIGlmIG5vdCBsZW4odmFsKSA8IG1hOgogICAgICAgICAgICAgICAgcmFpc2UgQ2hlY2suQ2hlY2tFcnJvcihmJ2xlbmd0aCBvZiB7dmFsIXJ9IG5vdCBsdCB7bWkhcn0nKQoKCkBDaGVjay5yZWdpc3RlcignbHQnKQpkZWYgbHRfY2hlY2socGFyYW0sIHZhbCk6CiAgICBpZiBub3QgdmFsIDwgcGFyYW06CiAgICAgICAgcmFpc2UgQ2hlY2suQ2hlY2tFcnJvcihmJ3t2YWwhcn0gbm90IGx0IHtwYXJhbSFyfScpCgoKQENoZWNrLnJlZ2lzdGVyKCdsZScpCmRlZiBsZV9jaGVjayhwYXJhbSwgdmFsKToKICAgIGlmIG5vdCB2YWwgPD0gcGFyYW06CiAgICAgICAgcmFpc2UgQ2hlY2suQ2hlY2tFcnJvcihmJ3t2YWwhcn0gbm90IGd0IHtwYXJhbSFyfScpCgoKQENoZWNrLnJlZ2lzdGVyKCdnZScpCmRlZiBnZV9jaGVjayhwYXJhbSwgdmFsKToKICAgIGlmIG5vdCB2YWwgPj0gcGFyYW06CiAgICAgICAgcmFpc2UgQ2hlY2suQ2hlY2tFcnJvcihmJ3t2YWwhcn0gbm90IGdlIHtwYXJhbSFyfScpCgoKQENoZWNrLnJlZ2lzdGVyKCdndCcpCmRlZiBndF9jaGVjayhwYXJhbSwgdmFsKToKICAgIGlmIG5vdCB2YWwgPiBwYXJhbToKICAgICAgICByYWlzZSBDaGVjay5DaGVja0Vycm9yKGYne3ZhbCFyfSBub3QgZ3Qge3BhcmFtIXJ9JykKCgpAQ2hlY2sucmVnaXN0ZXIoJ2VxJykKZGVmIGVxX2NoZWNrKHBhcmFtLCB2YWwpOgogICAgaWYgbm90IHZhbCA9PSBwYXJhbToKICAgICAgICByYWlzZSBDaGVjay5DaGVja0Vycm9yKGYne3ZhbCFyfSBub3QgZXEge3BhcmFtIXJ9JykKCgpAQ2hlY2sucmVnaXN0ZXIoJ2Z1bmMnKQpkZWYgZnVuY19jaGVjayhwYXJhbSwgdmFsKToKICAgIGlmIG5vdCBwYXJhbSh2YWwpOgogICAgICAgIHJhaXNlIENoZWNrLkNoZWNrRXJyb3IoZid7cGFyYW0hcn0gY2FsbCByZXR1cm5lZCBmYWxzZSBvbiB7dmFsIXJ9JykKCgpAQ2hlY2sucmVnaXN0ZXIoJ3R5cGUnKQpkZWYgbWF0Y2hlc19jaGVjayhwYXJhbSwgdmFsKToKICAgIGlmIG5vdCB0eXBlTWF0Y2godmFsLCBwYXJhbSk6CiAgICAgICAgcmFpc2UgQ2hlY2suQ2hlY2tFcnJvcihmJ3t2YWwhcn0gZm9lcyBub3QgbWF0Y2ggdHlwZSB7cGFyYW0hcn0nKQoKCkBDaGVjay5yZWdpc3RlcignaXNpbnN0YW5jZScpCmRlZiBpbnN0YW5jZV9jaGVjayhwYXJhbSwgdmFsKToKICAgIGlmIG5vdCBpc2luc3RhbmNlKHZhbCwgcGFyYW0pOgogICAgICAgIHJhaXNlIENoZWNrLkNoZWNrRXJyb3IoZid7dmFsIXJ9IG5vdCBpbnN0YW5jZSBvZiB7cGFyYW0hcn0nKQoKCmNsYXNzIENoZWNrcyhQeW9sb2FkQW5ub3RhdGlvbik6CiAgICAiIiIKICAgIFB5b2xvYWQgYW5ub3RhdGlvbiBob2xkaW5nIHNldmVyYWwgY2hlY2tzIGNhbGxlZCBvbiB0eXBlY2hlY2tpbmcuCiAgICAiIiIKCiAgICBkZWYgX19pbml0X18oCiAgICAgICAgc2VsZjogUHlvbG9hZEFubm90YXRpb24sCiAgICAgICAgKipjaGVja3M6IGRpY3Rbc3RyLCBDYWxsYWJsZVtbQW55LCBBbnldLCBOb25lVHlwZV1dLAogICAgKSAtPiBBbnk6CiAgICAgICAgIiIiCiAgICAgICAgY3JhdGVzIHRoZSBjaGVjayBvYmplY3QsZS5nCgogICAgICAgID4+PiBjbGFzcyBmb286CiAgICAgICAgLi4uICAgIGJhcjogcHlvbG9hZC5DaGVja3MoZ3Q9NCkKCiAgICAgICAgOnBhcmFtIGNoZWNrczogdGhlIGNoZWNrcyB0byBiZSBkb25lLgoKICAgICAgICA6cmV0dXJuczogc2VsZgogICAgICAgICIiIgogICAgICAgIHNlbGYuY2hlY2tzID0gY2hlY2tzCgogICAgZGVmIF9fY2FsbF9fKHNlbGY6IFB5b2xvYWRBbm5vdGF0aW9uLCB2YWw6IEFueSkgLT4gTm9uZToKICAgICAgICAiIiIKICAgICAgICBQZXJmb3JtcyB0aGUgc2V2ZXJhbCBjaGVja3MgY29udGFpbmVkIGluIGBzZWxmLmNoZWNrc2AKCiAgICAgICAgOnBhcmFtIHZhbDogVGhlIHZhbHVlIHRvIGNoZWNrCiAgICAgICAgIiIiCiAgICAgICAgZm9yIG5hbWUsIHBhcmFtcyBpbiBzZWxmLmNoZWNrcy5pdGVtcygpOgogICAgICAgICAgICBDaGVjay5jaGVjayhuYW1lLCBwYXJhbXMsIHZhbCkKCiAgICBkZWYgX19zdHJfXyhzZWxmOiBBbnkpIC0+IHN0cjoKICAgICAgICByZXQgPSAnPENoZWNrcygnCiAgICAgICAgZm9yIGssIHYgaW4gc2VsZi5jaGVja3MuaXRlbXMoKToKICAgICAgICAgICAgcmV0ICs9IGYne2t9PXt2IXJ9LCAnCiAgICAgICAgcmV0ID0gcmV0WzotMl0gKyAnKT4nCiAgICAgICAgcmV0dXJuIHJldAoKICAgIF9fcmVwcl9fID0gX19zdHJfXwoKCmNsYXNzIENoZWNrZWRBdHRyKENoZWNrcyk6CiAgICAiIiIKICAgIEEgZGVzY3JpcHRvciBjbGFzcyBwcm92aWRpbmcgYXR0cmlidXRlcyB3aGljaCBhcmUgY2hlY2tlZCBvbiBhc3NpZ25tZW50CiAgICAiIiIKCiAgICBuYW1lOiBzdHIKICAgIHZhbHVlOiBBbnkKCiAgICBkZWYgX19pbml0X18oCiAgICAgICAgc2VsZjogQW55LAogICAgICAgICoqY2hlY2tzOiBkaWN0W3N0ciwgQ2FsbGFibGVbW0FueSwgQW55XSwgTm9uZVR5cGVdXSwKICAgICkgLT4gQW55OgogICAgICAgICIiIgogICAgICAgIENyZWF0ZXMgYSBDaGVja2VkIEF0dHJpYnV0ZSBkZXNjcmlwdG9yIHdoaWNrIGRvZXMgY2hlY2tpbmcgb24gZWFjaAogICAgICAgIGFzc2lnbm1lbnQsIEUuRwoKICAgICAgICA+Pj4gY2xhc3MgZm9vOgogICAgICAgIC4uLiAgICAgYmFyID0gQ2hlY2tlZEF0dHIoZ3Q9NCkKCiAgICAgICAgOnBhcmFtIGNoZWNrczogVGhlIGNoZWNrcyB0byBwZXJmb3JtCiAgICAgICAgIiIiCiAgICAgICAgc3VwZXIoKS5fX2luaXRfXygqKmNoZWNrcykKCiAgICBkZWYgX19zZXRfbmFtZV9fKHNlbGY6IEFueSwgb2JqOiBBbnksIG5hbWU6IHN0ciwgdHlwbzogQW55ID0gTm9uZSk6CiAgICAgICAgIiIiCiAgICAgICAgc2V0cyB0aGUgbmFtZSBvZiB0aGUgYXR0cmlidXRlCiAgICAgICAgIiIiCiAgICAgICAgc2VsZi5uYW1lID0gbmFtZQogICAgICAgIHNlbGYudmFsdWUgPSBOb25lCgogICAgZGVmIF9fZ2V0X18oc2VsZjogQW55LCBvYmo6IEFueSwgdHlwZTogQW55KToKICAgICAgICAiIiIKICAgICAgICByZXR1cm5zIHRoZSB2YWx1ZSBpbiBgc2VsZi52YWx1ZWAKICAgICAgICAiIiIKICAgICAgICByZXR1cm4gc2VsZi52YWx1ZQoKICAgIGRlZiBfX3NldF9fKHNlbGY6IEFueSwgb2JqOiBBbnksIHZhbHVlOiBBbnkpOgogICAgICAgICIiIgogICAgICAgIFBlcmZvcm1zIGNoZWNrcyB0aGVuIGFzc2lnbnMgdGhlIG5ldyB2YWx1ZQogICAgICAgICIiIgogICAgICAgIHNlbGYodmFsdWUpCiAgICAgICAgc2VsZi52YWx1ZSA9IHZhbHVlCgoKY2xhc3MgQ2FzdChQeW9sb2FkQW5ub3RhdGlvbik6CiAgICAiIiIKICAgIEhvbGRzIGEgY2FzdCBvYmplY3Qgd2hpY2ggZGVzY3JpYmVzIHRoZSBjYXN0cyB0byBiZSBwZXJmb3JtZWQKICAgICIiIgogICAgQHN0YXRpY21ldGhvZAogICAgZGVmIGNhc3QodmFsOiBBbnksIHRvdHlwZTogQW55KSAtPiBBbnk6CiAgICAgICAgIiIiCiAgICAgICAgVGhlIGdyYXRlc3QgZGVhbC4KICAgICAgICBSZWN1cnNpdmVseSBjYXN0cyB0aGUgZ2l2ZW4gdmFsdWUgdG8gdGhlIHNwZWNpZmllZCBzdHJ1Y3R1cmUgb3IgdHlwZQogICAgICAgIGUuZwoKICAgICAgICA+Pj4gQ2FzdC5jYXN0KHsgMTogMn0sIGRpY3Rbc3RyLCBmbG9hdF0pCiAgICAgICAgeycxJzogMi4wfQoKICAgICAgICA6cGFyYW0gdmFsOiB0aGUgdmFsdWUgdG8gY2FzdAogICAgICAgIDpwYXJhbSB0b3R5cGU6IFRoZSB0eXBlIHN0cnVjdHVyZSB0byBiZSBjYXN0ZWQgdG8uCgogICAgICAgIDpyZXR1cm5zOiBBbiBpbnN0YW5jZSBvZiB0aGUgY2FzdGluZyB0eXBlCiAgICAgICAgIiIiCiAgICAgICAgaWYgaXNpbnN0YW5jZSh0b3R5cGUsIEdlbmVyaWNBbGlhcyk6CiAgICAgICAgICAgIGlmIHRvdHlwZS5fX29yaWdpbl9fID09IGRpY3Q6CiAgICAgICAgICAgICAgICBpZiBsZW4odG90eXBlLl9fYXJnc19fKSA9PSAyOgogICAgICAgICAgICAgICAgICAgIGt0LCB2dCA9IHRvdHlwZS5fX2FyZ3NfXwogICAgICAgICAgICAgICAgZWxpZiBsZW4odG90eXBlLl9fYXJnc19fKSA9PSAxOgogICAgICAgICAgICAgICAgICAgIGt0LCB2dCA9IEFueSwgdG90eXBlLl9fYXJnc19fWzFdCiAgICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgICAgIENhc3QuY2FzdChrLCBrdCk6IENhc3QuY2FzdCh2LCB2dCkgZm9yIGssIHYgaW4gdmFsLml0ZW1zKCkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIHN1YiA9IHRvdHlwZS5fX2FyZ3NfX1swXQogICAgICAgICAgICAgICAgcmV0dXJuIHRvdHlwZS5fX29yaWdpbl9fKFsKICAgICAgICAgICAgICAgICAgICBDYXN0LmNhc3Qodiwgc3ViKSBmb3IgdiBpbiB2YWwKICAgICAgICAgICAgICAgIF0pCiAgICAgICAgaWYgaXNpbnN0YW5jZSh0b3R5cGUsIFVuaW9uVHlwZSk6CiAgICAgICAgICAgIGVycm9ycyA9IFtdCiAgICAgICAgICAgIGZvciBzdWJ0eXBlIGluIHRvdHlwZS5fX2FyZ3NfXzoKICAgICAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgICAgICByZXR1cm4gQ2FzdC5jYXN0KHZhbCwgc3VidHlwZSkKICAgICAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgICAgICAgICBlcnJvcnMuYXBwZW5kKGUpCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICByYWlzZSBlcnJvcnMKICAgICAgICBlbHNlOgogICAgICAgICAgICByZXR1cm4gdG90eXBlKHZhbCkgaWYgbm90IGlzaW5zdGFuY2UodmFsLCB0b3R5cGUpIGVsc2UgdmFsCgogICAgZGVmIF9faW5pdF9fKHNlbGY6IFB5b2xvYWRBbm5vdGF0aW9uLCB0eXBlOiBBbnkpOgogICAgICAgICIiIgogICAgICAgIGNyZWF0ZXMgYSBjYXN0aW5nIG9iamVjdCBmb3IgdGhlIHNwZWNpZmllZCB0eXBlCiAgICAgICAgVGhlIG9iamVjdCBjYW4gdGhlbiBiZSB1c2VkIGFueXdoZXJlIGZvciBjYXN0aW5nLCBlLmcKCiAgICAgICAgPj4+IGNhc3RlciA9IENhc3QoZGljdFtzdHIsIGxpc3RbdHVwbGVbZmxvYXRdXV0pCiAgICAgICAgPj4+IHJhdyA9IHsKICAgICAgICAuLi4gICAgIDQ6ICgKICAgICAgICAuLi4gICAgICAgICBbJzEuNScsIDEwXSwKICAgICAgICAuLi4gICAgICAgICBbMTAsICcxLjUnXSwKICAgICAgICAuLi4gICAgICkKICAgICAgICAuLi4gfQogICAgICAgID4+PiBjYXN0ZXIocmF3KQogICAgICAgIHsnNCc6IFsoMS41LCAxMC4wKSwgKDEwLjAsIDEuNSldfQoKICAgICAgICA6cGFyYW0gdHlwZTogVGhlIHR5cGUgdG8gd2hpY2ggdGhlIG9iamVjdCB3aWxsIGNhc3QKCiAgICAgICAgOnJldHVybnM6IHNlbGYKICAgICAgICAiIiIKICAgICAgICBzZWxmLnR5cGUgPSB0eXBlCgogICAgZGVmIF9fY2FsbF9fKHNlbGY6IFB5b2xvYWRBbm5vdGF0aW9uLCB2YWw6IEFueSk6CiAgICAgICAgIiIiCiAgICAgICAgQ2FsbHMgdG8gdGhlIHR5cGUgc3BlY2lmaWVkIGluIHRoZSBvYmplY3QgYC50eXBlYCBhdHRyaWJ1dGUKCiAgICAgICAgOnBhcmFtIHZhbDogdGhlIHZhbHVlIHRvIGJlIGNhc3RlZAoKICAgICAgICA6cmV0dXJuOiBUaGUgY2FzdGVkIHZhbHVlCiAgICAgICAgIiIiCiAgICAgICAgdHJ5OgogICAgICAgICAgICByZXR1cm4gQ2FzdC5jYXN0KHZhbCwgc2VsZi50eXBlKQogICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgcmFpc2UgQ2FzdGluZ0Vycm9yKAogICAgICAgICAgICAgICAgZidFeGNlcHRpb24oe2V9KSB3aGlsZSBjYXN0aW5nOiB7dmFsIXJ9IHRvIHtzZWxmLnR5cGV9JywKICAgICAgICAgICAgKSBmcm9tIGUKCiAgICBkZWYgX19zdHJfXyhzZWxmKToKICAgICAgICByZXR1cm4gZidweW9sb2FkLkNhc3Qoe3NlbGYudHlwZSFzfSknCgoKY2xhc3MgQ2FzdGVkQXR0cihDYXN0KToKICAgICIiIgogICAgQSBkZXNjcmlwdG9yIGNsYXNzIHByb3ZpZGluZyBhdHRyaWJ1dGVzIHdoaWNoIGFyZSBjYXN0ZWQgb24gYXNzaWdubWVudAogICAgIiIiCgogICAgbmFtZTogc3RyCiAgICB2YWx1ZTogQW55CgogICAgZGVmIF9faW5pdF9fKHNlbGY6IENhc3QsIHR5cGU6IEFueSkgLT4gQ2FzdDoKICAgICAgICAiIiIKICAgICAgICA+Pj4gY2xhc3MgUGVyc29uOgogICAgICAgIC4uLiAgICAgYWdlID0gQ2hlY2tlZEF0dHIoZ3Q9MCkKICAgICAgICAuLi4gICAgIHBob25lID0gQ2FzdGVkQXR0cih0dXBsZVtpbnRdKQogICAgICAgIC4uLiAgICAgZGVmIF9faW5pdF9fKHNlbGYsIGFnZSwgcGhvbmUpOgogICAgICAgIC4uLiAgICAgICAgIHNlbGYuYWdlID0gYWdlCiAgICAgICAgLi4uICAgICAgICAgc2VsZi5waG9uZSA9IHBob25lCiAgICAgICAgLi4uCiAgICAgICAgPj4+IHRlbWV6ZSA9IFBlcnNvbigxNywgIjY3ODkzNjc5OCIpCiAgICAgICAgPj4+CiAgICAgICAgPj4+IHByaW50KHRlbWV6ZS5hZ2UpCiAgICAgICAgMTcKICAgICAgICA+Pj4gcHJpbnQodGVtZXplLnBob25lKQogICAgICAgICg2LCA3LCA4LCA5LCAzLCA2LCA3LCA5LCA4KQogICAgICAgID4+PgogICAgICAgID4+PiBtYmFsbGEgPSBQZXJzb24oMCwgIjEyMzQ1NiIpCiAgICAgICAgVHJhY2ViYWNrIChtb3N0IHJlY2VudCBjYWxsIGxhc3QpOgogICAgICAgICAgLi4uCiAgICAgICAgcHlvbG9hZC5DaGVjay5DaGVja0Vycm9yOiAwIG5vdCBndCAwCiAgICAgICAgIiIiCiAgICAgICAgc3VwZXIoKS5fX2luaXRfXyh0eXBlKQoKICAgIGRlZiBfX3NldF9uYW1lX18oc2VsZjogQW55LCBvYmo6IEFueSwgbmFtZTogc3RyLCB0eXBvOiBBbnkgPSBOb25lKToKICAgICAgICAiIiJkZWYgX19zZXRfbmFtZV9fKHNlbGY6IEFueSwgb2JqOiBBbnksIG5hbWU6IHN0ciwgdHlwbzogQW55ID0gTm9uZSkKICAgICAgICBzZXRkIHRoZSBuYW1lIG9mIHRoZSBhdHRyaWJ1dGUKICAgICAgICAiIiIKICAgICAgICBzZWxmLm5hbWUgPSBuYW1lCiAgICAgICAgc2VsZi52YWx1ZSA9IE5vbmUKCiAgICBkZWYgX19nZXRfXyhzZWxmOiBBbnksIG9iajogQW55LCB0eXBlOiBBbnkpOgogICAgICAgICIiImRlZiBfX2dldF9fKHNlbGY6IEFueSwgb2JqOiBBbnksIHR5cGU6IEFueSkKICAgICAgICByZXR1cm5zIHRoZSB2YWx1ZSBpbiBgc2VsZi52YWx1ZWAKICAgICAgICAiIiIKICAgICAgICByZXR1cm4gc2VsZi52YWx1ZQoKICAgIGRlZiBfX3NldF9fKHNlbGY6IEFueSwgb2JqOiBBbnksIHZhbHVlOiBBbnkpOgogICAgICAgICIiImRlZiBfX3NldF9fKHNlbGY6IEFueSwgb2JqOiBBbnksIHZhbHVlOiBBbnkpCiAgICAgICAgUGVyZm9ybXMgY2hlY2tzIHRoZW4gYXNzaWducyB0aGUgbmV3IHZhbHVlCiAgICAgICAgIiIiCiAgICAgICAgc2VsZi52YWx1ZSA9IHNlbGYodmFsdWUpCgoKZGVmIHR5cGVNYXRjaCh2YWw6IEFueSwgc3BlYzogQW55KSAtPiBib29sOgogICAgIiIiCiAgICByZWN1cnNpdmVseSBjaGVja3MgaWYgdHlwZSBtYXRjaGVzCgogICAgOnBhcmFtIHZhbDogVGhlIHZhbHVlIHRvIHR5cGVjaGVjawogICAgOnBhcmFtIHNwZWM6IFRoZSB0eXBlIHNwZWNpZmllcgoKICAgIDpyZXR1cm46IEEgYm9vbGVhbgogICAgIiIiCiAgICBpZiBzcGVjID09IGFueToKICAgICAgICByYWlzZSBUeXBlRXJyb3IoJ01heSBiZSBoYXZlIHlvdSBjb25mdXNlZCBgQW55YCBhbmQgYGFueWAnKQoKICAgIGlmIHNwZWMgPT0gQW55IG9yIHNwZWMgaXMgTm9uZSBvciB2YWwgaXMgTm9uZToKICAgICAgICByZXR1cm4gVHJ1ZQogICAgaWYgaXNpbnN0YW5jZShzcGVjLCBWYWx1ZXMpOgogICAgICAgIHJldHVybiBzcGVjKHZhbCkKICAgIGVsaWYgaXNpbnN0YW5jZShzcGVjLCBDaGVja3MpOgogICAgICAgIHRyeToKICAgICAgICAgICAgc3BlYyh2YWwpCiAgICAgICAgZXhjZXB0IENoZWNrLkNoZWNrRXJyb3I6CiAgICAgICAgICAgIHJldHVybiBGYWxzZQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHJldHVybiBUcnVlCiAgICBlbGlmIGlzaW5zdGFuY2Uoc3BlYywgR2VuZXJpY0FsaWFzKToKICAgICAgICBpZiBub3QgaXNpbnN0YW5jZSh2YWwsIHNwZWMuX19vcmlnaW5fXyk6CiAgICAgICAgICAgIHJldHVybiBGYWxzZQoKICAgICAgICBpZiBzcGVjLl9fb3JpZ2luX18gPT0gZGljdDoKICAgICAgICAgICAgaWYgbGVuKHNwZWMuX19hcmdzX18pID09IDI6CiAgICAgICAgICAgICAgICBrdCwgdnQgPSBzcGVjLl9fYXJnc19fCiAgICAgICAgICAgIGVsaWYgbGVuKHNwZWMuX19hcmdzX18pID09IDE6CiAgICAgICAgICAgICAgICBrdCwgdnQgPSBBbnksIHNwZWMuX19hcmdzX19bMV0KICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIHJldHVybiBUcnVlCgogICAgICAgICAgICBmb3IgaywgdiBpbiB2YWwuaXRlbXMoKToKICAgICAgICAgICAgICAgIGlmIG5vdCB0eXBlTWF0Y2goaywga3QpIG9yIG5vdCB0eXBlTWF0Y2godiwgdnQpOgogICAgICAgICAgICAgICAgICAgIHJldHVybiBGYWxzZQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgcmV0dXJuIFRydWUKICAgICAgICBlbHNlOgogICAgICAgICAgICBzdWIgPSBzcGVjLl9fYXJnc19fWzBdCiAgICAgICAgICAgIGZvciB2YWwgaW4gdmFsOgogICAgICAgICAgICAgICAgaWYgbm90IHR5cGVNYXRjaCh2YWwsIHN1Yik6CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEZhbHNlCiAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQogICAgZWxzZToKICAgICAgICByZXR1cm4gaXNpbnN0YW5jZSh2YWwsIHNwZWMpCgoKZGVmIGdldF9tb2R1bGUob2JqOiBBbnkpOgogICAgIiIiCiAgICBnZXRzIHRoZSBtb2R1bGUgdG8gd2hpY2ggYW4gb2JqZWN0LCBmdW5jdGlvbiBvciBjbGFzcyBiZWxvbmdzCiAgICBlLmcKCiAgICA+Pj4gY2xhc3MgZm9vOgogICAgLi4uICAgICBkZWYgYmFyKHNlbGYpOgogICAgLi4uICAgICAgICAgcGFzcwogICAgLi4uCiAgICA+Pj4gZ2V0X25hbWUoZm9vKQogICAgJ19fbWFpbl9fLmZvbycKICAgID4+PiBnZXRfbmFtZShmb28uYmFyKQogICAgJ19fbWFpbl9fLmZvby5iYXInCgogICAgOnBhcmFtIG9iajogdGhlIG9iamVjdAoKICAgIDpyZXR1cm5zOiB0aGUgbW9kdWxlCiAgICAiIiIKICAgIHJldHVybiBzeXMubW9kdWxlc1tvYmouX19tb2R1bGVfX10KCgpkZWYgcmVzb2x2ZUFubm90YXRpb25zKG9iajogVHlwZSB8IENhbGxhYmxlKSAtPiBOb25lOgogICAgIiIiCiAgICBFdmFsdWF0ZXMgYWxsIHRoZSBzdHJpbmdpemVkIGFubm90YXRpb25zIG9mIHRoZSBhcmd1bWVudAoKICAgIDpwYXJhbSBvYmo6IFRoZSBvYmplY3Qgb2Ygd2hpY2ggdG8gZXZhbHVhdGUgYW5ub3RhdGlvbnMKCiAgICA6cmV0dXJuczogTm9uZQogICAgIiIiCiAgICBpZiBpc2NsYXNzKG9iaikgb3IgaGFzYXR0cihvYmosICdfX2NsYXNzX18nKToKICAgICAgICBmb3IgaywgdiBpbiBvYmouX19hbm5vdGF0aW9uc19fLml0ZW1zKCk6CiAgICAgICAgICAgIGlmIGlzaW5zdGFuY2Uodiwgc3RyKToKICAgICAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgICAgICBvYmouX19hbm5vdGF0aW9uc19fW2tdID0gZXZhbCgKICAgICAgICAgICAgICAgICAgICAgICAgdiwKICAgICAgICAgICAgICAgICAgICAgICAgZGljdCh2YXJzKGdldF9tb2R1bGUob2JqKSkpLCBkaWN0KHZhcnMob2JqKSksCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICAgICAgICAgIHJhaXNlIEFubm90YXRpb25SZXNvbHV0aW9uRXJyb3IoCiAgICAgICAgICAgICAgICAgICAgICAgICgKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGYnRXhjZXB0aW9uOiB7ZSFzfSB3aGlsZSByZXNvbHZpbmcnCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmJyBhbm5vdGF0aW9uIHtlfT17diFyfSBvZiBvYmplY3Qge29iaiFyfScKICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICApIGZyb20gZQogICAgZWxpZiBjYWxsYWJsZShvYmopOgogICAgICAgIGZvciBrLCB2IGluIG9iai5fX2Fubm90YXRpb25zX18uaXRlbXMoKToKICAgICAgICAgICAgaWYgaXNpbnN0YW5jZSh2LCBzdHIpOgogICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgIG9iai5fX2Fubm90YXRpb25zX19ba10gPSBldmFsKHYsIG9iai5fX2dsb2JhbHNfXykKICAgICAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToKICAgICAgICAgICAgICAgICAgICByYWlzZSBBbm5vdGF0aW9uUmVzb2x1dGlvbkVycm9yKAogICAgICAgICAgICAgICAgICAgICAgICBmJ0V4Y2VwdGlvbjoge2shc30gd2hpbGUgcmVzb2x2aW5nJwogICAgICAgICAgICAgICAgICAgICAgICBmJyBhbm5vdGF0aW9uIHt2IXJ9IG9mIGZ1bmN0aW9uIHtvYmohcn0nLAogICAgICAgICAgICAgICAgICAgICAgICBmJ2dsb2JhbHM6IHtvYmouX19nbG9iYWxzX199JywKICAgICAgICAgICAgICAgICAgICApIGZyb20gZQogICAgZWxzZToKICAgICAgICByYWlzZSBBbm5vdGF0aW9uRXJyb3IoZid1bmtub3duIHJlc29sdXRpb24gbWV0aG9kIGZvciB7b2JqfScpCgoKZGVmIGFubm90YXRlKGZ1bmM6IENhbGxhYmxlLCBvbG9hZDogYm9vbCA9IEZhbHNlKSAtPiBDYWxsYWJsZToKICAgICIiIgogICAgcmV0dXJucyBhIHdyYXBwZXIgb3ZlciB0aGUgcGFzc2VkIGZ1bmN0aW9uCiAgICB3aGljaCB0eXBlY2hlY2tzIGFyZ3VtZW50cyBvbiBlYWNoIGNhbGwuCgogICAgOnBhcmFtIGZ1bmM6IHRoZSBmdW5jdGlvbiB0byBhbm5vdGF0ZQogICAgOnBhcmFtIG9sb2FkOiBpbnRlcm5hbCwgaWYgc2V0IHRvIFRydWUsIHdpbGwgcmFpc2UgXAogICAgYEludGVybmFsQW5ub3RhdGlvbkVycm9yYCBvbiB0eXBlIG1pc21hdGNoCgogICAgOnJldHVybnM6IHRoZSB3cmFwcGVyIGZ1bmN0aW9uCiAgICAiIiIKICAgIGlmIGlzY2xhc3MoZnVuYyk6CiAgICAgICAgcmV0dXJuIGFubm90YXRlQ2xhc3MoZnVuYykKICAgIGlmIGxlbihmdW5jLl9fYW5ub3RhdGlvbnNfXykgPT0gMDoKICAgICAgICByYWlzZSBXYXJuaW5nKGYnZnVuY3Rpb24ge2dldF9uYW1lKGZ1bmMpfSBpcyBub3QgYW5ub3RhdGVkJykKICAgICAgICByZXR1cm4gZnVuYwoKICAgIEB3cmFwcyhmdW5jKQogICAgZGVmIHdyYXBwZXIoKmFyZ3MsICoqa3cpOgogICAgICAgIGkgPSAwCiAgICAgICAgd2hpbGUgc3RyIGluIG1hcCh0eXBlLCBmdW5jLl9fYW5ub3RhdGlvbnNfXy52YWx1ZXMoKSkgYW5kIGkgPCAxMDoKICAgICAgICAgICAgcmVzb2x2ZUFubm90YXRpb25zKGZ1bmMpCiAgICAgICAgICAgIGkgKz0gMQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGlmIGkgPT0gMTA6CiAgICAgICAgICAgICAgICByYWlzZSBBbm5vdGF0aW9uUmVzb2x1dGlvbkVycm9yKGZ1bmMuX19hbm5vdGF0aW9uc19fKQogICAgICAgIGFubm8gPSBmdW5jLl9fYW5ub3RhdGlvbnNfXy5jb3B5KCkKICAgICAgICBpZiAncmV0dXJuJyBpbiBhbm5vOgogICAgICAgICAgICBhbm5vLnBvcCgncmV0dXJuJykKICAgICAgICBuYW1lcyA9IGxpc3QoYW5uby5rZXlzKCkpCiAgICAgICAgdmFscyA9IHt9CiAgICAgICAgdHJ5OgogICAgICAgICAgICBpZiBmdW5jLl9fZGVmYXVsdHNfXzoKICAgICAgICAgICAgICAgIGZvciBpLCB2IGluIGVudW1lcmF0ZShyZXZlcnNlZChmdW5jLl9fZGVmYXVsdHNfXykpOgogICAgICAgICAgICAgICAgICAgIHZhbHNbbmFtZXNbLTEgLSBpXV0gPSB2CiAgICAgICAgICAgIGZvciBpLCB2IGluIGVudW1lcmF0ZShhcmdzKToKICAgICAgICAgICAgICAgIHZhbHNbbmFtZXNbaV1dID0gdgogICAgICAgICAgICB2YWxzLnVwZGF0ZShrdykKICAgICAgICBleGNlcHQgSW5kZXhFcnJvciBhcyBlOgogICAgICAgICAgICByYWlzZSBBbm5vdGF0aW9uRXJyb3IoCiAgICAgICAgICAgICAgICBmJ1dhcyBmdW5jdGlvbiB7Z2V0X25hbWUoZnVuYyl9IHByb3Blcmx5IGFubm90YXRlZD8sIGhhcycKICAgICAgICAgICAgICAgIGYnIHtsZW4oYW5ubyl9IGFubm90YXRpb25zIGJ1dCB7bGVuKGFyZ3MpfSBhcmd1bWVudHMgcGFzc2VkJywKICAgICAgICAgICAgKSBmcm9tIGUKCiAgICAgICAgZXJyb3JzID0gW10KICAgICAgICBmb3IgaywgdiBpbiB2YWxzLml0ZW1zKCk6CiAgICAgICAgICAgIGlmIGlzaW5zdGFuY2UoYW5ub1trXSwgQ2FzdCk6CiAgICAgICAgICAgICAgICB2YWxzW2tdID0gYW5ub1trXSh2KQogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgaWYgbm90IHR5cGVNYXRjaCh2LCBhbm5vW2tdKToKICAgICAgICAgICAgICAgIGlmIG9sb2FkOgogICAgICAgICAgICAgICAgICAgIHJhaXNlIEludGVybmFsQW5ub3RhdGlvbkVycm9yKCkKICAgICAgICAgICAgICAgIGVycm9ycy5hcHBlbmQoCiAgICAgICAgICAgICAgICAgICAgQW5ub3RhdGlvbkVycm9yKAogICAgICAgICAgICAgICAgICAgICAgICBmJ1ZhbHVlOiB7diFyfSBkb2VzIG5vdCBtYXRjaCBhbm5vdGF0aW9uOiB7YW5ub1trXSFyfScKICAgICAgICAgICAgICAgICAgICAgICAgZicgZm9yIGFyZ3VtZW50IHtrIXJ9IG9mIGZ1bmN0aW9uIHtnZXRfbmFtZShmdW5jKX0nLAogICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICApCiAgICAgICAgaWYgbGVuKGVycm9ycykgPiAwOgogICAgICAgICAgICByYWlzZSBBbm5vdGF0aW9uRXJyb3JzKGVycm9ycykKCiAgICAgICAgcmV0ID0gZnVuYygqKnZhbHMpCiAgICAgICAgaWYgJ3JldHVybicgaW4gZnVuYy5fX2Fubm90YXRpb25zX186CiAgICAgICAgICAgIGFubiA9IGZ1bmMuX19hbm5vdGF0aW9uc19fWydyZXR1cm4nXQogICAgICAgICAgICBpZiBub3QgdHlwZU1hdGNoKHJldCwgYW5uKToKICAgICAgICAgICAgICAgIHJhaXNlIEFubm90YXRpb25FcnJvcigKICAgICAgICAgICAgICAgICAgICBmJ3JldHVybiB2YWx1ZSB7cmV0IXJ9IGRvZXMgbm90IG1hdGNoIGFubm90YXRpb246ICcKICAgICAgICAgICAgICAgICAgICBmJ3thbm59IG9mIGZ1bmN0aW9uIHtnZXRfbmFtZShmdW5jKX0nLAogICAgICAgICAgICAgICAgKQogICAgICAgIHJldHVybiByZXQKICAgIHdyYXBwZXIuX19weW9kX2Fubm90YXRlX18gPSBmdW5jCiAgICByZXR1cm4gd3JhcHBlcgoKCl9fb3ZlcmxvYWRzX186IGRpY3Rbc3RyLCBsaXN0W0NhbGxhYmxlXV0gPSB7fQoKCmRlZiBvdmVybG9hZChmdW5jOiBDYWxsYWJsZSwgbmFtZTogc3RyIHwgTm9uZSA9IE5vbmUpIC0+IENhbGxhYmxlOgogICAgIiIiCiAgICByZXR1cm5zIGEgd3JhcHBlciBvdmVyIHRoZSBwYXNzZWQgZnVuY3Rpb24KICAgIHdoaWNoIHR5cGVjaGVja3MgYXJndW1lbnRzIG9uIGVhY2ggY2FsbAogICAgYW5kIGZpbmRzIHRoZSBmdW5jdGlvbiBpbnN0YW5jZSB3aXRoIHNhbWUgbmFtZSB3aGljaCBkb2VzIG5vdCByYWlzZQogICAgYW4gYEludGVybmFsQW5ub3RhdGlvbkVycm9yYCBleGNlcHRpb24uCiAgICBpZiBgZnVuY2AgaXMgYSBzdHJpbmcsIG92ZXJsb2FkIHdpbGwgcmV0dXJuIGFub3RoZXIgcmVnaXN0ZXJpbmcgZnVuY3Rpb24KICAgIHdoaWNoIHdpbGwgcmVnaXN0ZXIgdG8gdGhlIHNwZWNpZmllZCBuYW1lLgoKICAgIFRoZSBkZWNvcmF0ZWQgZnVuY3Rpb24gdGFrZXMgc29tZSBuZXcgYXR0cmlidXRlczoKICAgIC0gX19weW9kX2Fubm90YXRlX186IFRoZSByYXcgZnVuY3Rpb24KICAgIC0gX19weW9kX292ZXJsb2Fkc19fOiBUaGUgbGlzdCBvZiB0aGUgZnVuY3Rpb24gb3ZlcmxvYWRzCiAgICAtIG92ZXJsb2FkKGZ1bmM6IENhbGxhYmxlKSByZWdpc3RlcnMgdGhlIHBhc3NlZCBmdW5jdGlvbiB1bmRlciB0aGUgc2FtZSBcCiAgICAgIG5hbWUuCgogICAgOnBhcmFtIGZ1bmM6IHRoZSBmdW5jdGlvbiB0byBhbm5vdGF0ZQogICAgOnBhcmFtIG5hbWU6IG9wdGlvbmFsIG5hbWUgdW5kZXIgd2hpY2ggdG8gcmVnaXN0ZXIuCgogICAgOnJldHVybjogdGhlIHdyYXBwZXIgZnVuY3Rpb24KICAgICIiIgogICAgaWYgaXNpbnN0YW5jZShmdW5jLCBzdHIpOgogICAgICAgIHJldHVybiBwYXJ0aWFsKG92ZXJsb2FkLCBuYW1lPWZ1bmMpCiAgICBpZiBuYW1lIGlzIE5vbmUgb3Igbm90IGlzaW5zdGFuY2UobmFtZSwgc3RyKToKICAgICAgICBuYW1lID0gZ2V0X25hbWUoZnVuYykKICAgIGlmIG5hbWUgbm90IGluIF9fb3ZlcmxvYWRzX186CiAgICAgICAgX19vdmVybG9hZHNfX1tuYW1lXSA9IFtdCiAgICBfX292ZXJsb2Fkc19fW25hbWVdLmFwcGVuZChhbm5vdGF0ZShmdW5jLCBUcnVlKSkKCiAgICBAd3JhcHMoZnVuYykKICAgIGRlZiB3cmFwcGVyKCphcmdzLCAqKmt3KToKICAgICAgICBmb3IgZiBpbiBfX292ZXJsb2Fkc19fW25hbWVdOgogICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICB2YWwgPSBmKCphcmdzLCAqKmt3KQogICAgICAgICAgICBleGNlcHQgSW50ZXJuYWxBbm5vdGF0aW9uRXJyb3I6CiAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgYnJlYWsKICAgICAgICBlbHNlOgogICAgICAgICAgICByYWlzZSBPdmVybG9hZEVycm9yKAogICAgICAgICAgICAgICAgZidObyBvdmVybG9hZCBvZiBmdW5jdGlvbjoge2dldF9uYW1lKGZ1bmMpfScKICAgICAgICAgICAgICAgIGYnIG1hdGNoZXMgdHlwZXMgb2YgYXJndW1lbnRzOiB7YXJnc30sIHtrd30nLAogICAgICAgICAgICApCiAgICAgICAgcmV0dXJuIHZhbAoKICAgIHdyYXBwZXIuX19weW9kX292ZXJsb2Fkc19fID0gX19vdmVybG9hZHNfX1tuYW1lXQogICAgd3JhcHBlci5fX3B5b2Rfb3ZlcmxvYWRzX25hbWVfXyA9IG5hbWUKICAgIHdyYXBwZXIub3ZlcmxvYWQgPSBwYXJ0aWFsKG92ZXJsb2FkLCBuYW1lPW5hbWUpCgogICAgcmV0dXJuIHdyYXBwZXIKCgpkZWYgYW5ub3RhdGVDbGFzcyhjbHM6IEFueSk6CiAgICAiIiIKICAgIEFubm90YXRlcyBhIGNsYXNzIG9iamVjdCwgd3JhcHBpbmcgYW5kIHJlcGxhY2luZyBvdmVyIGl0J3MgX19zZXRhdHRyX18KICAgIGFuZCB0eXBlY2hlY2tpbmcgb3ZlciBlYWNoIGF0dHJpYnV0ZSBhc3NpZ25tZW50LgogICAgSWYgbm8gYW5ub3RhdGlvbiBmb3IgdGhlIHBhc3NlZCBvYmplY3QgZm91bmQgaXQgaWdub3JlcyBpdCB0aWxsIGl0IGlzCiAgICBmb3VuZAogICAgaXQgcmVjdXJzaXZlbHkgYW5ub3RhdGVzIHRoZSBjbGFzc2VzIG1ldGhvZHMgZXhjZXB0IGBfX3B5b2Rfbm9yZWN1cl9fYAogICAgYXR0cmlidXRlIGlzIGRlZmluZXMKICAgICIiIgogICAgaWYgbm90IGhhc2F0dHIoY2xzLCAnX19hbm5vdGF0aW9uc19fJyk6CiAgICAgICAgY2xzLl9fYW5ub3RhdGlvbnNfXyA9IHt9CiAgICBpZiBpc2luc3RhbmNlKGNscywgYm9vbCk6CiAgICAgICAgcmV0dXJuIHBhcnRpYWwoYW5ub3RhdGUsIHJlY3VyPWNscykKICAgIHJlY3VyID0gbm90IGhhc2F0dHIoY2xzLCAnX19weW9kX25vcmVjdXJfXycpCiAgICBzZXR0ZXIgPSBjbHMuX19zZXRhdHRyX18KICAgIGlmIHJlY3VyOgogICAgICAgIGZvciB4IGluIGRpcihjbHMpOgogICAgICAgICAgICBpZiBoYXNhdHRyKGdldGF0dHIoY2xzLCB4KSwgJ19fYW5ub3RhdGlvbnNfXycpOgogICAgICAgICAgICAgICAgc2V0YXR0cigKICAgICAgICAgICAgICAgICAgICBjbHMsCiAgICAgICAgICAgICAgICAgICAgeCwKICAgICAgICAgICAgICAgICAgICBhbm5vdGF0ZSgKICAgICAgICAgICAgICAgICAgICAgICAgZ2V0YXR0cigKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNscywKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHgsCiAgICAgICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICkKCiAgICBAd3JhcHMoY2xzLl9fc2V0YXR0cl9fKQogICAgZGVmIG5ld19zZXR0ZXIoc2VsZjogQW55LCBuYW1lOiBzdHIsIHZhbHVlOiBBbnkpIC0+IEFueToKICAgICAgICBpZiBhbnkoaXNpbnN0YW5jZSh4LCBzdHIpIGZvciB4IGluIHNlbGYuX19hbm5vdGF0aW9uc19fLnZhbHVlcygpKToKICAgICAgICAgICAgcmVzb2x2ZUFubm90YXRpb25zKHNlbGYpCgogICAgICAgIGlmIG5hbWUgbm90IGluIHNlbGYuX19hbm5vdGF0aW9uc19fOgogICAgICAgICAgICByZXR1cm4gc2V0dGVyKHNlbGYsIG5hbWUsIHZhbHVlKSAgIyBkbyBub3QgY2hlY2sgaWYgbm8gYW5ub3RhdGlvbnMKICAgICAgICBlbGlmIGlzaW5zdGFuY2Uoc2VsZi5fX2Fubm90YXRpb25zX19bbmFtZV0sIENhc3QpOgogICAgICAgICAgICByZXR1cm4gc2V0dGVyKHNlbGYsIG5hbWUsIHNlbGYuX19hbm5vdGF0aW9uc19fW25hbWVdKHZhbHVlKSkKICAgICAgICBlbGlmIG5vdCB0eXBlTWF0Y2godmFsdWUsIHNlbGYuX19hbm5vdGF0aW9uc19fW25hbWVdKToKICAgICAgICAgICAgcmFpc2UgQW5ub3RhdGlvbkVycm9yKAogICAgICAgICAgICAgICAgZid2YWx1ZSB7dmFsdWUhcn0gZG9lcyBub3QgbWF0Y2ggYW5ub3RhdGlvbicKICAgICAgICAgICAgICAgIGYnb2YgYXR0cmlidXRlOiB7bmFtZSFyfTp7c2VsZi5fX2Fubm90YXRpb25zX19bbmFtZV0hcn0nCiAgICAgICAgICAgICAgICBmJyBvZiBvYmplY3Qgb2YgY2xhc3Mge2dldF9uYW1lKGNscyl9JywKICAgICAgICAgICAgKQogICAgICAgIHJldHVybiBzZXR0ZXIoc2VsZiwgbmFtZSwgdmFsdWUpCiAgICBjbHMuX19zZXRhdHRyX18gPSBuZXdfc2V0dGVyCiAgICByZXR1cm4gY2xzCgoKX192ZXJzaW9uX18gPSAnMi4wLjAnCl9fYXV0aG9yX18gPSAna2VuLW1vcmVsJwo",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAuUgAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"paste",
					null,
					"AQAAAAAAAAAAAAAAzlIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAM5SAAAAAAAAz1IAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzlIAAAAAAADOUgAAAAAAAAAAAAAAwGhA"
				],
				[
					43,
					1,
					"left_delete",
					null,
					"AQAAAM1SAAAAAAAAzVIAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAAzlIAAAAAAADOUgAAAAAAAAAAAAAAwGhA"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAM1SAAAAAAAAzlIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzVIAAAAAAADNUgAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"left_delete",
					null,
					"AQAAAMNSAAAAAAAAw1IAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAAxFIAAAAAAADEUgAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAMNSAAAAAAAAxFIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAw1IAAAAAAADDUgAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"left_delete",
					null,
					"AQAAAK5SAAAAAAAArlIAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAAr1IAAAAAAACvUgAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAK5SAAAAAAAAr1IAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArlIAAAAAAACuUgAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"left_delete",
					null,
					"AQAAALRSAAAAAAAAtFIAAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAAtVIAAAAAAAC1UgAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAALRSAAAAAAAAtVIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtFIAAAAAAAC0UgAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"left_delete",
					null,
					"AQAAAJ9SAAAAAAAAn1IAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAoFIAAAAAAACgUgAAAAAAAAAAAAAAAAAA"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAJ9SAAAAAAAAoFIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAn1IAAAAAAACfUgAAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAP4AAAAAAAAA/wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/gAAAAAAAAD+AAAAAAAAAAAAAAAAAPC/"
				],
				[
					115,
					1,
					"insert",
					{
						"characters": " get"
					},
					"BAAAAP8AAAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAABAQAAAAAAAAAAAAABAQAAAAAAAAIBAAAAAAAAAAAAAAIBAAAAAAAAAwEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/wAAAAAAAAD/AAAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAAAMBAAAAAAAABAEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAwEAAAAAAAADAQAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert_completion",
					{
						"completion": "getmodule",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "getmodule"
					},
					"AgAAAAABAAAAAAAAAAEAAAAAAAAEAAAAZ2V0bQABAAAAAAAACQEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAEAAAAAAAAEAQAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"python_fiximports",
					null,
					"AgAAANkAAAAAAAAA9wAAAAAAAAAAAAAAGwEAAAAAAAAbAQAAAAAAAAsAAABlLCBnZXRtb2R1bA",
					"AQAAAAAAAAABAAAACQEAAAAAAAAJAQAAAAAAAAAAAAAAAPC/"
				],
				[
					138,
					1,
					"insert",
					{
						"characters": "\n\t"
					},
					"AwAAAJ8hAAAAAAAAoCEAAAAAAAAAAAAAoCEAAAAAAACwIQAAAAAAAAAAAACwIQAAAAAAALQhAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnyEAAAAAAACfIQAAAAAAAAAAAAAAAPC/"
				],
				[
					142,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAO4hAAAAAAAA7yEAAAAAAAAAAAAA7yEAAAAAAAADIgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7iEAAAAAAADuIQAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"left_delete",
					null,
					"AQAAAP8hAAAAAAAA/yEAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAAyIAAAAAAAADIgAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					1,
					"left_delete",
					null,
					"AQAAAF4zAAAAAAAAXjMAAAAAAAB4AQAACgpkZWYgZ2V0X21vZHVsZShvYmo6IEFueSk6CiAgICAiIiIKICAgIGdldHMgdGhlIG1vZHVsZSB0byB3aGljaCBhbiBvYmplY3QsIGZ1bmN0aW9uIG9yIGNsYXNzIGJlbG9uZ3MKICAgIGUuZwoKICAgID4+PiBjbGFzcyBmb286CiAgICAuLi4gICAgIGRlZiBiYXIoc2VsZik6CiAgICAuLi4gICAgICAgICBwYXNzCiAgICAuLi4KICAgID4+PiBnZXRfbmFtZShmb28pCiAgICAnX19tYWluX18uZm9vJwogICAgPj4+IGdldF9uYW1lKGZvby5iYXIpCiAgICAnX19tYWluX18uZm9vLmJhcicKCiAgICA6cGFyYW0gb2JqOiB0aGUgb2JqZWN0CgogICAgOnJldHVybnM6IHRoZSBtb2R1bGUKICAgICIiIgogICAgcmV0dXJuIHN5cy5tb2R1bGVzW29iai5fX21vZHVsZV9fXQ",
					"AQAAAAAAAAABAAAAXjMAAAAAAADWNAAAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					1,
					"left_delete",
					null,
					"AQAAAF8zAAAAAAAAXzMAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAYDMAAAAAAABgMwAAAAAAAAAAAAAAAAAA"
				],
				[
					172,
					1,
					"",
					null,
					"AQAAAD81AAAAAAAASDUAAAAAAAAKAAAAZ2V0X21vZHVsZQ",
					"AQAAAAAAAAABAAAAPzUAAAAAAABJNQAAAAAAAAAAAAAAAPC/"
				],
				[
					187,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAAmVEAAAAAAACZUQAAAAAAAAAAAAAAAAAA"
				],
				[
					195,
					1,
					"insert",
					{
						"characters": "oload="
					},
					"BgAAAL5HAAAAAAAAv0cAAAAAAAAAAAAAv0cAAAAAAADARwAAAAAAAAAAAADARwAAAAAAAMFHAAAAAAAAAAAAAMFHAAAAAAAAwkcAAAAAAAAAAAAAwkcAAAAAAADDRwAAAAAAAAAAAADDRwAAAAAAAMRHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvkcAAAAAAAC+RwAAAAAAAAAAAAAAAPC/"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHlRAAAAAAAAelEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeVEAAAAAAAB5UQAAAAAAAAAAAAAAAAAA"
				],
				[
					203,
					1,
					"left_delete",
					null,
					"AQAAAHlRAAAAAAAAeVEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAelEAAAAAAAB6UQAAAAAAAAAAAAAAAPC/"
				],
				[
					207,
					1,
					"left_delete",
					null,
					"AQAAAHhRAAAAAAAAeFEAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAeVEAAAAAAAB5UQAAAAAAAAAAAAAAAPC/"
				],
				[
					209,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAHhRAAAAAAAAeVEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeFEAAAAAAAB4UQAAAAAAAAAAAAAAAPC/"
				],
				[
					223,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"AgAAAGVDAAAAAAAAZkMAAAAAAAAAAAAAZkMAAAAAAABnQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZUMAAAAAAABlQwAAAAAAAAAAAAAAAAAA"
				],
				[
					224,
					1,
					"insert",
					{
						"characters": "def"
					},
					"AwAAAGdDAAAAAAAAaEMAAAAAAAAAAAAAaEMAAAAAAABpQwAAAAAAAAAAAABpQwAAAAAAAGpDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZ0MAAAAAAABnQwAAAAAAAAAAAAAAAPC/"
				],
				[
					225,
					1,
					"insert",
					{
						"characters": " unan"
					},
					"BQAAAGpDAAAAAAAAa0MAAAAAAAAAAAAAa0MAAAAAAABsQwAAAAAAAAAAAABsQwAAAAAAAG1DAAAAAAAAAAAAAG1DAAAAAAAAbkMAAAAAAAAAAAAAbkMAAAAAAABvQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAakMAAAAAAABqQwAAAAAAAAAAAAAAAPC/"
				],
				[
					226,
					1,
					"insert",
					{
						"characters": "notate"
					},
					"BgAAAG9DAAAAAAAAcEMAAAAAAAAAAAAAcEMAAAAAAABxQwAAAAAAAAAAAABxQwAAAAAAAHJDAAAAAAAAAAAAAHJDAAAAAAAAc0MAAAAAAAAAAAAAc0MAAAAAAAB0QwAAAAAAAAAAAAB0QwAAAAAAAHVDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAb0MAAAAAAABvQwAAAAAAAAAAAAAAAPC/"
				],
				[
					227,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAHVDAAAAAAAAd0MAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdUMAAAAAAAB1QwAAAAAAAAAAAAAAAPC/"
				],
				[
					229,
					1,
					"insert",
					{
						"characters": "func;"
					},
					"BQAAAHZDAAAAAAAAd0MAAAAAAAAAAAAAd0MAAAAAAAB4QwAAAAAAAAAAAAB4QwAAAAAAAHlDAAAAAAAAAAAAAHlDAAAAAAAAekMAAAAAAAAAAAAAekMAAAAAAAB7QwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdkMAAAAAAAB2QwAAAAAAAAAAAAAAAPC/"
				],
				[
					230,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHtDAAAAAAAAfEMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAe0MAAAAAAAB7QwAAAAAAAAAAAAAAAPC/"
				],
				[
					231,
					2,
					"left_delete",
					null,
					"AgAAAHtDAAAAAAAAe0MAAAAAAAABAAAAIHpDAAAAAAAAekMAAAAAAAABAAAAOw",
					"AQAAAAAAAAABAAAAfEMAAAAAAAB8QwAAAAAAAAAAAAAAAPC/"
				],
				[
					232,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAHpDAAAAAAAAe0MAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAekMAAAAAAAB6QwAAAAAAAAAAAAAAAPC/"
				],
				[
					233,
					1,
					"insert",
					{
						"characters": " C"
					},
					"AgAAAHtDAAAAAAAAfEMAAAAAAAAAAAAAfEMAAAAAAAB9QwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAe0MAAAAAAAB7QwAAAAAAAAAAAAAAAPC/"
				],
				[
					234,
					1,
					"insert_completion",
					{
						"completion": "Callable",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "Callable"
					},
					"AgAAAHxDAAAAAAAAfEMAAAAAAAABAAAAQ3xDAAAAAAAAhEMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfUMAAAAAAAB9QwAAAAAAAAAAAAAAAPC/"
				],
				[
					236,
					1,
					"insert",
					{
						"characters": " -"
					},
					"AgAAAIVDAAAAAAAAhkMAAAAAAAAAAAAAhkMAAAAAAACHQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhUMAAAAAAACFQwAAAAAAAAAAAAAAAPC/"
				],
				[
					237,
					1,
					"left_delete",
					null,
					"AQAAAIZDAAAAAAAAhkMAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAh0MAAAAAAACHQwAAAAAAAAAAAAAAAPC/"
				],
				[
					238,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"AwAAAIZDAAAAAAAAh0MAAAAAAAAAAAAAh0MAAAAAAACIQwAAAAAAAAAAAACIQwAAAAAAAIlDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhkMAAAAAAACGQwAAAAAAAAAAAAAAAPC/"
				],
				[
					239,
					1,
					"insert_completion",
					{
						"completion": "->",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "ret"
					},
					"AgAAAIZDAAAAAAAAhkMAAAAAAAADAAAAcmV0hkMAAAAAAACIQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiUMAAAAAAACJQwAAAAAAAAAAAAAAAPC/"
				],
				[
					240,
					1,
					"insert",
					{
						"characters": " Ca"
					},
					"AwAAAIhDAAAAAAAAiUMAAAAAAAAAAAAAiUMAAAAAAACKQwAAAAAAAAAAAACKQwAAAAAAAItDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiEMAAAAAAACIQwAAAAAAAAAAAAAAAPC/"
				],
				[
					242,
					1,
					"insert_completion",
					{
						"completion": "Callable",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "Callable"
					},
					"AgAAAIlDAAAAAAAAiUMAAAAAAAACAAAAQ2GJQwAAAAAAAJFDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAi0MAAAAAAACLQwAAAAAAAAAAAAAAAPC/"
				],
				[
					243,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAJFDAAAAAAAAkkMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkUMAAAAAAACRQwAAAAAAAAAAAAAAAPC/"
				],
				[
					244,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJJDAAAAAAAAk0MAAAAAAAAAAAAAk0MAAAAAAACXQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkkMAAAAAAACSQwAAAAAAAAAAAAAAAPC/"
				],
				[
					245,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAJdDAAAAAAAAmEMAAAAAAAAAAAAAmEMAAAAAAACZQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAl0MAAAAAAACXQwAAAAAAAAAAAAAAAPC/"
				],
				[
					246,
					1,
					"insert",
					{
						"characters": " ha"
					},
					"AwAAAJlDAAAAAAAAmkMAAAAAAAAAAAAAmkMAAAAAAACbQwAAAAAAAAAAAACbQwAAAAAAAJxDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmUMAAAAAAACZQwAAAAAAAAAAAAAAAPC/"
				],
				[
					247,
					1,
					"insert_completion",
					{
						"completion": "hasattr",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "hasattr"
					},
					"AgAAAJpDAAAAAAAAmkMAAAAAAAACAAAAaGGaQwAAAAAAAKFDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnEMAAAAAAACcQwAAAAAAAAAAAAAAAPC/"
				],
				[
					248,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAKFDAAAAAAAAo0MAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoUMAAAAAAAChQwAAAAAAAAAAAAAAAPC/"
				],
				[
					250,
					1,
					"insert",
					{
						"characters": "func"
					},
					"BAAAAKJDAAAAAAAAo0MAAAAAAAAAAAAAo0MAAAAAAACkQwAAAAAAAAAAAACkQwAAAAAAAKVDAAAAAAAAAAAAAKVDAAAAAAAApkMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAokMAAAAAAACiQwAAAAAAAAAAAAAAAPC/"
				],
				[
					251,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKZDAAAAAAAAp0MAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApkMAAAAAAACmQwAAAAAAAAAAAAAAAPC/"
				],
				[
					252,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKdDAAAAAAAAqEMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAp0MAAAAAAACnQwAAAAAAAAAAAAAAAPC/"
				],
				[
					253,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAKhDAAAAAAAAqkMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqEMAAAAAAACoQwAAAAAAAAAAAAAAAPC/"
				],
				[
					254,
					1,
					"insert",
					{
						"characters": "__py"
					},
					"BAAAAKlDAAAAAAAAqkMAAAAAAAAAAAAAqkMAAAAAAACrQwAAAAAAAAAAAACrQwAAAAAAAKxDAAAAAAAAAAAAAKxDAAAAAAAArUMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqUMAAAAAAACpQwAAAAAAAAAAAAAAAPC/"
				],
				[
					256,
					1,
					"insert_completion",
					{
						"completion": "__pyod_annotate__",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "__pyod_annotate__"
					},
					"AgAAAKlDAAAAAAAAqUMAAAAAAAAEAAAAX19wealDAAAAAAAAukMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArUMAAAAAAACtQwAAAAAAAAAAAAAAAPC/"
				],
				[
					258,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAALxDAAAAAAAAvUMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvEMAAAAAAAC8QwAAAAAAAAAAAAAAAPC/"
				],
				[
					259,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CQAAAL1DAAAAAAAAvkMAAAAAAAAAAAAAvkMAAAAAAADCQwAAAAAAAAAAAADCQwAAAAAAAMZDAAAAAAAAAAAAAMZDAAAAAAAAx0MAAAAAAAAAAAAAx0MAAAAAAADIQwAAAAAAAAAAAADIQwAAAAAAAMlDAAAAAAAAAAAAAMlDAAAAAAAAykMAAAAAAAAAAAAAykMAAAAAAADLQwAAAAAAAAAAAADLQwAAAAAAAMxDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvUMAAAAAAAC9QwAAAAAAAAAAAAAAAPC/"
				],
				[
					260,
					1,
					"insert",
					{
						"characters": " func"
					},
					"BQAAAMxDAAAAAAAAzUMAAAAAAAAAAAAAzUMAAAAAAADOQwAAAAAAAAAAAADOQwAAAAAAAM9DAAAAAAAAAAAAAM9DAAAAAAAA0EMAAAAAAAAAAAAA0EMAAAAAAADRQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzEMAAAAAAADMQwAAAAAAAAAAAAAAAPC/"
				],
				[
					261,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAANFDAAAAAAAA0kMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0UMAAAAAAADRQwAAAAAAAAAAAAAAAPC/"
				],
				[
					262,
					1,
					"insert",
					{
						"characters": "__py"
					},
					"BAAAANJDAAAAAAAA00MAAAAAAAAAAAAA00MAAAAAAADUQwAAAAAAAAAAAADUQwAAAAAAANVDAAAAAAAAAAAAANVDAAAAAAAA1kMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0kMAAAAAAADSQwAAAAAAAAAAAAAAAPC/"
				],
				[
					263,
					1,
					"insert_completion",
					{
						"completion": "__pyod_annotate__",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "__pyod_annotate__"
					},
					"AgAAANJDAAAAAAAA0kMAAAAAAAAEAAAAX19wedJDAAAAAAAA40MAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1kMAAAAAAADWQwAAAAAAAAAAAAAAAPC/"
				],
				[
					267,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAONDAAAAAAAA5EMAAAAAAAAAAAAA5EMAAAAAAADsQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA40MAAAAAAADjQwAAAAAAAAAAAAAAAPC/"
				],
				[
					268,
					1,
					"left_delete",
					null,
					"AQAAAOhDAAAAAAAA6EMAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAA7EMAAAAAAADsQwAAAAAAAAAAAAAAAPC/"
				],
				[
					269,
					1,
					"insert",
					{
						"characters": "else:"
					},
					"BQAAAOhDAAAAAAAA6UMAAAAAAAAAAAAA6UMAAAAAAADqQwAAAAAAAAAAAADqQwAAAAAAAOtDAAAAAAAAAAAAAOtDAAAAAAAA7EMAAAAAAAAAAAAA7EMAAAAAAADtQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6EMAAAAAAADoQwAAAAAAAAAAAAAAAPC/"
				],
				[
					270,
					1,
					"insert",
					{
						"characters": "\nretur"
					},
					"CAAAAO1DAAAAAAAA7kMAAAAAAAAAAAAA7kMAAAAAAADyQwAAAAAAAAAAAADyQwAAAAAAAPZDAAAAAAAAAAAAAPZDAAAAAAAA90MAAAAAAAAAAAAA90MAAAAAAAD4QwAAAAAAAAAAAAD4QwAAAAAAAPlDAAAAAAAAAAAAAPlDAAAAAAAA+kMAAAAAAAAAAAAA+kMAAAAAAAD7QwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7UMAAAAAAADtQwAAAAAAAAAAAAAAAPC/"
				],
				[
					271,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAPtDAAAAAAAA/EMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+0MAAAAAAAD7QwAAAAAAAAAAAAAAAPC/"
				],
				[
					272,
					1,
					"insert",
					{
						"characters": " func"
					},
					"BQAAAPxDAAAAAAAA/UMAAAAAAAAAAAAA/UMAAAAAAAD+QwAAAAAAAAAAAAD+QwAAAAAAAP9DAAAAAAAAAAAAAP9DAAAAAAAAAEQAAAAAAAAAAAAAAEQAAAAAAAABRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/EMAAAAAAAD8QwAAAAAAAAAAAAAAAPC/"
				],
				[
					277,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAJEAAAAAAAAA0QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAkQAAAAAAAACRAAAAAAAAAAAAAAAoGNA"
				],
				[
					282,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAJEAAAAAAAAA0QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAkQAAAAAAAACRAAAAAAAAAAAAAAAAAAA"
				],
				[
					284,
					1,
					"insert",
					{
						"characters": "\n\ndef"
					},
					"BQAAAAJEAAAAAAAAA0QAAAAAAAAAAAAAA0QAAAAAAAAERAAAAAAAAAAAAAAERAAAAAAAAAVEAAAAAAAAAAAAAAVEAAAAAAAABkQAAAAAAAAAAAAABkQAAAAAAAAHRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAkQAAAAAAAACRAAAAAAAAAAAAAAAAAAA"
				],
				[
					285,
					1,
					"insert",
					{
						"characters": " unn"
					},
					"BAAAAAdEAAAAAAAACEQAAAAAAAAAAAAACEQAAAAAAAAJRAAAAAAAAAAAAAAJRAAAAAAAAApEAAAAAAAAAAAAAApEAAAAAAAAC0QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAB0QAAAAAAAAHRAAAAAAAAAAAAAAAAPC/"
				],
				[
					286,
					1,
					"insert",
					{
						"characters": "anotata"
					},
					"BwAAAAtEAAAAAAAADEQAAAAAAAAAAAAADEQAAAAAAAANRAAAAAAAAAAAAAANRAAAAAAAAA5EAAAAAAAAAAAAAA5EAAAAAAAAD0QAAAAAAAAAAAAAD0QAAAAAAAAQRAAAAAAAAAAAAAAQRAAAAAAAABFEAAAAAAAAAAAAABFEAAAAAAAAEkQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAC0QAAAAAAAALRAAAAAAAAAAAAAAAAPC/"
				],
				[
					287,
					1,
					"insert",
					{
						"characters": "ble"
					},
					"AwAAABJEAAAAAAAAE0QAAAAAAAAAAAAAE0QAAAAAAAAURAAAAAAAAAAAAAAURAAAAAAAABVEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEkQAAAAAAAASRAAAAAAAAAAAAAAAAPC/"
				],
				[
					288,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABVEAAAAAAAAF0QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFUQAAAAAAAAVRAAAAAAAAAAAAAAAAPC/"
				],
				[
					290,
					1,
					"insert",
					{
						"characters": "func:"
					},
					"BQAAABZEAAAAAAAAF0QAAAAAAAAAAAAAF0QAAAAAAAAYRAAAAAAAAAAAAAAYRAAAAAAAABlEAAAAAAAAAAAAABlEAAAAAAAAGkQAAAAAAAAAAAAAGkQAAAAAAAAbRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFkQAAAAAAAAWRAAAAAAAAAAAAAAAAPC/"
				],
				[
					291,
					1,
					"insert",
					{
						"characters": " C"
					},
					"AgAAABtEAAAAAAAAHEQAAAAAAAAAAAAAHEQAAAAAAAAdRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAG0QAAAAAAAAbRAAAAAAAAAAAAAAAAPC/"
				],
				[
					292,
					1,
					"insert_completion",
					{
						"completion": "Callable",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "Callable"
					},
					"AgAAABxEAAAAAAAAHEQAAAAAAAABAAAAQxxEAAAAAAAAJEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHUQAAAAAAAAdRAAAAAAAAAAAAAAAAPC/"
				],
				[
					294,
					1,
					"insert",
					{
						"characters": " ret"
					},
					"BAAAACVEAAAAAAAAJkQAAAAAAAAAAAAAJkQAAAAAAAAnRAAAAAAAAAAAAAAnRAAAAAAAAChEAAAAAAAAAAAAAChEAAAAAAAAKUQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJUQAAAAAAAAlRAAAAAAAAAAAAAAAAPC/"
				],
				[
					295,
					1,
					"insert_completion",
					{
						"completion": "->",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "ret"
					},
					"AgAAACZEAAAAAAAAJkQAAAAAAAADAAAAcmV0JkQAAAAAAAAoRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKUQAAAAAAAApRAAAAAAAAAAAAAAAAPC/"
				],
				[
					296,
					1,
					"insert",
					{
						"characters": " C"
					},
					"AgAAAChEAAAAAAAAKUQAAAAAAAAAAAAAKUQAAAAAAAAqRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKEQAAAAAAAAoRAAAAAAAAAAAAAAAAPC/"
				],
				[
					297,
					1,
					"insert_completion",
					{
						"completion": "Callable",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "Callable"
					},
					"AgAAAClEAAAAAAAAKUQAAAAAAAABAAAAQylEAAAAAAAAMUQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKkQAAAAAAAAqRAAAAAAAAAAAAAAAAPC/"
				],
				[
					298,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAADFEAAAAAAAAMkQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMUQAAAAAAAAxRAAAAAAAAAAAAAAAAPC/"
				],
				[
					299,
					1,
					"insert",
					{
						"characters": "\nret"
					},
					"BQAAADJEAAAAAAAAM0QAAAAAAAAAAAAAM0QAAAAAAAA3RAAAAAAAAAAAAAA3RAAAAAAAADhEAAAAAAAAAAAAADhEAAAAAAAAOUQAAAAAAAAAAAAAOUQAAAAAAAA6RAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMkQAAAAAAAAyRAAAAAAAAAAAAAAAAPC/"
				],
				[
					300,
					1,
					"insert",
					{
						"characters": "urn"
					},
					"AwAAADpEAAAAAAAAO0QAAAAAAAAAAAAAO0QAAAAAAAA8RAAAAAAAAAAAAAA8RAAAAAAAAD1EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOkQAAAAAAAA6RAAAAAAAAAAAAAAAAPC/"
				],
				[
					301,
					6,
					"left_delete",
					null,
					"BgAAADxEAAAAAAAAPEQAAAAAAAABAAAAbjtEAAAAAAAAO0QAAAAAAAABAAAAcjpEAAAAAAAAOkQAAAAAAAABAAAAdTlEAAAAAAAAOUQAAAAAAAABAAAAdDhEAAAAAAAAOEQAAAAAAAABAAAAZTdEAAAAAAAAN0QAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAPUQAAAAAAAA9RAAAAAAAAAAAAAAAAPC/"
				],
				[
					302,
					1,
					"insert",
					{
						"characters": "func"
					},
					"BAAAADdEAAAAAAAAOEQAAAAAAAAAAAAAOEQAAAAAAAA5RAAAAAAAAAAAAAA5RAAAAAAAADpEAAAAAAAAAAAAADpEAAAAAAAAO0QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAN0QAAAAAAAA3RAAAAAAAAAAAAAAAAPC/"
				],
				[
					303,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAADtEAAAAAAAAPEQAAAAAAAAAAAAAPEQAAAAAAAA9RAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAO0QAAAAAAAA7RAAAAAAAAAAAAAAAAPC/"
				],
				[
					304,
					1,
					"insert",
					{
						"characters": " un"
					},
					"AwAAAD1EAAAAAAAAPkQAAAAAAAAAAAAAPkQAAAAAAAA/RAAAAAAAAAAAAAA/RAAAAAAAAEBEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPUQAAAAAAAA9RAAAAAAAAAAAAAAAAPC/"
				],
				[
					305,
					1,
					"insert_completion",
					{
						"completion": "unannotate",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "unannotate"
					},
					"AgAAAD5EAAAAAAAAPkQAAAAAAAACAAAAdW4+RAAAAAAAAEhEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQEQAAAAAAABARAAAAAAAAAAAAAAAAPC/"
				],
				[
					306,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAEhEAAAAAAAASkQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASEQAAAAAAABIRAAAAAAAAAAAAAAAAPC/"
				],
				[
					308,
					1,
					"insert",
					{
						"characters": "func"
					},
					"BAAAAElEAAAAAAAASkQAAAAAAAAAAAAASkQAAAAAAABLRAAAAAAAAAAAAABLRAAAAAAAAExEAAAAAAAAAAAAAExEAAAAAAAATUQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASUQAAAAAAABJRAAAAAAAAAAAAAAAAPC/"
				],
				[
					310,
					1,
					"insert",
					{
						"characters": "\nfunc"
					},
					"BgAAAE5EAAAAAAAAT0QAAAAAAAAAAAAAT0QAAAAAAABTRAAAAAAAAAAAAABTRAAAAAAAAFREAAAAAAAAAAAAAFREAAAAAAAAVUQAAAAAAAAAAAAAVUQAAAAAAABWRAAAAAAAAAAAAABWRAAAAAAAAFdEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATkQAAAAAAABORAAAAAAAAAAAAAAAAPC/"
				],
				[
					311,
					1,
					"insert",
					{
						"characters": ".__p"
					},
					"BAAAAFdEAAAAAAAAWEQAAAAAAAAAAAAAWEQAAAAAAABZRAAAAAAAAAAAAABZRAAAAAAAAFpEAAAAAAAAAAAAAFpEAAAAAAAAW0QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAV0QAAAAAAABXRAAAAAAAAAAAAAAAAPC/"
				],
				[
					312,
					1,
					"insert",
					{
						"characters": "y"
					},
					"AQAAAFtEAAAAAAAAXEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAW0QAAAAAAABbRAAAAAAAAAAAAAAAAPC/"
				],
				[
					313,
					1,
					"insert_completion",
					{
						"completion": "__pyod_annotate__",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "__pyod_annotate__"
					},
					"AgAAAFhEAAAAAAAAWEQAAAAAAAAEAAAAX19weVhEAAAAAAAAaUQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXEQAAAAAAABcRAAAAAAAAAAAAAAAAPC/"
				],
				[
					315,
					1,
					"left_delete",
					null,
					"AQAAAGZEAAAAAAAAZkQAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAZ0QAAAAAAABnRAAAAAAAAAAAAAAAAPC/"
				],
				[
					316,
					1,
					"insert",
					{
						"characters": "able"
					},
					"BAAAAGZEAAAAAAAAZ0QAAAAAAAAAAAAAZ0QAAAAAAABoRAAAAAAAAAAAAABoRAAAAAAAAGlEAAAAAAAAAAAAAGlEAAAAAAAAakQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZkQAAAAAAABmRAAAAAAAAAAAAAAAAPC/"
				],
				[
					319,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAGxEAAAAAAAAbUQAAAAAAAAAAAAAbUQAAAAAAABuRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbEQAAAAAAABsRAAAAAAAAAAAAAAAAPC/"
				],
				[
					320,
					1,
					"insert",
					{
						"characters": " False"
					},
					"BgAAAG5EAAAAAAAAb0QAAAAAAAAAAAAAb0QAAAAAAABwRAAAAAAAAAAAAABwRAAAAAAAAHFEAAAAAAAAAAAAAHFEAAAAAAAAckQAAAAAAAAAAAAAckQAAAAAAABzRAAAAAAAAAAAAABzRAAAAAAAAHREAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbkQAAAAAAABuRAAAAAAAAAAAAAAAAPC/"
				],
				[
					330,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAHVEAAAAAAAAdkQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdUQAAAAAAAB1RAAAAAAAAAAAAAAAAAAA"
				],
				[
					331,
					1,
					"paste",
					null,
					"AQAAAHZEAAAAAAAA6EQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdkQAAAAAAAB2RAAAAAAAAAAAAAAAAPC/"
				],
				[
					340,
					1,
					"left_delete",
					null,
					"AQAAAApEAAAAAAAACkQAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAC0QAAAAAAAALRAAAAAAAAAAAAAAAAE1A"
				],
				[
					345,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAAxEAAAAAAAADUQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADEQAAAAAAAAMRAAAAAAAAAAAAAAAAPC/"
				],
				[
					351,
					1,
					"left_delete",
					null,
					"AQAAAH1EAAAAAAAAfUQAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAfkQAAAAAAAB+RAAAAAAAAAAAAAAAAPC/"
				],
				[
					353,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAH5EAAAAAAAAf0QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfkQAAAAAAAB+RAAAAAAAAAAAAAAAAPC/"
				],
				[
					359,
					1,
					"left_delete",
					null,
					"AQAAAHtEAAAAAAAAe0QAAAAAAAACAAAAdW4",
					"AQAAAAAAAAABAAAAfUQAAAAAAAB7RAAAAAAAAAAAAAAAAPC/"
				],
				[
					365,
					1,
					"left_delete",
					null,
					"AQAAAKREAAAAAAAApEQAAAAAAAAcAAAAICAgIGZ1bmMgPSB1bmFubm90YXRlKGZ1bmMpCg",
					"AQAAAAAAAAABAAAApEQAAAAAAADARAAAAAAAAAAAAAAAAPC/"
				],
				[
					368,
					5,
					"left_delete",
					null,
					"BQAAAMhEAAAAAAAAyEQAAAAAAAABAAAAZcdEAAAAAAAAx0QAAAAAAAABAAAAc8ZEAAAAAAAAxkQAAAAAAAABAAAAbMVEAAAAAAAAxUQAAAAAAAABAAAAYcREAAAAAAAAxEQAAAAAAAABAAAARg",
					"AQAAAAAAAAABAAAAyUQAAAAAAADJRAAAAAAAAAAAAAAAAPC/"
				],
				[
					369,
					1,
					"insert",
					{
						"characters": "True"
					},
					"BAAAAMREAAAAAAAAxUQAAAAAAAAAAAAAxUQAAAAAAADGRAAAAAAAAAAAAADGRAAAAAAAAMdEAAAAAAAAAAAAAMdEAAAAAAAAyEQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxEQAAAAAAADERAAAAAAAAAAAAAAAAPC/"
				],
				[
					399,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAMlEAAAAAAAAykQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyUQAAAAAAADJRAAAAAAAAAAAAAAAAAAA"
				],
				[
					401,
					1,
					"insert",
					{
						"characters": "\n\nd"
					},
					"AwAAAMlEAAAAAAAAykQAAAAAAAAAAAAAykQAAAAAAADLRAAAAAAAAAAAAADLRAAAAAAAAMxEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyUQAAAAAAADJRAAAAAAAAAAAAAAAAAAA"
				],
				[
					402,
					1,
					"insert",
					{
						"characters": "ef"
					},
					"AgAAAMxEAAAAAAAAzUQAAAAAAAAAAAAAzUQAAAAAAADORAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzEQAAAAAAADMRAAAAAAAAAAAAAAAAPC/"
				],
				[
					403,
					1,
					"insert",
					{
						"characters": " is_a"
					},
					"BQAAAM5EAAAAAAAAz0QAAAAAAAAAAAAAz0QAAAAAAADQRAAAAAAAAAAAAADQRAAAAAAAANFEAAAAAAAAAAAAANFEAAAAAAAA0kQAAAAAAAAAAAAA0kQAAAAAAADTRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzkQAAAAAAADORAAAAAAAAAAAAAAAAPC/"
				],
				[
					404,
					1,
					"insert",
					{
						"characters": "nnoa"
					},
					"BAAAANNEAAAAAAAA1EQAAAAAAAAAAAAA1EQAAAAAAADVRAAAAAAAAAAAAADVRAAAAAAAANZEAAAAAAAAAAAAANZEAAAAAAAA10QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA00QAAAAAAADTRAAAAAAAAAAAAAAAAPC/"
				],
				[
					405,
					1,
					"left_delete",
					null,
					"AQAAANZEAAAAAAAA1kQAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAA10QAAAAAAADXRAAAAAAAAAAAAAAAAPC/"
				],
				[
					406,
					1,
					"insert",
					{
						"characters": "tatable"
					},
					"BwAAANZEAAAAAAAA10QAAAAAAAAAAAAA10QAAAAAAADYRAAAAAAAAAAAAADYRAAAAAAAANlEAAAAAAAAAAAAANlEAAAAAAAA2kQAAAAAAAAAAAAA2kQAAAAAAADbRAAAAAAAAAAAAADbRAAAAAAAANxEAAAAAAAAAAAAANxEAAAAAAAA3UQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1kQAAAAAAADWRAAAAAAAAAAAAAAAAPC/"
				],
				[
					411,
					2,
					"left_delete",
					null,
					"AgAAAGVEAAAAAAAAZUQAAAAAAAABAAAAdGREAAAAAAAAZEQAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAZkQAAAAAAABmRAAAAAAAAAAAAAAAAPC/"
				],
				[
					414,
					2,
					"left_delete",
					null,
					"AgAAALhEAAAAAAAAuEQAAAAAAAABAAAAdLdEAAAAAAAAt0QAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAuUQAAAAAAAC5RAAAAAAAAAAAAAAAAPC/"
				],
				[
					417,
					2,
					"left_delete",
					null,
					"AgAAAH9EAAAAAAAAf0QAAAAAAAABAAAAdH5EAAAAAAAAfkQAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAgEQAAAAAAACARAAAAAAAAAAAAAAAAPC/"
				],
				[
					420,
					2,
					"left_delete",
					null,
					"AgAAABBEAAAAAAAAEEQAAAAAAAABAAAAdA9EAAAAAAAAD0QAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAEUQAAAAAAAARRAAAAAAAAAAAAAAAAPC/"
				],
				[
					427,
					2,
					"left_delete",
					null,
					"AgAAANBEAAAAAAAA0EQAAAAAAAABAAAAdM9EAAAAAAAAz0QAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAA0UQAAAAAAADRRAAAAAAAAAAAAAAAAPC/"
				],
				[
					431,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANNEAAAAAAAA1UQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA00QAAAAAAADTRAAAAAAAAAAAAAAAAPC/"
				],
				[
					433,
					1,
					"insert",
					{
						"characters": "func"
					},
					"BAAAANREAAAAAAAA1UQAAAAAAAAAAAAA1UQAAAAAAADWRAAAAAAAAAAAAADWRAAAAAAAANdEAAAAAAAAAAAAANdEAAAAAAAA2EQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1EQAAAAAAADURAAAAAAAAAAAAAAAAPC/"
				],
				[
					435,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAANlEAAAAAAAA2kQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2UQAAAAAAADZRAAAAAAAAAAAAAAAAPC/"
				],
				[
					436,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANpEAAAAAAAA20QAAAAAAAAAAAAA20QAAAAAAADfRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2kQAAAAAAADaRAAAAAAAAAAAAAAAAPC/"
				],
				[
					437,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAN9EAAAAAAAA4EQAAAAAAAAAAAAA4EQAAAAAAADhRAAAAAAAAAAAAADhRAAAAAAAAOJEAAAAAAAAAAAAAOJEAAAAAAAA40QAAAAAAAAAAAAA40QAAAAAAADkRAAAAAAAAAAAAADkRAAAAAAAAOVEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA30QAAAAAAADfRAAAAAAAAAAAAAAAAPC/"
				],
				[
					438,
					1,
					"insert",
					{
						"characters": " ha"
					},
					"AwAAAOVEAAAAAAAA5kQAAAAAAAAAAAAA5kQAAAAAAADnRAAAAAAAAAAAAADnRAAAAAAAAOhEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5UQAAAAAAADlRAAAAAAAAAAAAAAAAPC/"
				],
				[
					444,
					1,
					"insert",
					{
						"characters": "sattr'"
					},
					"BgAAAOhEAAAAAAAA6UQAAAAAAAAAAAAA6UQAAAAAAADqRAAAAAAAAAAAAADqRAAAAAAAAOtEAAAAAAAAAAAAAOtEAAAAAAAA7EQAAAAAAAAAAAAA7EQAAAAAAADtRAAAAAAAAAAAAADtRAAAAAAAAO5EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6EQAAAAAAADoRAAAAAAAAAAAAAAAAPC/"
				],
				[
					445,
					1,
					"left_delete",
					null,
					"AQAAAO1EAAAAAAAA7UQAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAA7kQAAAAAAADuRAAAAAAAAAAAAAAAAPC/"
				],
				[
					446,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAO1EAAAAAAAA70QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7UQAAAAAAADtRAAAAAAAAAAAAAAAAPC/"
				],
				[
					448,
					1,
					"insert",
					{
						"characters": "fu"
					},
					"AgAAAO5EAAAAAAAA70QAAAAAAAAAAAAA70QAAAAAAADwRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7kQAAAAAAADuRAAAAAAAAAAAAAAAAPC/"
				],
				[
					449,
					1,
					"insert_completion",
					{
						"completion": "func",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "func"
					},
					"AgAAAO5EAAAAAAAA7kQAAAAAAAACAAAAZnXuRAAAAAAAAPJEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8EQAAAAAAADwRAAAAAAAAAAAAAAAAPC/"
				],
				[
					450,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAPJEAAAAAAAA80QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8kQAAAAAAADyRAAAAAAAAAAAAAAAAPC/"
				],
				[
					451,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPNEAAAAAAAA9EQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA80QAAAAAAADzRAAAAAAAAAAAAAAAAPC/"
				],
				[
					452,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAPREAAAAAAAA9kQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9EQAAAAAAAD0RAAAAAAAAAAAAAAAAPC/"
				],
				[
					453,
					1,
					"insert",
					{
						"characters": "__"
					},
					"AgAAAPVEAAAAAAAA9kQAAAAAAAAAAAAA9kQAAAAAAAD3RAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9UQAAAAAAAD1RAAAAAAAAAAAAAAAAPC/"
				],
				[
					454,
					1,
					"insert",
					{
						"characters": "pyod"
					},
					"BAAAAPdEAAAAAAAA+EQAAAAAAAAAAAAA+EQAAAAAAAD5RAAAAAAAAAAAAAD5RAAAAAAAAPpEAAAAAAAAAAAAAPpEAAAAAAAA+0QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA90QAAAAAAAD3RAAAAAAAAAAAAAAAAPC/"
				],
				[
					455,
					1,
					"insert",
					{
						"characters": "_ab"
					},
					"AwAAAPtEAAAAAAAA/EQAAAAAAAAAAAAA/EQAAAAAAAD9RAAAAAAAAAAAAAD9RAAAAAAAAP5EAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+0QAAAAAAAD7RAAAAAAAAAAAAAAAAPC/"
				],
				[
					456,
					1,
					"insert_completion",
					{
						"completion": "__pyod_annotable__",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "__pyod_annotable__"
					},
					"AgAAAPVEAAAAAAAA9UQAAAAAAAAJAAAAX19weW9kX2Fi9UQAAAAAAAAHRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/kQAAAAAAAD+RAAAAAAAAAAAAAAAAPC/"
				],
				[
					458,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOZEAAAAAAAA50QAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5kQAAAAAAADmRAAAAAAAAAAAAAAAAPC/"
				],
				[
					460,
					1,
					"insert",
					{
						"characters": "not"
					},
					"AwAAAOZEAAAAAAAA50QAAAAAAAAAAAAA50QAAAAAAADoRAAAAAAAAAAAAADoRAAAAAAAAOlEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5kQAAAAAAADmRAAAAAAAAAAAAAAAAPC/"
				],
				[
					463,
					1,
					"insert",
					{
						"characters": " or"
					},
					"AwAAAA1FAAAAAAAADkUAAAAAAAAAAAAADkUAAAAAAAAPRQAAAAAAAAAAAAAPRQAAAAAAABBFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADUUAAAAAAAANRQAAAAAAAAAAAAAAAPC/"
				],
				[
					464,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABBFAAAAAAAAEUUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEEUAAAAAAAAQRQAAAAAAAAAAAAAAAPC/"
				],
				[
					465,
					1,
					"insert",
					{
						"characters": "fun"
					},
					"AwAAABFFAAAAAAAAEkUAAAAAAAAAAAAAEkUAAAAAAAATRQAAAAAAAAAAAAATRQAAAAAAABRFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEUUAAAAAAAARRQAAAAAAAAAAAAAAAPC/"
				],
				[
					466,
					1,
					"insert",
					{
						"characters": "c._"
					},
					"AwAAABRFAAAAAAAAFUUAAAAAAAAAAAAAFUUAAAAAAAAWRQAAAAAAAAAAAAAWRQAAAAAAABdFAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFEUAAAAAAAAURQAAAAAAAAAAAAAAAPC/"
				],
				[
					469,
					1,
					"insert_completion",
					{
						"completion": "__pyod_annotable__",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "__pyod_annotable__"
					},
					"AgAAABZFAAAAAAAAFkUAAAAAAAABAAAAXxZFAAAAAAAAKEUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAF0UAAAAAAAAXRQAAAAAAAAAAAAAAAPC/"
				],
				[
					470,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAChFAAAAAAAAKUUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKEUAAAAAAAAoRQAAAAAAAAAAAAAAAPC/"
				],
				[
					471,
					1,
					"left_delete",
					null,
					"AQAAAChFAAAAAAAAKEUAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAKUUAAAAAAAApRQAAAAAAAAAAAAAAAPC/"
				],
				[
					484,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAB47AAAAAAAAHzsAAAAAAAAAAAAAHzsAAAAAAAAnOwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHjsAAAAAAAAeOwAAAAAAAAAAAAAAAPC/"
				],
				[
					485,
					1,
					"left_delete",
					null,
					"AQAAACM7AAAAAAAAIzsAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAJzsAAAAAAAAnOwAAAAAAAAAAAAAAAPC/"
				],
				[
					486,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAACM7AAAAAAAAJDsAAAAAAAAAAAAAJDsAAAAAAAAlOwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIzsAAAAAAAAjOwAAAAAAAAAAAAAAAPC/"
				],
				[
					487,
					1,
					"insert",
					{
						"characters": " not"
					},
					"BAAAACU7AAAAAAAAJjsAAAAAAAAAAAAAJjsAAAAAAAAnOwAAAAAAAAAAAAAnOwAAAAAAACg7AAAAAAAAAAAAACg7AAAAAAAAKTsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJTsAAAAAAAAlOwAAAAAAAAAAAAAAAPC/"
				],
				[
					488,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAACk7AAAAAAAAKjsAAAAAAAAAAAAAKjsAAAAAAAArOwAAAAAAAAAAAAArOwAAAAAAACw7AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKTsAAAAAAAApOwAAAAAAAAAAAAAAAPC/"
				],
				[
					489,
					1,
					"insert",
					{
						"characters": "_a"
					},
					"AgAAACw7AAAAAAAALTsAAAAAAAAAAAAALTsAAAAAAAAuOwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALDsAAAAAAAAsOwAAAAAAAAAAAAAAAPC/"
				],
				[
					490,
					1,
					"insert_completion",
					{
						"completion": "is_annotable",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "is_annotable"
					},
					"AgAAACo7AAAAAAAAKjsAAAAAAAAEAAAAaXNfYSo7AAAAAAAANjsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALjsAAAAAAAAuOwAAAAAAAAAAAAAAAPC/"
				],
				[
					491,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADY7AAAAAAAAODsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANjsAAAAAAAA2OwAAAAAAAAAAAAAAAPC/"
				],
				[
					493,
					1,
					"insert",
					{
						"characters": "func"
					},
					"BAAAADc7AAAAAAAAODsAAAAAAAAAAAAAODsAAAAAAAA5OwAAAAAAAAAAAAA5OwAAAAAAADo7AAAAAAAAAAAAADo7AAAAAAAAOzsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANzsAAAAAAAA3OwAAAAAAAAAAAAAAAPC/"
				],
				[
					495,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADw7AAAAAAAAPTsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPDsAAAAAAAA8OwAAAAAAAAAAAAAAAPC/"
				],
				[
					496,
					1,
					"insert",
					{
						"characters": "and"
					},
					"AwAAAD07AAAAAAAAPjsAAAAAAAAAAAAAPjsAAAAAAAA/OwAAAAAAAAAAAAA/OwAAAAAAAEA7AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPTsAAAAAAAA9OwAAAAAAAAAAAAAAAPC/"
				],
				[
					497,
					1,
					"insert",
					{
						"characters": " not"
					},
					"BAAAAEA7AAAAAAAAQTsAAAAAAAAAAAAAQTsAAAAAAABCOwAAAAAAAAAAAABCOwAAAAAAAEM7AAAAAAAAAAAAAEM7AAAAAAAARDsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQDsAAAAAAABAOwAAAAAAAAAAAAAAAPC/"
				],
				[
					498,
					1,
					"insert",
					{
						"characters": " f"
					},
					"AgAAAEQ7AAAAAAAARTsAAAAAAAAAAAAARTsAAAAAAABGOwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARDsAAAAAAABEOwAAAAAAAAAAAAAAAPC/"
				],
				[
					500,
					1,
					"insert_completion",
					{
						"completion": "force",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "force"
					},
					"AgAAAEU7AAAAAAAARTsAAAAAAAABAAAAZkU7AAAAAAAASjsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARjsAAAAAAABGOwAAAAAAAAAAAAAAAPC/"
				],
				[
					504,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAEo7AAAAAAAASzsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASjsAAAAAAABKOwAAAAAAAAAAAAAAAPC/"
				],
				[
					505,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CQAAAEs7AAAAAAAATDsAAAAAAAAAAAAATDsAAAAAAABQOwAAAAAAAAAAAABQOwAAAAAAAFQ7AAAAAAAAAAAAAFQ7AAAAAAAAVTsAAAAAAAAAAAAAVTsAAAAAAABWOwAAAAAAAAAAAABWOwAAAAAAAFc7AAAAAAAAAAAAAFc7AAAAAAAAWDsAAAAAAAAAAAAAWDsAAAAAAABZOwAAAAAAAAAAAABZOwAAAAAAAFo7AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASzsAAAAAAABLOwAAAAAAAAAAAAAAAPC/"
				],
				[
					506,
					1,
					"insert",
					{
						"characters": " fu"
					},
					"AwAAAFo7AAAAAAAAWzsAAAAAAAAAAAAAWzsAAAAAAABcOwAAAAAAAAAAAABcOwAAAAAAAF07AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWjsAAAAAAABaOwAAAAAAAAAAAAAAAPC/"
				],
				[
					507,
					1,
					"insert_completion",
					{
						"completion": "func",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "func"
					},
					"AgAAAFs7AAAAAAAAWzsAAAAAAAACAAAAZnVbOwAAAAAAAF87AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXTsAAAAAAABdOwAAAAAAAAAAAAAAAPC/"
				],
				[
					523,
					2,
					"left_delete",
					null,
					"AgAAAMABAAAAAAAAwAEAAAAAAAALAAAAaW1wb3J0IHN5cwq/AQAAAAAAAL8BAAAAAAAAAQAAAAo",
					"AQAAAAAAAAABAAAAwAEAAAAAAADLAQAAAAAAAAAAAAAAAPC/"
				],
				[
					570,
					1,
					"insert",
					{
						"characters": "\n\t"
					},
					"AwAAAJMhAAAAAAAAlCEAAAAAAAAAAAAAlCEAAAAAAACkIQAAAAAAAAAAAACkIQAAAAAAAKghAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkyEAAAAAAACTIQAAAAAAAAAAAAAAAPC/"
				],
				[
					573,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOIhAAAAAAAA4yEAAAAAAAAAAAAA4yEAAAAAAAD3IQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4iEAAAAAAADiIQAAAAAAAAAAAAAAAPC/"
				],
				[
					574,
					1,
					"left_delete",
					null,
					"AQAAAPMhAAAAAAAA8yEAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAA9yEAAAAAAAD3IQAAAAAAAAAAAAAAAPC/"
				],
				[
					596,
					1,
					"paste",
					null,
					"AgAAABxFAAAAAAAAg0UAAAAAAAAAAAAAg0UAAAAAAACDRQAAAAAAAGcAAAAKCmRlZiBpc19hbm5vdGFibGUoZnVuYyk6CiAgICByZXR1cm4gbm90IGhhc2F0dHIoZnVuYywgJ19fcHlvZF9hbm5vdGFibGVfXycpIG9yIGZ1bmMuX19weW9kX2Fubm90YWJsZV9f",
					"AQAAAAAAAAABAAAAg0UAAAAAAAAcRQAAAAAAAAAAAAAA2INA"
				],
				[
					597,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAINFAAAAAAAAhEUAAAAAAAAAAAAAhEUAAAAAAACIRQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAg0UAAAAAAACDRQAAAAAAAAAAAAAAAPC/"
				],
				[
					598,
					1,
					"paste",
					null,
					"AQAAAIhFAAAAAAAA70UAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiEUAAAAAAACIRQAAAAAAAAAAAAAAAPC/"
				],
				[
					600,
					1,
					"trim_trailing_white_space",
					null,
					"AQAAAIRFAAAAAAAAhEUAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAoUUAAAAAAAChRQAAAAAAAAAAAAAA2INA"
				],
				[
					607,
					1,
					"left_delete",
					null,
					"AQAAAJJFAAAAAAAAkkUAAAAAAAAEAAAAYWJsZQ",
					"AQAAAAAAAAABAAAAlkUAAAAAAACSRQAAAAAAAAAAAAAAAPC/"
				],
				[
					608,
					1,
					"insert",
					{
						"characters": "ed"
					},
					"AgAAAJJFAAAAAAAAk0UAAAAAAAAAAAAAk0UAAAAAAACURQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkkUAAAAAAACSRQAAAAAAAAAAAAAAAPC/"
				],
				[
					616,
					1,
					"left_delete",
					null,
					"AQAAAM5FAAAAAAAAzkUAAAAAAAAbAAAAIG9yIGZ1bmMuX19weW9kX2Fubm90YWJsZV9f",
					"AQAAAAAAAAABAAAA6UUAAAAAAADORQAAAAAAAAAAAAAAAPC/"
				],
				[
					621,
					1,
					"left_delete",
					null,
					"AQAAAKZFAAAAAAAApkUAAAAAAAAEAAAAIG5vdA",
					"AQAAAAAAAAABAAAAqkUAAAAAAACmRQAAAAAAAAAAAAAAAPC/"
				],
				[
					628,
					1,
					"left_delete",
					null,
					"AQAAAMNFAAAAAAAAw0UAAAAAAAACAAAAYmw",
					"AQAAAAAAAAABAAAAw0UAAAAAAADFRQAAAAAAAAAAAAAAAPC/"
				],
				[
					629,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAMNFAAAAAAAAxEUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAw0UAAAAAAADDRQAAAAAAAAAAAAAAAPC/"
				],
				[
					646,
					1,
					"left_delete",
					null,
					"AQAAAOo9AAAAAAAA6j0AAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAA6j0AAAAAAADrPQAAAAAAAAAAAAAAAPC/"
				],
				[
					649,
					1,
					"left_delete",
					null,
					"AQAAAOs9AAAAAAAA6z0AAAAAAAABAAAAIg",
					"AQAAAAAAAAABAAAA6z0AAAAAAADsPQAAAAAAAAAAAAAAAPC/"
				],
				[
					655,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAD0+AAAAAAAAPj4AAAAAAAAAAAAAPj4AAAAAAAA/PgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPT4AAAAAAAA9PgAAAAAAAAAAAAAAAPC/"
				],
				[
					656,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD8+AAAAAAAAQD4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPz4AAAAAAAA/PgAAAAAAAAAAAAAAAPC/"
				],
				[
					659,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAF8+AAAAAAAAYD4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXz4AAAAAAABfPgAAAAAAAAAAAAAAAPC/"
				],
				[
					660,
					1,
					"insert",
					{
						"characters": "\nco"
					},
					"BQAAAGA+AAAAAAAAYT4AAAAAAAAAAAAAYT4AAAAAAABxPgAAAAAAAAAAAABxPgAAAAAAAHU+AAAAAAAAAAAAAHU+AAAAAAAAdj4AAAAAAAAAAAAAdj4AAAAAAAB3PgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYD4AAAAAAABgPgAAAAAAAAAAAAAAAPC/"
				],
				[
					661,
					1,
					"insert_completion",
					{
						"completion": "continue",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "continue"
					},
					"AgAAAHU+AAAAAAAAdT4AAAAAAAACAAAAY291PgAAAAAAAH0+AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdz4AAAAAAAB3PgAAAAAAAAAAAAAAAPC/"
				],
				[
					675,
					3,
					"left_delete",
					null,
					"AwAAAD8+AAAAAAAAPz4AAAAAAAABAAAAID4+AAAAAAAAPj4AAAAAAAABAAAAZj0+AAAAAAAAPT4AAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAQD4AAAAAAABAPgAAAAAAAAAAAAAAAPC/"
				],
				[
					678,
					1,
					"left_delete",
					null,
					"AQAAAF4+AAAAAAAAXj4AAAAAAAAdAAAAICAgICAgICAgICAgICAgICAgICBjb250aW51ZQo",
					"AQAAAAAAAAABAAAAXj4AAAAAAAB7PgAAAAAAAAAAAAAAAPC/"
				],
				[
					683,
					1,
					"left_delete",
					null,
					"AQAAAFw+AAAAAAAAXD4AAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAXT4AAAAAAABdPgAAAAAAAAAAAAAAAPC/"
				],
				[
					694,
					1,
					"insert",
					{
						"characters": "\nprint"
					},
					"BwAAAFU9AAAAAAAAVj0AAAAAAAAAAAAAVj0AAAAAAABiPQAAAAAAAAAAAABiPQAAAAAAAGM9AAAAAAAAAAAAAGM9AAAAAAAAZD0AAAAAAAAAAAAAZD0AAAAAAABlPQAAAAAAAAAAAABlPQAAAAAAAGY9AAAAAAAAAAAAAGY9AAAAAAAAZz0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVT0AAAAAAABVPQAAAAAAAAAAAAAAAPC/"
				],
				[
					695,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAGc9AAAAAAAAaT0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZz0AAAAAAABnPQAAAAAAAAAAAAAAAPC/"
				],
				[
					697,
					1,
					"insert",
					{
						"characters": "k,"
					},
					"AgAAAGg9AAAAAAAAaT0AAAAAAAAAAAAAaT0AAAAAAABqPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaD0AAAAAAABoPQAAAAAAAAAAAAAAAPC/"
				],
				[
					698,
					1,
					"insert",
					{
						"characters": " v,"
					},
					"AwAAAGo9AAAAAAAAaz0AAAAAAAAAAAAAaz0AAAAAAABsPQAAAAAAAAAAAABsPQAAAAAAAG09AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaj0AAAAAAABqPQAAAAAAAAAAAAAAAPC/"
				],
				[
					699,
					1,
					"insert",
					{
						"characters": " pa"
					},
					"AwAAAG09AAAAAAAAbj0AAAAAAAAAAAAAbj0AAAAAAABvPQAAAAAAAAAAAABvPQAAAAAAAHA9AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbT0AAAAAAABtPQAAAAAAAAAAAAAAAPC/"
				],
				[
					700,
					1,
					"insert_completion",
					{
						"completion": "param",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "param"
					},
					"AgAAAG49AAAAAAAAbj0AAAAAAAACAAAAcGFuPQAAAAAAAHM9AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcD0AAAAAAABwPQAAAAAAAAAAAAAAAPC/"
				],
				[
					707,
					1,
					"insert",
					{
						"characters": "f'"
					},
					"AgAAAGg9AAAAAAAAaT0AAAAAAAAAAAAAaT0AAAAAAABqPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaD0AAAAAAABoPQAAAAAAAAAAAAAAAPC/"
				],
				[
					709,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAHU9AAAAAAAAdj0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdT0AAAAAAAB1PQAAAAAAAAAAAAAAAPC/"
				],
				[
					711,
					1,
					"insert",
					{
						"characters": "{}"
					},
					"AgAAAGo9AAAAAAAAaz0AAAAAAAAAAAAAaz0AAAAAAABsPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaj0AAAAAAABqPQAAAAAAAAAAAAAAAPC/"
				],
				[
					713,
					1,
					"cut",
					null,
					"AQAAAGs9AAAAAAAAaz0AAAAAAAABAAAAfQ",
					"AQAAAAAAAAABAAAAbD0AAAAAAABrPQAAAAAAAAAAAAAAAPC/"
				],
				[
					715,
					1,
					"paste",
					null,
					"AQAAAGw9AAAAAAAAbT0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbD0AAAAAAABsPQAAAAAAAAAAAAAAAPC/"
				],
				[
					717,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAGw9AAAAAAAAbT0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbD0AAAAAAABsPQAAAAAAAAAAAAAAAPC/"
				],
				[
					719,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAAHA9AAAAAAAAcT0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcD0AAAAAAABwPQAAAAAAAAAAAAAAAPC/"
				],
				[
					721,
					1,
					"insert",
					{
						"characters": "}"
					},
					"AQAAAHI9AAAAAAAAcz0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcj0AAAAAAAByPQAAAAAAAAAAAAAAAPC/"
				],
				[
					723,
					1,
					"insert",
					{
						"characters": "!r"
					},
					"AgAAAHI9AAAAAAAAcz0AAAAAAAAAAAAAcz0AAAAAAAB0PQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcj0AAAAAAAByPQAAAAAAAAAAAAAAAPC/"
				],
				[
					727,
					1,
					"insert",
					{
						"characters": "="
					},
					"AQAAAHI9AAAAAAAAcz0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcj0AAAAAAAByPQAAAAAAAAAAAAAAAPC/"
				],
				[
					729,
					1,
					"insert",
					{
						"characters": "!r"
					},
					"AgAAAG09AAAAAAAAbj0AAAAAAAAAAAAAbj0AAAAAAABvPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbT0AAAAAAABtPQAAAAAAAAAAAAAAAPC/"
				],
				[
					734,
					1,
					"paste",
					null,
					"AQAAAH89AAAAAAAAgz0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfz0AAAAAAAB/PQAAAAAAAAAAAAAAAPC/"
				],
				[
					737,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAAHo9AAAAAAAAez0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAej0AAAAAAAB6PQAAAAAAAAAAAAAAAPC/"
				],
				[
					752,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAMA9AAAAAAAAwT0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwD0AAAAAAADAPQAAAAAAAAAAAAAAAPC/"
				],
				[
					753,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAME9AAAAAAAAwj0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwT0AAAAAAADBPQAAAAAAAAAAAAAAAPC/"
				],
				[
					757,
					1,
					"left_delete",
					null,
					"AQAAAMA9AAAAAAAAwD0AAAAAAAACAAAAIyA",
					"AQAAAAAAAAABAAAAwj0AAAAAAADAPQAAAAAAAAAAAAAAAPC/"
				],
				[
					758,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAMA9AAAAAAAAwT0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwD0AAAAAAADAPQAAAAAAAAAAAAAAAPC/"
				],
				[
					760,
					1,
					"insert",
					{
						"characters": "raise"
					},
					"BQAAAMA9AAAAAAAAwT0AAAAAAAAAAAAAwT0AAAAAAADCPQAAAAAAAAAAAADCPQAAAAAAAMM9AAAAAAAAAAAAAMM9AAAAAAAAxD0AAAAAAAAAAAAAxD0AAAAAAADFPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwD0AAAAAAADAPQAAAAAAAAAAAAAAAPC/"
				],
				[
					761,
					1,
					"insert",
					{
						"characters": " 3"
					},
					"AgAAAMU9AAAAAAAAxj0AAAAAAAAAAAAAxj0AAAAAAADHPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxT0AAAAAAADFPQAAAAAAAAAAAAAAAPC/"
				],
				[
					765,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMc9AAAAAAAAyD0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxz0AAAAAAADHPQAAAAAAAAAAAAAAAPC/"
				],
				[
					768,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMg9AAAAAAAAyT0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyD0AAAAAAADIPQAAAAAAAAAAAAAAAPC/"
				],
				[
					770,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMo9AAAAAAAAyz0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyj0AAAAAAADKPQAAAAAAAAAAAAAAAPC/"
				],
				[
					776,
					1,
					"left_delete",
					null,
					"AQAAAMA9AAAAAAAAwD0AAAAAAAALAAAAcmFpc2UgMyAgIyA",
					"AQAAAAAAAAABAAAAyz0AAAAAAADAPQAAAAAAAAAAAAAAAPC/"
				],
				[
					784,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEw+AAAAAAAATT4AAAAAAAAAAAAATT4AAAAAAABdPgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATD4AAAAAAABMPgAAAAAAAAAAAAAAAPC/"
				],
				[
					785,
					1,
					"left_delete",
					null,
					"AQAAAFk+AAAAAAAAWT4AAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAXT4AAAAAAABdPgAAAAAAAAAAAAAAAPC/"
				],
				[
					786,
					1,
					"insert",
					{
						"characters": "print"
					},
					"BQAAAFk+AAAAAAAAWj4AAAAAAAAAAAAAWj4AAAAAAABbPgAAAAAAAAAAAABbPgAAAAAAAFw+AAAAAAAAAAAAAFw+AAAAAAAAXT4AAAAAAAAAAAAAXT4AAAAAAABePgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWT4AAAAAAABZPgAAAAAAAAAAAAAAAPC/"
				],
				[
					787,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAF4+AAAAAAAAYD4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXj4AAAAAAABePgAAAAAAAAAAAAAAAPC/"
				],
				[
					789,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAF8+AAAAAAAAYT4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXz4AAAAAAABfPgAAAAAAAAAAAAAAAPC/"
				],
				[
					790,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAGA+AAAAAAAAYT4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYD4AAAAAAABgPgAAAAAAAAAAAAAAAPC/"
				],
				[
					797,
					1,
					"cut",
					null,
					"AQAAAFk+AAAAAAAAWT4AAAAAAAAKAAAAcHJpbnQoIi4iKQ",
					"AQAAAAAAAAABAAAAYz4AAAAAAABZPgAAAAAAAAAAAAAAAPC/"
				],
				[
					799,
					1,
					"left_delete",
					null,
					"AQAAAE0+AAAAAAAATT4AAAAAAAANAAAAICAgICAgICAgICAgCg",
					"AQAAAAAAAAABAAAATT4AAAAAAABaPgAAAAAAAAAAAAAAAPC/"
				],
				[
					804,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAKs+AAAAAAAArD4AAAAAAAAAAAAArD4AAAAAAAC4PgAAAAAAAAAAAAC4PgAAAAAAALw+AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqz4AAAAAAACrPgAAAAAAAAAAAAAAkHJA"
				],
				[
					805,
					1,
					"paste",
					null,
					"AQAAALw+AAAAAAAAxj4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvD4AAAAAAAC8PgAAAAAAAAAAAAAAAPC/"
				],
				[
					811,
					1,
					"cut",
					null,
					"AQAAALw+AAAAAAAAvD4AAAAAAAAKAAAAcHJpbnQoIi4iKQ",
					"AQAAAAAAAAABAAAAxj4AAAAAAAC8PgAAAAAAAAAAAAAAAPC/"
				],
				[
					813,
					1,
					"left_delete",
					null,
					"AQAAAKw+AAAAAAAArD4AAAAAAAARAAAAICAgICAgICAgICAgICAgIAo",
					"AQAAAAAAAAABAAAArD4AAAAAAAC9PgAAAAAAAAAAAAAAAPC/"
				],
				[
					816,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAF0+AAAAAAAAXj4AAAAAAAAAAAAAXj4AAAAAAABqPgAAAAAAAAAAAABqPgAAAAAAAG4+AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXT4AAAAAAABdPgAAAAAAAAAAAAAAAPC/"
				],
				[
					817,
					1,
					"paste",
					null,
					"AQAAAG4+AAAAAAAAeD4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbj4AAAAAAABuPgAAAAAAAAAAAAAAAPC/"
				],
				[
					823,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAKg+AAAAAAAAqT4AAAAAAAAAAAAAqT4AAAAAAAC5PgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqD4AAAAAAACoPgAAAAAAAAAAAAAAAPC/"
				],
				[
					824,
					1,
					"paste",
					null,
					"AQAAALk+AAAAAAAAwz4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuT4AAAAAAAC5PgAAAAAAAAAAAAAAAPC/"
				],
				[
					830,
					1,
					"left_delete",
					null,
					"AQAAAKk+AAAAAAAAqT4AAAAAAAAbAAAAICAgICAgICAgICAgICAgIHByaW50KCIuIikK",
					"AQAAAAAAAAABAAAAqT4AAAAAAADEPgAAAAAAAAAAAAAAAPC/"
				],
				[
					834,
					1,
					"left_delete",
					null,
					"AQAAAF4+AAAAAAAAXj4AAAAAAAAbAAAAICAgICAgICAgICAgICAgIHByaW50KCIuIikK",
					"AQAAAAAAAAABAAAAXj4AAAAAAAB5PgAAAAAAAAAAAAAAAPC/"
				],
				[
					840,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAG4+AAAAAAAAbz4AAAAAAAAAAAAAbz4AAAAAAABwPgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbj4AAAAAAABuPgAAAAAAAAAAAAAAAPC/"
				],
				[
					841,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAHA+AAAAAAAAcT4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcD4AAAAAAABwPgAAAAAAAAAAAAAAAPC/"
				],
				[
					844,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAJA+AAAAAAAAkT4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkD4AAAAAAACQPgAAAAAAAAAAAAAAAPC/"
				],
				[
					845,
					1,
					"insert",
					{
						"characters": "\nre"
					},
					"BQAAAJE+AAAAAAAAkj4AAAAAAAAAAAAAkj4AAAAAAACiPgAAAAAAAAAAAACiPgAAAAAAAKY+AAAAAAAAAAAAAKY+AAAAAAAApz4AAAAAAAAAAAAApz4AAAAAAACoPgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkT4AAAAAAACRPgAAAAAAAAAAAAAAAPC/"
				],
				[
					846,
					1,
					"insert_completion",
					{
						"completion": "return",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "return"
					},
					"AgAAAKY+AAAAAAAApj4AAAAAAAACAAAAcmWmPgAAAAAAAKw+AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqD4AAAAAAACoPgAAAAAAAAAAAAAAAPC/"
				],
				[
					847,
					1,
					"insert",
					{
						"characters": " True"
					},
					"BQAAAKw+AAAAAAAArT4AAAAAAAAAAAAArT4AAAAAAACuPgAAAAAAAAAAAACuPgAAAAAAAK8+AAAAAAAAAAAAAK8+AAAAAAAAsD4AAAAAAAAAAAAAsD4AAAAAAACxPgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArD4AAAAAAACsPgAAAAAAAAAAAAAAAPC/"
				],
				[
					852,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALE+AAAAAAAAsj4AAAAAAAAAAAAAsj4AAAAAAADGPgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsT4AAAAAAACxPgAAAAAAAAAAAAAAAPC/"
				],
				[
					853,
					1,
					"left_delete",
					null,
					"AQAAAMI+AAAAAAAAwj4AAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAxj4AAAAAAADGPgAAAAAAAAAAAAAAAPC/"
				],
				[
					854,
					1,
					"insert",
					{
						"characters": "else:"
					},
					"BQAAAMI+AAAAAAAAwz4AAAAAAAAAAAAAwz4AAAAAAADEPgAAAAAAAAAAAADEPgAAAAAAAMU+AAAAAAAAAAAAAMU+AAAAAAAAxj4AAAAAAAAAAAAAxj4AAAAAAADHPgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwj4AAAAAAADCPgAAAAAAAAAAAAAAAPC/"
				],
				[
					855,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CQAAAMc+AAAAAAAAyD4AAAAAAAAAAAAAyD4AAAAAAADYPgAAAAAAAAAAAADYPgAAAAAAANw+AAAAAAAAAAAAANw+AAAAAAAA3T4AAAAAAAAAAAAA3T4AAAAAAADePgAAAAAAAAAAAADePgAAAAAAAN8+AAAAAAAAAAAAAN8+AAAAAAAA4D4AAAAAAAAAAAAA4D4AAAAAAADhPgAAAAAAAAAAAADhPgAAAAAAAOI+AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxz4AAAAAAADHPgAAAAAAAAAAAAAAAPC/"
				],
				[
					856,
					1,
					"insert",
					{
						"characters": " False"
					},
					"BgAAAOI+AAAAAAAA4z4AAAAAAAAAAAAA4z4AAAAAAADkPgAAAAAAAAAAAADkPgAAAAAAAOU+AAAAAAAAAAAAAOU+AAAAAAAA5j4AAAAAAAAAAAAA5j4AAAAAAADnPgAAAAAAAAAAAADnPgAAAAAAAOg+AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4j4AAAAAAADiPgAAAAAAAAAAAAAAAPC/"
				],
				[
					862,
					1,
					"left_delete",
					null,
					"AQAAAJI+AAAAAAAAkj4AAAAAAABXAAAAICAgICAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQogICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICByZXR1cm4gRmFsc2UK",
					"AQAAAAAAAAABAAAAkj4AAAAAAADpPgAAAAAAAAAAAAAAAPC/"
				],
				[
					865,
					2,
					"left_delete",
					null,
					"AgAAAG8+AAAAAAAAbz4AAAAAAAABAAAAZm4+AAAAAAAAbj4AAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAcD4AAAAAAABwPgAAAAAAAAAAAAAAAPC/"
				],
				[
					866,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAG4+AAAAAAAAbz4AAAAAAAAAAAAAbz4AAAAAAABwPgAAAAAAAAAAAABwPgAAAAAAAHE+AAAAAAAAAAAAAHE+AAAAAAAAcj4AAAAAAAAAAAAAcj4AAAAAAABzPgAAAAAAAAAAAABzPgAAAAAAAHQ+AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbj4AAAAAAABuPgAAAAAAAAAAAAAAAPC/"
				],
				[
					874,
					1,
					"left_delete",
					null,
					"AQAAAJQ+AAAAAAAAlD4AAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAlT4AAAAAAACVPgAAAAAAAAAAAAAAAPC/"
				],
				[
					883,
					1,
					"insert",
					{
						"characters": "\npr"
					},
					"BQAAALI+AAAAAAAAsz4AAAAAAAAAAAAAsz4AAAAAAAC/PgAAAAAAAAAAAAC/PgAAAAAAAMM+AAAAAAAAAAAAAMM+AAAAAAAAxD4AAAAAAAAAAAAAxD4AAAAAAADFPgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsj4AAAAAAACyPgAAAAAAAAAAAAAAAPC/"
				],
				[
					884,
					1,
					"insert_completion",
					{
						"completion": "print",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "print"
					},
					"AgAAAMM+AAAAAAAAwz4AAAAAAAACAAAAcHLDPgAAAAAAAMg+AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxT4AAAAAAADFPgAAAAAAAAAAAAAAAPC/"
				],
				[
					885,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAMg+AAAAAAAAyj4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyD4AAAAAAADIPgAAAAAAAAAAAAAAAPC/"
				],
				[
					887,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAMk+AAAAAAAAyz4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyT4AAAAAAADJPgAAAAAAAAAAAAAAAPC/"
				],
				[
					888,
					1,
					"insert",
					{
						"characters": "......"
					},
					"BgAAAMo+AAAAAAAAyz4AAAAAAAAAAAAAyz4AAAAAAADMPgAAAAAAAAAAAADMPgAAAAAAAM0+AAAAAAAAAAAAAM0+AAAAAAAAzj4AAAAAAAAAAAAAzj4AAAAAAADPPgAAAAAAAAAAAADPPgAAAAAAANA+AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyj4AAAAAAADKPgAAAAAAAAAAAAAAAPC/"
				],
				[
					897,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAF0+AAAAAAAAXj4AAAAAAAAAAAAAXj4AAAAAAABqPgAAAAAAAAAAAABqPgAAAAAAAG4+AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXT4AAAAAAABdPgAAAAAAAAAAAAAAAPC/"
				],
				[
					898,
					1,
					"paste",
					null,
					"AQAAAG4+AAAAAAAAfT4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbj4AAAAAAABuPgAAAAAAAAAAAAAAAPC/"
				],
				[
					907,
					1,
					"left_delete",
					null,
					"AQAAAHQ+AAAAAAAAdD4AAAAAAAAIAAAAIi4uLi4uLiI",
					"AQAAAAAAAAABAAAAfD4AAAAAAAB0PgAAAAAAAAAAAAAAAPC/"
				],
				[
					908,
					1,
					"paste",
					null,
					"AQAAAHQ+AAAAAAAAhz4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdD4AAAAAAAB0PgAAAAAAAAAAAAAAAPC/"
				],
				[
					915,
					6,
					"left_delete",
					null,
					"BgAAAJ4+AAAAAAAAnj4AAAAAAAABAAAAbp0+AAAAAAAAnT4AAAAAAAABAAAAcpw+AAAAAAAAnD4AAAAAAAABAAAAdZs+AAAAAAAAmz4AAAAAAAABAAAAdJo+AAAAAAAAmj4AAAAAAAABAAAAZZk+AAAAAAAAmT4AAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAnz4AAAAAAACfPgAAAAAAAAAAAAAAAPC/"
				],
				[
					916,
					1,
					"insert",
					{
						"characters": "if"
					},
					"AgAAAJk+AAAAAAAAmj4AAAAAAAAAAAAAmj4AAAAAAACbPgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmT4AAAAAAACZPgAAAAAAAAAAAAAAAPC/"
				],
				[
					919,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAALs+AAAAAAAAvD4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuz4AAAAAAAC7PgAAAAAAAAAAAAAAAPC/"
				],
				[
					920,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CQAAALw+AAAAAAAAvT4AAAAAAAAAAAAAvT4AAAAAAADNPgAAAAAAAAAAAADNPgAAAAAAANE+AAAAAAAAAAAAANE+AAAAAAAA0j4AAAAAAAAAAAAA0j4AAAAAAADTPgAAAAAAAAAAAADTPgAAAAAAANQ+AAAAAAAAAAAAANQ+AAAAAAAA1T4AAAAAAAAAAAAA1T4AAAAAAADWPgAAAAAAAAAAAADWPgAAAAAAANc+AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvD4AAAAAAAC8PgAAAAAAAAAAAAAAAPC/"
				],
				[
					921,
					1,
					"insert",
					{
						"characters": " True"
					},
					"BQAAANc+AAAAAAAA2D4AAAAAAAAAAAAA2D4AAAAAAADZPgAAAAAAAAAAAADZPgAAAAAAANo+AAAAAAAAAAAAANo+AAAAAAAA2z4AAAAAAAAAAAAA2z4AAAAAAADcPgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1z4AAAAAAADXPgAAAAAAAAAAAAAAAPC/"
				],
				[
					928,
					1,
					"cut",
					null,
					"AQAAAG4+AAAAAAAAbj4AAAAAAAAaAAAAcHJpbnQodiwgcGFyYW0uYW5ub3RhdGlvbik",
					"AQAAAAAAAAABAAAAiD4AAAAAAABuPgAAAAAAAAAAAAAAAPC/"
				],
				[
					930,
					1,
					"left_delete",
					null,
					"AQAAAF4+AAAAAAAAXj4AAAAAAAARAAAAICAgICAgICAgICAgICAgIAo",
					"AQAAAAAAAAABAAAAXj4AAAAAAABvPgAAAAAAAAAAAAAAAPC/"
				],
				[
					933,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALE+AAAAAAAAsj4AAAAAAAAAAAAAsj4AAAAAAADGPgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsT4AAAAAAACxPgAAAAAAAAAAAAAAAPC/"
				],
				[
					934,
					1,
					"left_delete",
					null,
					"AQAAAMI+AAAAAAAAwj4AAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAxj4AAAAAAADGPgAAAAAAAAAAAAAAAPC/"
				],
				[
					935,
					1,
					"paste",
					null,
					"AQAAAMI+AAAAAAAA3D4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwj4AAAAAAADCPgAAAAAAAAAAAAAAAPC/"
				],
				[
					943,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMg+AAAAAAAAyT4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyD4AAAAAAADIPgAAAAAAAAAAAAAAAPC/"
				],
				[
					945,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMg+AAAAAAAAyT4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyD4AAAAAAADIPgAAAAAAAAAAAAAAAPC/"
				],
				[
					947,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAMg+AAAAAAAAyj4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyD4AAAAAAADIPgAAAAAAAAAAAAAAAPC/"
				],
				[
					948,
					1,
					"insert",
					{
						"characters": "---"
					},
					"AwAAAMk+AAAAAAAAyj4AAAAAAAAAAAAAyj4AAAAAAADLPgAAAAAAAAAAAADLPgAAAAAAAMw+AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyT4AAAAAAADJPgAAAAAAAAAAAAAAAPC/"
				],
				[
					955,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAM8+AAAAAAAA0D4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzz4AAAAAAADPPgAAAAAAAAAAAAAAAPC/"
				],
				[
					960,
					1,
					"left_delete",
					null,
					"AQAAAM0+AAAAAAAAzT4AAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAzj4AAAAAAADOPgAAAAAAAAAAAAAAAPC/"
				],
				[
					971,
					2,
					"left_delete",
					null,
					"AgAAAG8+AAAAAAAAbz4AAAAAAAABAAAAZm4+AAAAAAAAbj4AAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAcD4AAAAAAABwPgAAAAAAAAAAAAAAAPC/"
				],
				[
					972,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAG4+AAAAAAAAbz4AAAAAAAAAAAAAbz4AAAAAAABwPgAAAAAAAAAAAABwPgAAAAAAAHE+AAAAAAAAAAAAAHE+AAAAAAAAcj4AAAAAAAAAAAAAcj4AAAAAAABzPgAAAAAAAAAAAABzPgAAAAAAAHQ+AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbj4AAAAAAABuPgAAAAAAAAAAAAAAAPC/"
				],
				[
					978,
					1,
					"left_delete",
					null,
					"AQAAALY+AAAAAAAAtj4AAAAAAAAyAAAAICAgICAgICAgICAgICAgIHByaW50KCItLS0iLCB2LCBwYXJhbS5hbm5vdGF0aW9uKQo",
					"AQAAAAAAAAABAAAAtj4AAAAAAADoPgAAAAAAAAAAAAAAAPC/"
				],
				[
					982,
					1,
					"left_delete",
					null,
					"AQAAAJY+AAAAAAAAlj4AAAAAAAAgAAAAICAgICAgICAgICAgICAgICAgICByZXR1cm4gVHJ1ZQo",
					"AQAAAAAAAAABAAAAlj4AAAAAAAC2PgAAAAAAAAAAAAAAAPC/"
				],
				[
					985,
					1,
					"left_delete",
					null,
					"AQAAAJQ+AAAAAAAAlD4AAAAAAAABAAAAOg",
					"AQAAAAAAAAABAAAAlT4AAAAAAACVPgAAAAAAAAAAAAAAAPC/"
				],
				[
					993,
					1,
					"left_delete",
					null,
					"AQAAAKpAAAAAAAAAqkAAAAAAAAArAAAAICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIGNvbnRpbnVlCg",
					"AQAAAAAAAAABAAAAqkAAAAAAAADVQAAAAAAAAAAAAAAAAPC/"
				],
				[
					1012,
					1,
					"left_delete",
					null,
					"AQAAALM+AAAAAAAAsz4AAAAAAAAgAAAAICAgICAgICAgICAgICAgIHByaW50KCIuLi4uLi4iKQo",
					"AQAAAAAAAAABAAAAsz4AAAAAAADTPgAAAAAAAAAAAAAAAPC/"
				],
				[
					1023,
					1,
					"left_delete",
					null,
					"AQAAAE0+AAAAAAAATT4AAAAAAABmAAAAICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgcmV0dXJuIGlzaW5zdGFuY2UodiwgcGFyYW0uYW5ub3RhdGlvbikKICAgICAgICAgICAgZXhjZXB0IFR5cGVFcnJvcjoK",
					"AQAAAAAAAAABAAAATT4AAAAAAACzPgAAAAAAAAAAAAAAAPC/"
				],
				[
					1027,
					1,
					"unindent",
					null,
					"CgAAAE0+AAAAAAAATT4AAAAAAAAEAAAAICAgIIA+AAAAAAAAgD4AAAAAAAAEAAAAICAgIJo+AAAAAAAAmj4AAAAAAAAEAAAAICAgIM4+AAAAAAAAzj4AAAAAAAAEAAAAICAgIO0+AAAAAAAA7T4AAAAAAAAEAAAAICAgIBI/AAAAAAAAEj8AAAAAAAAEAAAAICAgIFU/AAAAAAAAVT8AAAAAAAAEAAAAICAgIIs/AAAAAAAAiz8AAAAAAAAEAAAAICAgINM/AAAAAAAA0z8AAAAAAAAEAAAAICAgIOo/AAAAAAAA6j8AAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAfj4AAAAAAAAjQAAAAAAAAAAAAAAAQHlA"
				],
				[
					1045,
					1,
					"left_delete",
					null,
					"AQAAACMzAAAAAAAAIzMAAAAAAAAvAAAAICAgIGVsc2U6CiAgICAgICAgcmV0dXJuIGlzaW5zdGFuY2UodmFsLCBzcGVjKQo",
					"AQAAAAAAAAABAAAAIzMAAAAAAABSMwAAAAAAAAAAAAAAAPC/"
				],
				[
					1052,
					1,
					"insert",
					{
						"characters": "\n\n"
					},
					"BQAAALYuAAAAAAAAty4AAAAAAAAAAAAAty4AAAAAAAC7LgAAAAAAAAAAAAC7LgAAAAAAALwuAAAAAAAAAAAAALwuAAAAAAAAwC4AAAAAAAAAAAAAty4AAAAAAAC3LgAAAAAAAAQAAAAgICAg",
					"AQAAAAAAAAABAAAAti4AAAAAAAC2LgAAAAAAAAAAAAAAAPC/"
				],
				[
					1053,
					2,
					"left_delete",
					null,
					"AgAAALguAAAAAAAAuC4AAAAAAAAEAAAAICAgILcuAAAAAAAAty4AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAvC4AAAAAAAC8LgAAAAAAAAAAAAAAAPC/"
				],
				[
					1054,
					1,
					"reindent",
					null,
					"AQAAALcuAAAAAAAAuy4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAty4AAAAAAAC3LgAAAAAAAAAAAAAAAPC/"
				],
				[
					1055,
					1,
					"insert",
					{
						"characters": "try:"
					},
					"BAAAALsuAAAAAAAAvC4AAAAAAAAAAAAAvC4AAAAAAAC9LgAAAAAAAAAAAAC9LgAAAAAAAL4uAAAAAAAAAAAAAL4uAAAAAAAAvy4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuy4AAAAAAAC7LgAAAAAAAAAAAAAAAPC/"
				],
				[
					1056,
					1,
					"insert",
					{
						"characters": "\nret"
					},
					"BgAAAL8uAAAAAAAAwC4AAAAAAAAAAAAAwC4AAAAAAADELgAAAAAAAAAAAADELgAAAAAAAMguAAAAAAAAAAAAAMguAAAAAAAAyS4AAAAAAAAAAAAAyS4AAAAAAADKLgAAAAAAAAAAAADKLgAAAAAAAMsuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvy4AAAAAAAC/LgAAAAAAAAAAAAAAAPC/"
				],
				[
					1057,
					1,
					"insert_completion",
					{
						"completion": "->",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "ret"
					},
					"AgAAAMguAAAAAAAAyC4AAAAAAAADAAAAcmV0yC4AAAAAAADKLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyy4AAAAAAADLLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1058,
					2,
					"left_delete",
					null,
					"AgAAAMkuAAAAAAAAyS4AAAAAAAABAAAAPsguAAAAAAAAyC4AAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAyi4AAAAAAADKLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1059,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"AwAAAMguAAAAAAAAyS4AAAAAAAAAAAAAyS4AAAAAAADKLgAAAAAAAAAAAADKLgAAAAAAAMsuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyC4AAAAAAADILgAAAAAAAAAAAAAAAPC/"
				],
				[
					1061,
					1,
					"insert_completion",
					{
						"completion": "return",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "return"
					},
					"AgAAAMguAAAAAAAAyC4AAAAAAAADAAAAcmV0yC4AAAAAAADOLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyy4AAAAAAADLLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1062,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAAM4uAAAAAAAAzy4AAAAAAAAAAAAAzy4AAAAAAADQLgAAAAAAAAAAAADQLgAAAAAAANEuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzi4AAAAAAADOLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1063,
					1,
					"insert_completion",
					{
						"completion": "isinstance",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "isinstance"
					},
					"AgAAAM8uAAAAAAAAzy4AAAAAAAACAAAAaXPPLgAAAAAAANkuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0S4AAAAAAADRLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1064,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAANkuAAAAAAAA2y4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2S4AAAAAAADZLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1066,
					1,
					"insert",
					{
						"characters": "sp"
					},
					"AgAAANouAAAAAAAA2y4AAAAAAAAAAAAA2y4AAAAAAADcLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2i4AAAAAAADaLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1067,
					1,
					"insert_completion",
					{
						"completion": "spec",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "spec"
					},
					"AgAAANouAAAAAAAA2i4AAAAAAAACAAAAc3DaLgAAAAAAAN4uAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3C4AAAAAAADcLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1069,
					1,
					"insert",
					{
						"characters": "val,"
					},
					"BAAAANouAAAAAAAA2y4AAAAAAAAAAAAA2y4AAAAAAADcLgAAAAAAAAAAAADcLgAAAAAAAN0uAAAAAAAAAAAAAN0uAAAAAAAA3i4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2i4AAAAAAADaLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1070,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAN4uAAAAAAAA3y4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3i4AAAAAAADeLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1072,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOQuAAAAAAAA5S4AAAAAAAAAAAAA5S4AAAAAAADtLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5C4AAAAAAADkLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1073,
					1,
					"left_delete",
					null,
					"AQAAAOkuAAAAAAAA6S4AAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAA7S4AAAAAAADtLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1074,
					1,
					"insert",
					{
						"characters": "es"
					},
					"AgAAAOkuAAAAAAAA6i4AAAAAAAAAAAAA6i4AAAAAAADrLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6S4AAAAAAADpLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1075,
					1,
					"left_delete",
					null,
					"AQAAAOouAAAAAAAA6i4AAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAA6y4AAAAAAADrLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1076,
					1,
					"insert",
					{
						"characters": "xc"
					},
					"AgAAAOouAAAAAAAA6y4AAAAAAAAAAAAA6y4AAAAAAADsLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6i4AAAAAAADqLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1077,
					1,
					"insert_completion",
					{
						"completion": "except",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "except"
					},
					"AgAAAOkuAAAAAAAA6S4AAAAAAAADAAAAZXhj6S4AAAAAAADvLgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7C4AAAAAAADsLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1078,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAO8uAAAAAAAA8C4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7y4AAAAAAADvLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1079,
					1,
					"insert",
					{
						"characters": "\npas"
					},
					"BgAAAPAuAAAAAAAA8S4AAAAAAAAAAAAA8S4AAAAAAAD1LgAAAAAAAAAAAAD1LgAAAAAAAPkuAAAAAAAAAAAAAPkuAAAAAAAA+i4AAAAAAAAAAAAA+i4AAAAAAAD7LgAAAAAAAAAAAAD7LgAAAAAAAPwuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8C4AAAAAAADwLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1080,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAPwuAAAAAAAA/S4AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/C4AAAAAAAD8LgAAAAAAAAAAAAAAAPC/"
				],
				[
					1086,
					1,
					"insert",
					{
						"characters": " Ty"
					},
					"AwAAAO8uAAAAAAAA8C4AAAAAAAAAAAAA8C4AAAAAAADxLgAAAAAAAAAAAADxLgAAAAAAAPIuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7y4AAAAAAADvLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1087,
					1,
					"insert_completion",
					{
						"completion": "TypeError",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "TypeError"
					},
					"AgAAAPAuAAAAAAAA8C4AAAAAAAACAAAAVHnwLgAAAAAAAPkuAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8i4AAAAAAADyLgAAAAAAAAAAAAAAAPC/"
				],
				[
					1111,
					1,
					"left_delete",
					null,
					"AQAAAJJAAAAAAAAAkkAAAAAAAAAgAAAAInJldHVybiIgaW4gZnVuYy5fX2Fubm90YXRpb25zX18",
					"AQAAAAAAAAABAAAAkkAAAAAAAACyQAAAAAAAAAAAAAAAAPC/"
				],
				[
					1112,
					1,
					"paste",
					null,
					"AQAAAJJAAAAAAAAAqEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkkAAAAAAAACSQAAAAAAAAAAAAAAAAPC/"
				],
				[
					1113,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAAKhAAAAAAAAAqUAAAAAAAAAAAAAAqUAAAAAAAACqQAAAAAAAAAAAAACqQAAAAAAAAKtAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqEAAAAAAAACoQAAAAAAAAAAAAAAAAPC/"
				],
				[
					1114,
					1,
					"insert",
					{
						"characters": " not"
					},
					"BAAAAKtAAAAAAAAArEAAAAAAAAAAAAAArEAAAAAAAACtQAAAAAAAAAAAAACtQAAAAAAAAK5AAAAAAAAAAAAAAK5AAAAAAAAAr0AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAq0AAAAAAAACrQAAAAAAAAAAAAAAAAPC/"
				],
				[
					1115,
					1,
					"insert",
					{
						"characters": " _"
					},
					"AgAAAK9AAAAAAAAAsEAAAAAAAAAAAAAAsEAAAAAAAACxQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAr0AAAAAAAACvQAAAAAAAAAAAAAAAAPC/"
				],
				[
					1117,
					1,
					"insert_completion",
					{
						"completion": "_empty",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "_empty"
					},
					"AgAAALBAAAAAAAAAsEAAAAAAAAABAAAAX7BAAAAAAAAAtkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsUAAAAAAAACxQAAAAAAAAAAAAAAAAPC/"
				],
				[
					1126,
					1,
					"left_delete",
					null,
					"AQAAAOFAAAAAAAAA4UAAAAAAAAA5AAAAICAgICAgICAgICAgaWYgYW5uIGlzIF9lbXB0eToKICAgICAgICAgICAgICAgIHJldHVybiByZXQK",
					"AQAAAAAAAAABAAAA4UAAAAAAAAAaQQAAAAAAAAAAAAAAAPC/"
				],
				[
					1135,
					1,
					"left_delete",
					null,
					"AQAAACdBAAAAAAAAJ0EAAAAAAABUAAAAICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgaXNpbnN0YW5jZShyZXQsIGFubikKICAgICAgICAgICAgZXhjZXB0IFR5cGVFcnJvcjoK",
					"AQAAAAAAAAABAAAAJ0EAAAAAAAB7QQAAAAAAAAAAAAAAAPC/"
				],
				[
					1139,
					1,
					"unindent",
					null,
					"CAAAACdBAAAAAAAAJ0EAAAAAAAAEAAAAICAgIE9BAAAAAAAAT0EAAAAAAAAEAAAAICAgIG5BAAAAAAAAbkEAAAAAAAAEAAAAICAgIJNBAAAAAAAAk0EAAAAAAAAEAAAAICAgIN9BAAAAAAAA30EAAAAAAAAEAAAAICAgIAhCAAAAAAAACEIAAAAAAAAEAAAAICAgIEFCAAAAAAAAQUIAAAAAAAAEAAAAICAgIFhCAAAAAAAAWEIAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAASkEAAAAAAACJQgAAAAAAAAAAAAAAEHJA"
				],
				[
					1148,
					1,
					"insert",
					{
						"characters": "\nprint"
					},
					"BwAAAIZAAAAAAAAAh0AAAAAAAAAAAAAAh0AAAAAAAACPQAAAAAAAAAAAAACPQAAAAAAAAJBAAAAAAAAAAAAAAJBAAAAAAAAAkUAAAAAAAAAAAAAAkUAAAAAAAACSQAAAAAAAAAAAAACSQAAAAAAAAJNAAAAAAAAAAAAAAJNAAAAAAAAAlEAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhkAAAAAAAACGQAAAAAAAAAAAAAAAAPC/"
				],
				[
					1149,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAJRAAAAAAAAAlkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlEAAAAAAAACUQAAAAAAAAAAAAAAAAPC/"
				],
				[
					1151,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAJVAAAAAAAAAl0AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlUAAAAAAAACVQAAAAAAAAAAAAAAAAPC/"
				],
				[
					1152,
					1,
					"insert",
					{
						"characters": "returnded"
					},
					"CQAAAJZAAAAAAAAAl0AAAAAAAAAAAAAAl0AAAAAAAACYQAAAAAAAAAAAAACYQAAAAAAAAJlAAAAAAAAAAAAAAJlAAAAAAAAAmkAAAAAAAAAAAAAAmkAAAAAAAACbQAAAAAAAAAAAAACbQAAAAAAAAJxAAAAAAAAAAAAAAJxAAAAAAAAAnUAAAAAAAAAAAAAAnUAAAAAAAACeQAAAAAAAAAAAAACeQAAAAAAAAJ9AAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlkAAAAAAAACWQAAAAAAAAAAAAAAAAPC/"
				],
				[
					1154,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAJVAAAAAAAAAlkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlUAAAAAAAACVQAAAAAAAAAAAAAAAAPC/"
				],
				[
					1156,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKBAAAAAAAAAoUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoEAAAAAAAACgQAAAAAAAAAAAAAAAAPC/"
				],
				[
					1157,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAAKFAAAAAAAAAo0AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoUAAAAAAAAChQAAAAAAAAAAAAAAAAPC/"
				],
				[
					1158,
					1,
					"insert",
					{
						"characters": "ret="
					},
					"BAAAAKJAAAAAAAAAo0AAAAAAAAAAAAAAo0AAAAAAAACkQAAAAAAAAAAAAACkQAAAAAAAAKVAAAAAAAAAAAAAAKVAAAAAAAAApkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAokAAAAAAAACiQAAAAAAAAAAAAAAAAPC/"
				],
				[
					1163,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAKhAAAAAAAAAqUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqEAAAAAAAACoQAAAAAAAAAAAAAAAAPC/"
				],
				[
					1164,
					1,
					"insert",
					{
						"characters": " s"
					},
					"AgAAAKlAAAAAAAAAqkAAAAAAAAAAAAAAqkAAAAAAAACrQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqUAAAAAAAACpQAAAAAAAAAAAAAAAAPC/"
				],
				[
					1166,
					1,
					"insert_completion",
					{
						"completion": "sign",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "sign"
					},
					"AgAAAKpAAAAAAAAAqkAAAAAAAAABAAAAc6pAAAAAAAAArkAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAq0AAAAAAAACrQAAAAAAAAAAAAAAAAPC/"
				],
				[
					1167,
					1,
					"insert",
					{
						"characters": ".re"
					},
					"AwAAAK5AAAAAAAAAr0AAAAAAAAAAAAAAr0AAAAAAAACwQAAAAAAAAAAAAACwQAAAAAAAALFAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAArkAAAAAAAACuQAAAAAAAAAAAAAAAAPC/"
				],
				[
					1168,
					1,
					"insert_completion",
					{
						"completion": "return_annotation",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "return_annotation"
					},
					"AgAAAK9AAAAAAAAAr0AAAAAAAAACAAAAcmWvQAAAAAAAAMBAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsUAAAAAAAACxQAAAAAAAAAAAAAAAAPC/"
				],
				[
					1175,
					1,
					"insert",
					{
						"characters": "\nprint"
					},
					"BwAAABtBAAAAAAAAHEEAAAAAAAAAAAAAHEEAAAAAAAAoQQAAAAAAAAAAAAAoQQAAAAAAAClBAAAAAAAAAAAAAClBAAAAAAAAKkEAAAAAAAAAAAAAKkEAAAAAAAArQQAAAAAAAAAAAAArQQAAAAAAACxBAAAAAAAAAAAAACxBAAAAAAAALUEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAG0EAAAAAAAAbQQAAAAAAAAAAAAAAAPC/"
				],
				[
					1176,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAC1BAAAAAAAAL0EAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALUEAAAAAAAAtQQAAAAAAAAAAAAAAAPC/"
				],
				[
					1178,
					1,
					"insert_snippet",
					{
						"contents": "\"$0\""
					},
					"AQAAAC5BAAAAAAAAMEEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALkEAAAAAAAAuQQAAAAAAAAAAAAAAAPC/"
				],
				[
					1179,
					1,
					"insert",
					{
						"characters": "retann"
					},
					"BgAAAC9BAAAAAAAAMEEAAAAAAAAAAAAAMEEAAAAAAAAxQQAAAAAAAAAAAAAxQQAAAAAAADJBAAAAAAAAAAAAADJBAAAAAAAAM0EAAAAAAAAAAAAAM0EAAAAAAAA0QQAAAAAAAAAAAAA0QQAAAAAAADVBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAL0EAAAAAAAAvQQAAAAAAAAAAAAAAAPC/"
				],
				[
					1180,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADVBAAAAAAAANkEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANUEAAAAAAAA1QQAAAAAAAAAAAAAAAPC/"
				],
				[
					1181,
					1,
					"insert_snippet",
					{
						"contents": "{$0}"
					},
					"AQAAADZBAAAAAAAAOEEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANkEAAAAAAAA2QQAAAAAAAAAAAAAAAPC/"
				],
				[
					1182,
					1,
					"insert",
					{
						"characters": "ann=!r"
					},
					"BgAAADdBAAAAAAAAOEEAAAAAAAAAAAAAOEEAAAAAAAA5QQAAAAAAAAAAAAA5QQAAAAAAADpBAAAAAAAAAAAAADpBAAAAAAAAO0EAAAAAAAAAAAAAO0EAAAAAAAA8QQAAAAAAAAAAAAA8QQAAAAAAAD1BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAN0EAAAAAAAA3QQAAAAAAAAAAAAAAAPC/"
				],
				[
					1184,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAAC5BAAAAAAAAL0EAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALkEAAAAAAAAuQQAAAAAAAAAAAAAAAPC/"
				],
				[
					1196,
					1,
					"left_delete",
					null,
					"AQAAALBBAAAAAAAAsEEAAAAAAAAfAAAAICAgICAgICAgICAgICAgIGVycm9ycy5hcHBlbmQoCg",
					"AQAAAAAAAAABAAAAsEEAAAAAAADPQQAAAAAAAAAAAAAAAPC/"
				],
				[
					1200,
					1,
					"left_delete",
					null,
					"AQAAAJpCAAAAAAAAmkIAAAAAAAASAAAAICAgICAgICAgICAgICAgICkK",
					"AQAAAAAAAAABAAAAmkIAAAAAAACsQgAAAAAAAAAAAAAAAPC/"
				],
				[
					1203,
					1,
					"left_delete",
					null,
					"AQAAAJhCAAAAAAAAmEIAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAAmUIAAAAAAACZQgAAAAAAAAAAAAAAAPC/"
				],
				[
					1207,
					1,
					"unindent",
					null,
					"BQAAALBBAAAAAAAAsEEAAAAAAAAEAAAAICAgINFBAAAAAAAA0UEAAAAAAAAEAAAAICAgIBlCAAAAAAAAGUIAAAAAAAAEAAAAICAgID5CAAAAAAAAPkIAAAAAAAAEAAAAICAgIHNCAAAAAAAAc0IAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAAmEIAAAAAAADFQQAAAAAAAAAAAAAAoGVA"
				],
				[
					1210,
					1,
					"insert",
					{
						"characters": "raise"
					},
					"BQAAAMBBAAAAAAAAwUEAAAAAAAAAAAAAwUEAAAAAAADCQQAAAAAAAAAAAADCQQAAAAAAAMNBAAAAAAAAAAAAAMNBAAAAAAAAxEEAAAAAAAAAAAAAxEEAAAAAAADFQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwEEAAAAAAADAQQAAAAAAAAAAAAAAAPC/"
				],
				[
					1211,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMVBAAAAAAAAxkEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxUEAAAAAAADFQQAAAAAAAAAAAAAAAPC/"
				],
				[
					1229,
					1,
					"replace_next",
					null,
					"AQAAAIQ9AAAAAAAAhD0AAAAAAAAkAAAAcHJpbnQoZid7az0hcn0sIHt2PSFyfSwge3BhcmFtPSFyfScp",
					"AQAAAAAAAAABAAAAhD0AAAAAAACoPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1230,
					1,
					"replace_next",
					null,
					"AQAAAGtAAAAAAAAAa0AAAAAAAAAyAAAAcHJpbnQoZiJyZXR1cm5kZWQge3JldD19Iiwgc2lnbi5yZXR1cm5fYW5ub3RhdGlvbik",
					"AQAAAAAAAAABAAAAa0AAAAAAAACdQAAAAAAAAAAAAAAAAPC/"
				],
				[
					1231,
					1,
					"replace_next",
					null,
					"AQAAANJAAAAAAAAA0kAAAAAAAAAZAAAAcHJpbnQoZiJyZXRhbm4ge2Fubj0hcn0iKQ",
					"AQAAAAAAAAABAAAA0kAAAAAAAADrQAAAAAAAAAAAAAAAAPC/"
				],
				[
					1236,
					1,
					"trim_trailing_white_space",
					null,
					"AwAAAMZAAAAAAAAAxkAAAAAAAAAMAAAAICAgICAgICAgICAgY0AAAAAAAABjQAAAAAAAAAgAAAAgICAgICAgIHg9AAAAAAAAeD0AAAAAAAAMAAAAICAgICAgICAgICAg",
					"AQAAAAAAAAABAAAARioAAAAAAABXKgAAAAAAAAAAAAAAAPC/"
				],
				[
					1289,
					1,
					"left_delete",
					null,
					"AQAAAHc9AAAAAAAAdz0AAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAeD0AAAAAAAB4PQAAAAAAAAAAAAAAAPC/"
				],
				[
					1294,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BAAAAEs9AAAAAAAATD0AAAAAAAAAAAAATD0AAAAAAABUPQAAAAAAAAAAAABUPQAAAAAAAFU9AAAAAAAAAAAAAFU9AAAAAAAAVj0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASz0AAAAAAABLPQAAAAAAAAAAAAAAoHVA"
				],
				[
					1295,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFY9AAAAAAAAVz0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVj0AAAAAAABWPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1297,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAFQ9AAAAAAAAWD0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVD0AAAAAAABUPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1299,
					1,
					"insert",
					{
						"characters": "pa"
					},
					"AgAAAFs9AAAAAAAAXD0AAAAAAAAAAAAAXD0AAAAAAABdPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWz0AAAAAAABbPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1300,
					1,
					"insert_completion",
					{
						"completion": "param",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "param"
					},
					"AgAAAFs9AAAAAAAAWz0AAAAAAAACAAAAcGFbPQAAAAAAAGA9AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXT0AAAAAAABdPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1302,
					1,
					"left_delete",
					null,
					"AQAAAEw9AAAAAAAATD0AAAAAAAAWAAAAICAgICAgICAgICAgaWYgcGFyYW06Cg",
					"AQAAAAAAAAABAAAATD0AAAAAAABiPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1305,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BAAAAHY9AAAAAAAAdz0AAAAAAAAAAAAAdz0AAAAAAACDPQAAAAAAAAAAAACDPQAAAAAAAIQ9AAAAAAAAAAAAAIQ9AAAAAAAAhT0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAdj0AAAAAAAB2PQAAAAAAAAAAAAAAAPC/"
				],
				[
					1306,
					1,
					"insert",
					{
						"characters": " pa"
					},
					"AwAAAIU9AAAAAAAAhj0AAAAAAAAAAAAAhj0AAAAAAACHPQAAAAAAAAAAAACHPQAAAAAAAIg9AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhT0AAAAAAACFPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1307,
					1,
					"insert_completion",
					{
						"completion": "param",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "param"
					},
					"AgAAAIY9AAAAAAAAhj0AAAAAAAACAAAAcGGGPQAAAAAAAIs9AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiD0AAAAAAACIPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1308,
					1,
					"insert",
					{
						"characters": ".an"
					},
					"AwAAAIs9AAAAAAAAjD0AAAAAAAAAAAAAjD0AAAAAAACNPQAAAAAAAAAAAACNPQAAAAAAAI49AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiz0AAAAAAACLPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1309,
					1,
					"insert_completion",
					{
						"completion": "annotation",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "annotation"
					},
					"AgAAAIw9AAAAAAAAjD0AAAAAAAACAAAAYW6MPQAAAAAAAJY9AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjj0AAAAAAACOPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1310,
					1,
					"insert",
					{
						"characters": " =="
					},
					"AwAAAJY9AAAAAAAAlz0AAAAAAAAAAAAAlz0AAAAAAACYPQAAAAAAAAAAAACYPQAAAAAAAJk9AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlj0AAAAAAACWPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1311,
					1,
					"insert",
					{
						"characters": " _"
					},
					"AgAAAJk9AAAAAAAAmj0AAAAAAAAAAAAAmj0AAAAAAACbPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmT0AAAAAAACZPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1313,
					1,
					"insert_completion",
					{
						"completion": "_empty",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "_empty"
					},
					"AgAAAJo9AAAAAAAAmj0AAAAAAAABAAAAX5o9AAAAAAAAoD0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmz0AAAAAAACbPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1316,
					2,
					"left_delete",
					null,
					"AgAAAJg9AAAAAAAAmD0AAAAAAAABAAAAPZc9AAAAAAAAlz0AAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAAmT0AAAAAAACZPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1317,
					1,
					"insert",
					{
						"characters": "is"
					},
					"AgAAAJc9AAAAAAAAmD0AAAAAAAAAAAAAmD0AAAAAAACZPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlz0AAAAAAACXPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1319,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAKA9AAAAAAAAoT0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoD0AAAAAAACgPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1320,
					1,
					"insert",
					{
						"characters": "\nco"
					},
					"BQAAAKE9AAAAAAAAoj0AAAAAAAAAAAAAoj0AAAAAAACuPQAAAAAAAAAAAACuPQAAAAAAALI9AAAAAAAAAAAAALI9AAAAAAAAsz0AAAAAAAAAAAAAsz0AAAAAAAC0PQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoT0AAAAAAAChPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1321,
					1,
					"insert_completion",
					{
						"completion": "continue",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "continue"
					},
					"AgAAALI9AAAAAAAAsj0AAAAAAAACAAAAY2+yPQAAAAAAALo9AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtD0AAAAAAAC0PQAAAAAAAAAAAAAAAPC/"
				],
				[
					1330,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAEs9AAAAAAAATD0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASz0AAAAAAABLPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1340,
					1,
					"insert",
					{
						"characters": " or"
					},
					"AwAAABovAAAAAAAAGy8AAAAAAAAAAAAAGy8AAAAAAAAcLwAAAAAAAAAAAAAcLwAAAAAAAB0vAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGi8AAAAAAAAaLwAAAAAAAAAAAAAAAPC/"
				],
				[
					1341,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAB0vAAAAAAAAHi8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHS8AAAAAAAAdLwAAAAAAAAAAAAAAAPC/"
				],
				[
					1343,
					2,
					"left_delete",
					null,
					"AgAAABUvAAAAAAAAFS8AAAAAAAABAAAAPRQvAAAAAAAAFC8AAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAAFi8AAAAAAAAWLwAAAAAAAAAAAAAAAPC/"
				],
				[
					1344,
					1,
					"insert",
					{
						"characters": "is"
					},
					"AgAAABQvAAAAAAAAFS8AAAAAAAAAAAAAFS8AAAAAAAAWLwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFC8AAAAAAAAULwAAAAAAAAAAAAAAAPC/"
				],
				[
					1346,
					1,
					"insert",
					{
						"characters": "spec"
					},
					"BAAAAB4vAAAAAAAAHy8AAAAAAAAAAAAAHy8AAAAAAAAgLwAAAAAAAAAAAAAgLwAAAAAAACEvAAAAAAAAAAAAACEvAAAAAAAAIi8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHi8AAAAAAAAeLwAAAAAAAAAAAAAAAPC/"
				],
				[
					1347,
					1,
					"insert",
					{
						"characters": " is"
					},
					"AwAAACIvAAAAAAAAIy8AAAAAAAAAAAAAIy8AAAAAAAAkLwAAAAAAAAAAAAAkLwAAAAAAACUvAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIi8AAAAAAAAiLwAAAAAAAAAAAAAAAPC/"
				],
				[
					1348,
					1,
					"insert",
					{
						"characters": " e"
					},
					"AgAAACUvAAAAAAAAJi8AAAAAAAAAAAAAJi8AAAAAAAAnLwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJS8AAAAAAAAlLwAAAAAAAAAAAAAAAPC/"
				],
				[
					1349,
					1,
					"left_delete",
					null,
					"AQAAACYvAAAAAAAAJi8AAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAAJy8AAAAAAAAnLwAAAAAAAAAAAAAAAPC/"
				],
				[
					1350,
					1,
					"insert",
					{
						"characters": "_e"
					},
					"AgAAACYvAAAAAAAAJy8AAAAAAAAAAAAAJy8AAAAAAAAoLwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJi8AAAAAAAAmLwAAAAAAAAAAAAAAAPC/"
				],
				[
					1351,
					1,
					"insert_completion",
					{
						"completion": "_empty",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "_empty"
					},
					"AgAAACYvAAAAAAAAJi8AAAAAAAACAAAAX2UmLwAAAAAAACwvAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKC8AAAAAAAAoLwAAAAAAAAAAAAAAAPC/"
				],
				[
					1358,
					1,
					"cut",
					null,
					"AQAAABovAAAAAAAAGi8AAAAAAAASAAAAIG9yIHNwZWMgaXMgX2VtcHR5",
					"AQAAAAAAAAABAAAALC8AAAAAAAAaLwAAAAAAAAAAAAAAAPC/"
				],
				[
					1366,
					1,
					"paste",
					null,
					"AQAAAJIvAAAAAAAApC8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAki8AAAAAAACSLwAAAAAAAAAAAAAAAPC/"
				],
				[
					1372,
					1,
					"cut",
					null,
					"AQAAAJIvAAAAAAAAki8AAAAAAAASAAAAIG9yIHNwZWMgaXMgX2VtcHR5",
					"AQAAAAAAAAABAAAApC8AAAAAAACSLwAAAAAAAAAAAAAAAPC/"
				],
				[
					1375,
					1,
					"paste",
					null,
					"AQAAAHMvAAAAAAAAhS8AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcy8AAAAAAABzLwAAAAAAAAAAAAAAAPC/"
				],
				[
					1379,
					2,
					"left_delete",
					null,
					"AgAAAG4vAAAAAAAAbi8AAAAAAAABAAAAPW0vAAAAAAAAbS8AAAAAAAABAAAAPQ",
					"AQAAAAAAAAABAAAAby8AAAAAAABvLwAAAAAAAAAAAAAAAPC/"
				],
				[
					1380,
					1,
					"insert",
					{
						"characters": "is"
					},
					"AgAAAG0vAAAAAAAAbi8AAAAAAAAAAAAAbi8AAAAAAABvLwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbS8AAAAAAABtLwAAAAAAAAAAAAAAAPC/"
				],
				[
					1390,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPc8AAAAAAAA+DwAAAAAAAAAAAAA+DwAAAAAAAAIPQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9zwAAAAAAAD3PAAAAAAAAAAAAAAAAPC/"
				],
				[
					1392,
					1,
					"left_delete",
					null,
					"AQAAAPg8AAAAAAAA+DwAAAAAAAARAAAAICAgICAgICAgICAgICAgIAo",
					"AQAAAAAAAAABAAAA+DwAAAAAAAAJPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1398,
					1,
					"cut",
					null,
					"AQAAAAA9AAAAAAAAAD0AAAAAAAAeAAAAYXJncyA9IHNpZ24uYmluZCgqcGFyZ3MsICoqa3cp",
					"AQAAAAAAAAABAAAAAD0AAAAAAAAePQAAAAAAAAAAAAAAAPC/"
				],
				[
					1399,
					3,
					"left_delete",
					null,
					"AwAAAPw8AAAAAAAA/DwAAAAAAAAEAAAAICAgIPg8AAAAAAAA+DwAAAAAAAAEAAAAICAgIPc8AAAAAAAA9zwAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAAD0AAAAAAAAAPQAAAAAAAAAAAAAAAPC/"
				],
				[
					1402,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAG88AAAAAAAAcDwAAAAAAAAAAAAAcDwAAAAAAAB8PAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbzwAAAAAAABvPAAAAAAAAAAAAAAAAPC/"
				],
				[
					1403,
					1,
					"paste",
					null,
					"AQAAAHw8AAAAAAAAmjwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfDwAAAAAAAB8PAAAAAAAAAAAAAAAAPC/"
				],
				[
					1406,
					1,
					"cut",
					null,
					"AQAAAFk8AAAAAAAAWTwAAAAAAAAWAAAAc2lnbiA9IHNpZ25hdHVyZShmdW5jKQ",
					"AQAAAAAAAAABAAAAbzwAAAAAAABZPAAAAAAAAAAAAAAAAPC/"
				],
				[
					1408,
					1,
					"left_delete",
					null,
					"AQAAAE08AAAAAAAATTwAAAAAAAANAAAAICAgICAgICAgICAgCg",
					"AQAAAAAAAAABAAAATTwAAAAAAABaPAAAAAAAAAAAAAAAAPC/"
				],
				[
					1411,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAD88AAAAAAAAQDwAAAAAAAAAAAAAQDwAAAAAAABMPAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPzwAAAAAAAA/PAAAAAAAAAAAAAAAAPC/"
				],
				[
					1412,
					1,
					"left_delete",
					null,
					"AQAAAEg8AAAAAAAASDwAAAAAAAAEAAAAICAgIA",
					"AQAAAAAAAAABAAAATDwAAAAAAABMPAAAAAAAAAAAAAAAAPC/"
				],
				[
					1413,
					1,
					"paste",
					null,
					"AQAAAEg8AAAAAAAAXjwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASDwAAAAAAABIPAAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "src/setup.py",
			"settings":
			{
				"buffer_size": 2658,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
			]
		},
		{
			"contents": "plugins: anyio-4.4.0                                                                                                   \ncollected 6 items                                                                                                      \n                                                                                                                       \ntests\\test_cast.py .                                                                                            [ 16%] \ntests\\test_check.py .                                                                                           [ 33%] \ntests\\test_overload.py .                                                                                        [ 50%] \ntests\\test_speed.py FE                                                                                          [ 83%] \ntests\\test_values.py .                                                                                          [100%] \n                                                                                                                       \n======================================================= ERRORS ======================================================= \n__________________________________________ ERROR at setup of testTypeMatch ___________________________________________ \nfile C:\\pyoload\\src\\tests\\test_speed.py, line 16                                                                       \n  def testTypeMatch(f):                                                                                                \nE       fixture 'f' not found                                                                                          \n>       available fixtures: anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog​‌​\n, capsys, capsysbinary, doctest_namespace, monkeypatch, pytestconfig, record_property, record_testsuite_property, recor​‌​\nd_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory                                           \n>       use 'pytest --fixtures [testpath]' for help on them.                                                           \n                                                                                                                       \nC:\\pyoload\\src\\tests\\test_speed.py:16                                                                                  \n====================================================== FAILURES ====================================================== \n_____________________________________________________ test_speed _____________________________________________________ \n                                                                                                                       \n    def test_speed():                                                                                                  \n        f = open(src / \"logs.yaml\", 'w')                                                                               \n>       testTypeMatch(f)                                                                                               \n                                                                                                                       \ntests\\test_speed.py:12:                                                                                                \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  \n                                                                                                                       \nf = <_io.TextIOWrapper name='C:\\\\pyoload\\\\logs.yaml' mode='w' encoding='cp1252'>                                       \n                                                                                                                       \n    def testTypeMatch(f):                                                                                              \n        begin = nanos()                                                                                                \n        for _ in range(N):                                                                                             \n            typeMatch(3, int)                                                                                          \n        end = nanos()                                                                                                  \n        begin2 = nanos()                                                                                               \n        for _ in range(N):                                                                                             \n            isinstance(3, int)                                                                                         \n        end2 = nanos()                                                                                                 \n        dt = (end - begin) - (end2 - begin2)                                                                           \n        dt = dt / 1000 / N                                                                                             \n>       print(f'typeMatch vs isinstance on int:True  {dt}ms', stream=f)                                                \nE       TypeError: 'stream' is an invalid keyword argument for print()                                                 \n                                                                                                                       \ntests\\test_speed.py:27: TypeError                                                                                      \n============================================== short test summary info =============================================== \nFAILED tests/test_speed.py::test_speed - TypeError: 'stream' is an invalid keyword argument for print()                \nERROR tests/test_speed.py::testTypeMatch                                                                               \n======================================== 1 failed, 4 passed, 1 error in 0.73s ======================================== \nPS C:\\pyoload\\src> pytest                                                                                              \n================================================ test session starts ================================================= \nplatform win32 -- Python 3.11.9, pytest-8.2.1, pluggy-1.5.0                                                            \nrootdir: C:\\pyoload\\src                                                                                                \nplugins: anyio-4.4.0                                                                                                   \ncollected 6 items                                                                                                      \n                                                                                                                       \ntests\\test_cast.py .                                                                                            [ 16%] \ntests\\test_check.py .                                                                                           [ 33%] \ntests\\test_overload.py .                                                                                        [ 50%] \ntests\\test_speed.py .E                                                                                          [ 83%] \ntests\\test_values.py .                                                                                          [100%] \n                                                                                                                       \n======================================================= ERRORS ======================================================= \n__________________________________________ ERROR at setup of testTypeMatch ___________________________________________ \nfile C:\\pyoload\\src\\tests\\test_speed.py, line 16                                                                       \n  def testTypeMatch(f):                                                                                                \nE       fixture 'f' not found                                                                                          \n>       available fixtures: anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog​‌​\n, capsys, capsysbinary, doctest_namespace, monkeypatch, pytestconfig, record_property, record_testsuite_property, recor​‌​\nd_xml_attribute, recwarn, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory                                           \n>       use 'pytest --fixtures [testpath]' for help on them.                                                           \n                                                                                                                       \nC:\\pyoload\\src\\tests\\test_speed.py:16                                                                                  \n============================================== short test summary info =============================================== \nERROR tests/test_speed.py::testTypeMatch                                                                               \n============================================= 5 passed, 1 error in 0.39s ============================================= \nPS C:\\pyoload\\src> pytest                                                                                              \n================================================ test session starts ================================================= \nplatform win32 -- Python 3.11.9, pytest-8.2.1, pluggy-1.5.0                                                            \nrootdir: C:\\pyoload\\src                                                                                                \nplugins: anyio-4.4.0                                                                                                   \ncollected 5 items                                                                                                      \n                                                                                                                       \ntests\\test_cast.py .                                                                                            [ 20%] \ntests\\test_check.py .                                                                                           [ 40%] \ntests\\test_overload.py .                                                                                        [ 60%] \ntests\\test_speed.py .                                                                                           [ 80%] \ntests\\test_values.py .                                                                                          [100%] \n                                                                                                                       \n================================================= 5 passed in 0.42s ================================================== \nPS C:\\pyoload\\src> pytest                                                                                              \n================================================ test session starts ================================================= \nplatform win32 -- Python 3.11.9, pytest-8.2.1, pluggy-1.5.0                                                            \nrootdir: C:\\pyoload\\src                                                                                                \nplugins: anyio-4.4.0                                                                                                   \ncollected 5 items                                                                                                      \n                                                                                                                       \ntests\\test_cast.py .                                                                                            [ 20%] \ntests\\test_check.py .                                                                                           [ 40%] \ntests\\test_overload.py .                                                                                        [ 60%] \ntests\\test_speed.py .                                                                                           [ 80%] \ntests\\test_values.py .                                                                                          [100%] \n                                                                                                                       \n================================================= 5 passed in 0.41s ================================================== \nPS C:\\pyoload\\src> pytest                                                                                              \n================================================ test session starts ================================================= \nplatform win32 -- Python 3.11.9, pytest-8.2.1, pluggy-1.5.0                                                            \nrootdir: C:\\pyoload\\src                                                                                                \nplugins: anyio-4.4.0                                                                                                   \ncollected 5 items                                                                                                      \n                                                                                                                       \ntests\\test_cast.py .                                                                                            [ 20%] \ntests\\test_check.py .                                                                                           [ 40%] \ntests\\test_overload.py .                                                                                        [ 60%] \ntests\\test_speed.py .                                                                                           [ 80%] \ntests\\test_values.py .                                                                                          [100%] \n                                                                                                                       \n================================================= 5 passed in 0.48s ================================================== \nPS C:\\pyoload\\src> pytest                                                                                              \n================================================ test session starts ================================================= \nplatform win32 -- Python 3.11.9, pytest-8.2.1, pluggy-1.5.0                                                            \nrootdir: C:\\pyoload\\src                                                                                                \nplugins: anyio-4.4.0                                                                                                   \ncollected 5 items                                                                                                      \n                                                                                                                       \ntests\\test_cast.py .                                                                                            [ 20%] \ntests\\test_check.py .                                                                                           [ 40%] \ntests\\test_overload.py .                                                                                        [ 60%] \ntests\\test_speed.py .                                                                                           [ 80%] \ntests\\test_values.py .                                                                                          [100%] \n                                                                                                                       \n================================================= 5 passed in 3.47s ================================================== \nPS C:\\pyoload\\src> pytest                                                                                              \n================================================ test session starts ================================================= \nplatform win32 -- Python 3.11.9, pytest-8.2.1, pluggy-1.5.0                                                            \nrootdir: C:\\pyoload\\src                                                                                                \nplugins: anyio-4.4.0                                                                                                   \ncollected 5 items                                                                                                      \n                                                                                                                       \ntests\\test_cast.py .                                                                                            [ 20%] \ntests\\test_check.py .                                                                                           [ 40%] \ntests\\test_overload.py .                                                                                        [ 60%] \ntests\\test_speed.py F                                                                                           [ 80%] \ntests\\test_values.py .                                                                                          [100%] \n                                                                                                                       \n====================================================== FAILURES ====================================================== \n_____________________________________________________ test_speed _____________________________________________________ \n                                                                                                                       \n    def test_speed():                                                                                                  \n        f = open(src / \"logs.yaml\", 'w')                                                                               \n        speedTypeMatch(f)                                                                                              \n>       speedCast(f)                                                                                                   \n                                                                                                                       \ntests\\test_speed.py:13:                                                                                                \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  \n                                                                                                                       \nf = <_io.TextIOWrapper name='C:\\\\pyoload\\\\logs.yaml' mode='w' encoding='cp1252'>                                       \n                                                                                                                       \n    def speedCast(f):                                                                                                  \n>       ct = Cast(int)                                                                                                 \nE       NameError: name 'Cast' is not defined                                                                          \n                                                                                                                       \ntests\\test_speed.py:64: NameError                                                                                      \n============================================== short test summary info =============================================== \nFAILED tests/test_speed.py::test_speed - NameError: name 'Cast' is not defined                                         \n============================================ 1 failed, 4 passed in 3.72s ============================================= \nPS C:\\pyoload\\src> pytest                                                                                              \n================================================ test session starts ================================================= \nplatform win32 -- Python 3.11.9, pytest-8.2.1, pluggy-1.5.0                                                            \nrootdir: C:\\pyoload\\src                                                                                                \nplugins: anyio-4.4.0                                                                                                   \ncollected 5 items                                                                                                      \n                                                                                                                       \ntests\\test_cast.py .                                                                                            [ 20%] \ntests\\test_check.py .                                                                                           [ 40%] \ntests\\test_overload.py .                                                                                        [ 60%] \ntests\\test_speed.py F                                                                                           [ 80%] \ntests\\test_values.py .                                                                                          [100%] \n                                                                                                                       \n====================================================== FAILURES ====================================================== \n_____________________________________________________ test_speed _____________________________________________________ \n                                                                                                                       \nself = <pyoload.Cast object at 0x03459950>, val = 'str'                                                                \n                                                                                                                       \n    def __call__(self: PyoloadAnnotation, val: Any):                                                                   \n        \"\"\"                                                                                                            \n        Calls to the type specified in the object `.type` attribute                                                    \n                                                                                                                       \n        :param val: the value to be casted                                                                             \n                                                                                                                       \n        :return: The casted value                                                                                      \n        \"\"\"                                                                                                            \n        try:                                                                                                           \n>           return Cast.cast(val, self.type)                                                                           \n                                                                                                                       \npyoload\\__init__.py:396:                                                                                               \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  \n                                                                                                                       \nval = 'str', totype = <class 'int'>                                                                                    \n                                                                                                                       \n    @staticmethod                                                                                                      \n    def cast(val: Any, totype: Any) -> Any:                                                                            \n        \"\"\"                                                                                                            \n        The gratest deal.                                                                                              \n        Recursively casts the given value to the specified structure or type                                           \n        e.g                                                                                                            \n                                                                                                                       \n        >>> Cast.cast({ 1: 2}, dict[str, float])                                                                       \n        {'1': 2.0}                                                                                                     \n                                                                                                                       \n        :param val: the value to cast                                                                                  \n        :param totype: The type structure to be casted to.                                                             \n                                                                                                                       \n        :returns: An instance of the casting type                                                                      \n        \"\"\"                                                                                                            \n        if isinstance(totype, GenericAlias):                                                                           \n            if totype.__origin__ == dict:                                                                              \n                if len(totype.__args__) == 2:                                                                          \n                    kt, vt = totype.__args__                                                                           \n                elif len(totype.__args__) == 1:                                                                        \n                    kt, vt = Any, totype.__args__[1]                                                                   \n                return {                                                                                               \n                    Cast.cast(k, kt): Cast.cast(v, vt) for k, v in val.items()                                         \n                }                                                                                                      \n            else:                                                                                                      \n                sub = totype.__args__[0]                                                                               \n                return totype.__origin__([Cast.cast(v, sub) for v in val])                                             \n        if isinstance(totype, UnionType):                                                                              \n            errors = []                                                                                                \n            for subtype in totype.__args__:                                                                            \n                try:                                                                                                   \n                    return Cast.cast(val, subtype)                                                                     \n                except Exception as e:                                                                                 \n                    errors.append(e)                                                                                   \n            else:                                                                                                      \n                raise errors                                                                                           \n        else:                                                                                                          \n>           return totype(val) if not isinstance(val, totype) else val                                                 \nE           ValueError: invalid literal for int() with base 10: 'str'                                                  \n                                                                                                                       \npyoload\\__init__.py:364: ValueError                                                                                    \n                                                                                                                       \nThe above exception was the direct cause of the following exception:                                                   \n                                                                                                                       \n    def test_speed():                                                                                                  \n        f = open(src / \"logs.yaml\", 'w')                                                                               \n        speedTypeMatch(f)                                                                                              \n>       speedCast(f)                                                                                                   \n                                                                                                                       \ntests\\test_speed.py:13:                                                                                                \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  \ntests\\test_speed.py:68: in speedCast                                                                                   \n    ct('str')                                                                                                          \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  \n                                                                                                                       \nself = <pyoload.Cast object at 0x03459950>, val = 'str'                                                                \n                                                                                                                       \n    def __call__(self: PyoloadAnnotation, val: Any):                                                                   \n        \"\"\"                                                                                                            \n        Calls to the type specified in the object `.type` attribute                                                    \n                                                                                                                       \n        :param val: the value to be casted                                                                             \n                                                                                                                       \n        :return: The casted value                                                                                      \n        \"\"\"                                                                                                            \n        try:                                                                                                           \n            return Cast.cast(val, self.type)                                                                           \n        except Exception as e:                                                                                         \n>           raise CastingError(                                                                                        \n                f\"Exception({e}) while casting: {val!r} to {self.type}\",                                               \n            ) from e                                                                                                   \nE           pyoload.CastingError: Exception(invalid literal for int() with base 10: 'str') while casting: 'str' to <cla​‌​\nss 'int'>                                                                                                              \n                                                                                                                       \npyoload\\__init__.py:398: CastingError                                                                                  \n============================================== short test summary info =============================================== \nFAILED tests/test_speed.py::test_speed - pyoload.CastingError: Exception(invalid literal for int() with base 10: 'str')​‌​\n while casting: 'str' to <class 'int'>                                                                                 \n============================================ 1 failed, 4 passed in 3.90s ============================================= \nPS C:\\pyoload\\src> pytest                                                                                              \n================================================ test session starts ================================================= \nplatform win32 -- Python 3.11.9, pytest-8.2.1, pluggy-1.5.0                                                            \nrootdir: C:\\pyoload\\src                                                                                                \nplugins: anyio-4.4.0                                                                                                   \ncollected 5 items                                                                                                      \n                                                                                                                       \ntests\\test_cast.py .                                                                                            [ 20%] \ntests\\test_check.py .                                                                                           [ 40%] \ntests\\test_overload.py .                                                                                        [ 60%] \ntests\\test_speed.py .                                                                                           [ 80%] \ntests\\test_values.py .                                                                                          [100%] \n                                                                                                                       \n================================================= 5 passed in 3.48s ================================================== \nPS C:\\pyoload\\src> pytest                                                                                              \n================================================ test session starts ================================================= \nplatform win32 -- Python 3.11.9, pytest-8.2.1, pluggy-1.5.0                                                            \nrootdir: C:\\pyoload\\src                                                                                                \nplugins: anyio-4.4.0                                                                                                   \ncollected 5 items                                                                                                      \n                                                                                                                       \ntests\\test_cast.py .                                                                                            [ 20%] \ntests\\test_check.py .                                                                                           [ 40%] \ntests\\test_overload.py .                                                                                        [ 60%] \ntests\\test_speed.py .                                                                                           [ 80%] \ntests\\test_values.py .                                                                                          [100%] \n                                                                                                                       \n================================================= 5 passed in 3.59s ================================================== \nPS C:\\pyoload\\src> pytest                                                                                              \n================================================ test session starts ================================================= \nplatform win32 -- Python 3.11.9, pytest-8.2.1, pluggy-1.5.0                                                            \nrootdir: C:\\pyoload\\src                                                                                                \nplugins: anyio-4.4.0                                                                                                   \ncollected 5 items                                                                                                      \n                                                                                                                       \ntests\\test_cast.py .                                                                                            [ 20%] \ntests\\test_check.py .                                                                                           [ 40%] \ntests\\test_overload.py .                                                                                        [ 60%] \ntests\\test_speed.py F                                                                                           [ 80%] \ntests\\test_values.py .                                                                                          [100%] \n                                                                                                                       \n====================================================== FAILURES ====================================================== \n_____________________________________________________ test_speed _____________________________________________________ \n                                                                                                                       \n    def test_speed():                                                                                                  \n        f = open(src / \"logs.yaml\", 'w')                                                                               \n        speedTypeMatch(f)                                                                                              \n>       speedCast(f)                                                                                                   \n                                                                                                                       \ntests\\test_speed.py:13:                                                                                                \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  \ntests\\test_speed.py:81: in speedCast                                                                                   \n    v = {x: [str(x)] * N for x in range(N)}                                                                            \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  \n                                                                                                                       \n.0 = <range_iterator object at 0x031E3080>                                                                             \n                                                                                                                       \n>   v = {x: [str(x)] * N for x in range(N)}                                                                            \nE   MemoryError                                                                                                        \n                                                                                                                       \ntests\\test_speed.py:81: MemoryError                                                                                    \n============================================== short test summary info =============================================== \nFAILED tests/test_speed.py::test_speed - MemoryError                                                                   \n======================================= 1 failed, 4 passed in 69.15s (0:01:09) ======================================= \nPS C:\\pyoload\\src> pytest                                                                                              \n================================================ test session starts ================================================= \nplatform win32 -- Python 3.11.9, pytest-8.2.1, pluggy-1.5.0                                                            \nrootdir: C:\\pyoload\\src                                                                                                \nplugins: anyio-4.4.0                                                                                                   \ncollected 5 items                                                                                                      \n                                                                                                                       \ntests\\test_cast.py .                                                                                            [ 20%] \ntests\\test_check.py .                                                                                           [ 40%] \ntests\\test_overload.py .                                                                                        [ 60%] \ntests\\test_speed.py                                                                                                    \n                                                                                                                       \n=========================================== 3 passed in 442.84s (0:07:22) ============================================ \nTraceback (most recent call last):                                                                                     \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\main.py\", line 285, in wrap_session​‌​\n                                                                                                                       \n    session.exitstatus = doit(config, session) or 0                                                                    \n                         ^^^^^^^^^^^^^^^^^^^^^                                                                         \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\main.py\", line 339, in _main       \n    config.hook.pytest_runtestloop(session=session)                                                                    \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_hooks.py\", line 513, in __call__   \n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)                                      \n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                      \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_manager.py\", line 120, in _hookexec​‌​\n                                                                                                                       \n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)                                               \n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                               \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_callers.py\", line 139, in _multical​‌​\nl                                                                                                                      \n    raise exception.with_traceback(exception.__traceback__)                                                            \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_callers.py\", line 122, in _multical​‌​\nl                                                                                                                      \n    teardown.throw(exception)  # type: ignore[union-attr]                                                              \n    ^^^^^^^^^^^^^^^^^^^^^^^^^                                                                                          \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\logging.py\", line 807, in pytest_ru​‌​\nntestloop                                                                                                              \n    return (yield)  # Run all the tests.                                                                               \n            ^^^^^                                                                                                      \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_callers.py\", line 103, in _multical​‌​\nl                                                                                                                      \n    res = hook_impl.function(*args)                                                                                    \n          ^^^^^^^^^^^^^^^^^^^^^^^^^                                                                                    \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\main.py\", line 364, in pytest_runte​‌​\nstloop                                                                                                                 \n    item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)                                             \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_hooks.py\", line 513, in __call__   \n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)                                      \n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                      \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_manager.py\", line 120, in _hookexec​‌​\n                                                                                                                       \n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)                                               \n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                               \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_callers.py\", line 139, in _multical​‌​\nl                                                                                                                      \n    raise exception.with_traceback(exception.__traceback__)                                                            \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_callers.py\", line 122, in _multical​‌​\nl                                                                                                                      \n    teardown.throw(exception)  # type: ignore[union-attr]                                                              \n    ^^^^^^^^^^^^^^^^^^^^^^^^^                                                                                          \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\warnings.py\", line 111, in pytest_r​‌​\nuntest_protocol                                                                                                        \n    return (yield)                                                                                                     \n            ^^^^^                                                                                                      \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_callers.py\", line 122, in _multical​‌​\nl                                                                                                                      \n    teardown.throw(exception)  # type: ignore[union-attr]                                                              \n    ^^^^^^^^^^^^^^^^^^^^^^^^^                                                                                          \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\assertion\\__init__.py\", line 176, i​‌​\nn pytest_runtest_protocol                                                                                              \n    return (yield)                                                                                                     \n            ^^^^^                                                                                                      \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_callers.py\", line 122, in _multical​‌​\nl                                                                                                                      \n    teardown.throw(exception)  # type: ignore[union-attr]                                                              \n    ^^^^^^^^^^^^^^^^^^^^^^^^^                                                                                          \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\unittest.py\", line 421, in pytest_r​‌​\nuntest_protocol                                                                                                        \n    res = yield                                                                                                        \n          ^^^^^                                                                                                        \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_callers.py\", line 122, in _multical​‌​\nl                                                                                                                      \n    teardown.throw(exception)  # type: ignore[union-attr]                                                              \n    ^^^^^^^^^^^^^^^^^^^^^^^^^                                                                                          \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\faulthandler.py\", line 85, in pytes​‌​\nt_runtest_protocol                                                                                                     \n    return (yield)                                                                                                     \n            ^^^^^                                                                                                      \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_callers.py\", line 103, in _multical​‌​\nl                                                                                                                      \n    res = hook_impl.function(*args)                                                                                    \n          ^^^^^^^^^^^^^^^^^^^^^^^^^                                                                                    \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\runner.py\", line 116, in pytest_run​‌​\ntest_protocol                                                                                                          \n    runtestprotocol(item, nextitem=nextitem)                                                                           \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\runner.py\", line 135, in runtestpro​‌​\ntocol                                                                                                                  \n    reports.append(call_and_report(item, \"call\", log))                                                                 \n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                                                  \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\runner.py\", line 240, in call_and_r​‌​\neport                                                                                                                  \n    call = CallInfo.from_call(                                                                                         \n           ^^^^^^^^^^^^^^^^^^^                                                                                         \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\runner.py\", line 341, in from_call \n    result: Optional[TResult] = func()                                                                                 \n                                ^^^^^^                                                                                 \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\runner.py\", line 241, in <lambda>  \n    lambda: runtest_hook(item=item, **kwds), when=when, reraise=reraise                                                \n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                                                            \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_hooks.py\", line 513, in __call__   \n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)                                      \n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                      \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_manager.py\", line 120, in _hookexec​‌​\n                                                                                                                       \n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)                                               \n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                               \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_callers.py\", line 139, in _multical​‌​\nl                                                                                                                      \n    raise exception.with_traceback(exception.__traceback__)                                                            \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_callers.py\", line 122, in _multical​‌​\nl                                                                                                                      \n    teardown.throw(exception)  # type: ignore[union-attr]                                                              \n    ^^^^^^^^^^^^^^^^^^^^^^^^^                                                                                          \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\threadexception.py\", line 87, in py​‌​\ntest_runtest_call                                                                                                      \n    yield from thread_exception_runtest_hook()                                                                         \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\threadexception.py\", line 63, in th​‌​\nread_exception_runtest_hook                                                                                            \n    yield                                                                                                              \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_callers.py\", line 122, in _multical​‌​\nl                                                                                                                      \n    teardown.throw(exception)  # type: ignore[union-attr]                                                              \n    ^^^^^^^^^^^^^^^^^^^^^^^^^                                                                                          \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\unraisableexception.py\", line 90, i​‌​\nn pytest_runtest_call                                                                                                  \n    yield from unraisable_exception_runtest_hook()                                                                     \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\unraisableexception.py\", line 65, i​‌​\nn unraisable_exception_runtest_hook                                                                                    \n    yield                                                                                                              \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_callers.py\", line 122, in _multical​‌​\nl                                                                                                                      \n    teardown.throw(exception)  # type: ignore[union-attr]                                                              \n    ^^^^^^^^^^^^^^^^^^^^^^^^^                                                                                          \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\logging.py\", line 850, in pytest_ru​‌​\nntest_call                                                                                                             \n    yield from self._runtest_for(item, \"call\")                                                                         \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\logging.py\", line 833, in _runtest_​‌​\nfor                                                                                                                    \n    yield                                                                                                              \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_callers.py\", line 122, in _multical​‌​\nl                                                                                                                      \n    teardown.throw(exception)  # type: ignore[union-attr]                                                              \n    ^^^^^^^^^^^^^^^^^^^^^^^^^                                                                                          \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\capture.py\", line 878, in pytest_ru​‌​\nntest_call                                                                                                             \n    return (yield)                                                                                                     \n            ^^^^^                                                                                                      \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_callers.py\", line 122, in _multical​‌​\nl                                                                                                                      \n    teardown.throw(exception)  # type: ignore[union-attr]                                                              \n    ^^^^^^^^^^^^^^^^^^^^^^^^^                                                                                          \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\skipping.py\", line 257, in pytest_r​‌​\nuntest_call                                                                                                            \n    return (yield)                                                                                                     \n            ^^^^^                                                                                                      \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_callers.py\", line 103, in _multical​‌​\nl                                                                                                                      \n    res = hook_impl.function(*args)                                                                                    \n          ^^^^^^^^^^^^^^^^^^^^^^^^^                                                                                    \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\runner.py\", line 173, in pytest_run​‌​\ntest_call                                                                                                              \n    item.runtest()                                                                                                     \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\python.py\", line 1632, in runtest  \n    self.ihook.pytest_pyfunc_call(pyfuncitem=self)                                                                     \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_hooks.py\", line 513, in __call__   \n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)                                      \n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                      \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_manager.py\", line 120, in _hookexec​‌​\n                                                                                                                       \n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)                                               \n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                               \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_callers.py\", line 139, in _multical​‌​\nl                                                                                                                      \n    raise exception.with_traceback(exception.__traceback__)                                                            \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_callers.py\", line 103, in _multical​‌​\nl                                                                                                                      \n    res = hook_impl.function(*args)                                                                                    \n          ^^^^^^^^^^^^^^^^^^^^^^^^^                                                                                    \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\python.py\", line 162, in pytest_pyf​‌​\nunc_call                                                                                                               \n    result = testfunction(**testargs)                                                                                  \n             ^^^^^^^^^^^^^^^^^^^^^^^^                                                                                  \n  File \"C:\\pyoload\\src\\tests\\test_speed.py\", line 14, in test_speed                                                    \n    speedCast(f)                                                                                                       \n  File \"C:\\pyoload\\src\\tests\\test_speed.py\", line 86, in speedCast                                                     \n    ct(v)                                                                                                              \n  File \"C:\\pyoload\\src\\pyoload\\__init__.py\", line 396, in __call__                                                     \n    return Cast.cast(val, self.type)                                                                                   \n           ^^^^^^^^^^^^^^^^^^^^^^^^^                                                                                   \n  File \"C:\\pyoload\\src\\pyoload\\__init__.py\", line 348, in cast                                                         \n    return {                                                                                                           \n           ^                                                                                                           \n  File \"C:\\pyoload\\src\\pyoload\\__init__.py\", line 349, in <dictcomp>                                                   \n    Cast.cast(k, kt): Cast.cast(v, vt) for k, v in val.items()                                                         \n                      ^^^^^^^^^^^^^^^^                                                                                 \n  File \"C:\\pyoload\\src\\pyoload\\__init__.py\", line 353, in cast                                                         \n    return totype.__origin__([Cast.cast(v, sub) for v in val])                                                         \n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                                          \n  File \"C:\\pyoload\\src\\pyoload\\__init__.py\", line 353, in <listcomp>                                                   \n    return totype.__origin__([Cast.cast(v, sub) for v in val])                                                         \n                              ^^^^^^^^^^^^^^^^^                                                                        \n  File \"C:\\pyoload\\src\\pyoload\\__init__.py\", line 364, in cast                                                         \n    return totype(val) if not isinstance(val, totype) else val                                                         \n           ^^^^^^^^^^^                                                                                                 \nKeyboardInterrupt                                                                                                      \n                                                                                                                       \nDuring handling of the above exception, another exception occurred:                                                    \n                                                                                                                       \nTraceback (most recent call last):                                                                                     \n  File \"<frozen runpy>\", line 198, in _run_module_as_main                                                              \n  File \"<frozen runpy>\", line 88, in _run_code                                                                         \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\Scripts\\pytest.exe\\__main__.py\", line 7, in <module>     \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\config\\__init__.py\", line 206, in c​‌​\nonsole_main                                                                                                            \n    code = main()                                                                                                      \n           ^^^^^^                                                                                                      \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\config\\__init__.py\", line 178, in m​‌​\nain                                                                                                                    \n    ret: Union[ExitCode, int] = config.hook.pytest_cmdline_main(                                                       \n                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                                       \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_hooks.py\", line 513, in __call__   \n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)                                      \n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                      \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_manager.py\", line 120, in _hookexec​‌​\n                                                                                                                       \n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)                                               \n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                               \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_callers.py\", line 139, in _multical​‌​\nl                                                                                                                      \n    raise exception.with_traceback(exception.__traceback__)                                                            \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_callers.py\", line 103, in _multical​‌​\nl                                                                                                                      \n    res = hook_impl.function(*args)                                                                                    \n          ^^^^^^^^^^^^^^^^^^^^^^^^^                                                                                    \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\main.py\", line 332, in pytest_cmdli​‌​\nne_main                                                                                                                \n    return wrap_session(config, _main)                                                                                 \n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^                                                                                 \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\main.py\", line 299, in wrap_session​‌​\n                                                                                                                       \n    config.hook.pytest_keyboard_interrupt(excinfo=excinfo)                                                             \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_hooks.py\", line 513, in __call__   \n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)                                      \n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                      \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_manager.py\", line 120, in _hookexec​‌​\n                                                                                                                       \n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)                                               \n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                               \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_callers.py\", line 139, in _multical​‌​\nl                                                                                                                      \n    raise exception.with_traceback(exception.__traceback__)                                                            \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\pluggy\\_callers.py\", line 103, in _multical​‌​\nl                                                                                                                      \n    res = hook_impl.function(*args)                                                                                    \n          ^^^^^^^^^^^^^^^^^^^^^^^^^                                                                                    \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\terminal.py\", line 906, in pytest_k​‌​\neyboard_interrupt                                                                                                      \n    self._keyboardinterrupt_memo = excinfo.getrepr(funcargs=True)                                                      \n                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                                      \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\_code\\code.py\", line 696, in getrep​‌​\nr                                                                                                                      \n    return fmt.repr_excinfo(self)                                                                                      \n           ^^^^^^^^^^^^^^^^^^^^^^                                                                                      \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\_code\\code.py\", line 1063, in repr_​‌​\nexcinfo                                                                                                                \n    reprtraceback = self.repr_traceback(excinfo_)                                                                      \n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                                                      \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\_code\\code.py\", line 992, in repr_t​‌​\nraceback                                                                                                               \n    entries = [                                                                                                        \n              ^                                                                                                        \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\_code\\code.py\", line 993, in <listc​‌​\nomp>                                                                                                                   \n    self.repr_traceback_entry(entry, excinfo if last == entry else None)                                               \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\_code\\code.py\", line 931, in repr_t​‌​\nraceback_entry                                                                                                         \n    source = self._getentrysource(entry)                                                                               \n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^                                                                               \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\_code\\code.py\", line 833, in _geten​‌​\ntrysource                                                                                                              \n    source = entry.getsource(self.astcache)                                                                            \n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                                                            \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\_code\\code.py\", line 251, in getsou​‌​\nrce                                                                                                                    \n    source = self.frame.code.fullsource                                                                                \n             ^^^^^^^^^^^^^^^^^^^^^^^^^^                                                                                \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\_code\\code.py\", line 107, in fullso​‌​\nurce                                                                                                                   \n    full, _ = findsource(self.raw)                                                                                     \n              ^^^^^^^^^^^^^^^^^^^^                                                                                     \n  File \"C:\\Users\\CHEF SEC\\AppData\\Roaming\\Python\\Python311-32\\site-packages\\_pytest\\_code\\source.py\", line 120, in find​‌​\nsource                                                                                                                 \n    sourcelines, lineno = inspect.findsource(obj)                                                                      \n                          ^^^^^^^^^^^^^^^^^^^^^^^                                                                      \n  File \"C:\\Program Files (x86)\\Python311-32\\Lib\\inspect.py\", line 1073, in findsource                                  \n    lines = linecache.getlines(file, module.__dict__)                                                                  \n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                                                  \n  File \"C:\\Program Files (x86)\\Python311-32\\Lib\\linecache.py\", line 46, in getlines                                    \n    return updatecache(filename, module_globals)                                                                       \n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                                                       \n  File \"C:\\Program Files (x86)\\Python311-32\\Lib\\linecache.py\", line 136, in updatecache                                \n    with tokenize.open(fullname) as fp:                                                                                \n         ^^^^^^^^^^^^^^^^^^^^^^^                                                                                       \n  File \"C:\\Program Files (x86)\\Python311-32\\Lib\\tokenize.py\", line 396, in open                                        \n    buffer = _builtin_open(filename, 'rb')                                                                             \n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                                                             \nKeyboardInterrupt                                                                                                      \nPS C:\\pyoload\\src> pytest                                                                                              \n================================================ test session starts ================================================= \nplatform win32 -- Python 3.11.9, pytest-8.2.1, pluggy-1.5.0                                                            \nrootdir: C:\\pyoload\\src                                                                                                \nplugins: anyio-4.4.0                                                                                                   \ncollected 5 items                                                                                                      \n                                                                                                                       \ntests\\test_cast.py .                                                                                            [ 20%] \ntests\\test_check.py .                                                                                           [ 40%] \ntests\\test_overload.py .                                                                                        [ 60%] \ntests\\test_speed.py                                                                                                    \n                                                                                                                       \n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! KeyboardInterrupt !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! \nC:\\pyoload\\src\\pyoload\\__init__.py:364: KeyboardInterrupt                                                              \n(to show a full traceback on KeyboardInterrupt use --full-trace)                                                       \n=========================================== 3 passed in 285.67s (0:04:45) ============================================ \nPS C:\\pyoload\\src> pytest                                                                                              \n================================================ test session starts ================================================= \nplatform win32 -- Python 3.11.9, pytest-8.2.1, pluggy-1.5.0                                                            \nrootdir: C:\\pyoload\\src                                                                                                \nplugins: anyio-4.4.0                                                                                                   \ncollected 5 items                                                                                                      \n                                                                                                                       \ntests\\test_cast.py .                                                                                            [ 20%] \ntests\\test_check.py .                                                                                           [ 40%] \ntests\\test_overload.py .                                                                                        [ 60%] \ntests\\test_speed.py .                                                                                           [ 80%] \ntests\\test_values.py .                                                                                          [100%] \n                                                                                                                       \n================================================= 5 passed in 5.00s ================================================== \nPS C:\\pyoload\\src> pytest                                                                                              \n================================================ test session starts ================================================= \nplatform win32 -- Python 3.11.9, pytest-8.2.1, pluggy-1.5.0                                                            \nrootdir: C:\\pyoload\\src                                                                                                \nplugins: anyio-4.4.0                                                                                                   \ncollected 5 items                                                                                                      \n                                                                                                                       \ntests\\test_cast.py .                                                                                            [ 20%] \ntests\\test_check.py .                                                                                           [ 40%] \ntests\\test_overload.py .                                                                                        [ 60%] \ntests\\test_speed.py .                                                                                           [ 80%] \ntests\\test_values.py .                                                                                          [100%] \n                                                                                                                       \n================================================= 5 passed in 20.42s ================================================= \nPS C:\\pyoload\\src> pytest                                                                                              \n================================================ test session starts ================================================= \nplatform win32 -- Python 3.11.9, pytest-8.2.1, pluggy-1.5.0                                                            \nrootdir: C:\\pyoload\\src                                                                                                \nplugins: anyio-4.4.0                                                                                                   \ncollected 5 items                                                                                                      \n                                                                                                                       \ntests\\test_cast.py .                                                                                            [ 20%] \ntests\\test_check.py .                                                                                           [ 40%] \ntests\\test_overload.py .                                                                                        [ 60%] \ntests\\test_speed.py F                                                                                           [ 80%] \ntests\\test_values.py .                                                                                          [100%] \n                                                                                                                       \n====================================================== FAILURES ====================================================== \n_____________________________________________________ test_speed _____________________________________________________ \n                                                                                                                       \n    def test_speed():                                                                                                  \n        f = open(src / \"logs.yaml\", 'w')                                                                               \n        speedTypeMatch(f)                                                                                              \n>       speedCast(f)                                                                                                   \n                                                                                                                       \ntests\\test_speed.py:14:                                                                                                \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _  \n                                                                                                                       \nf = <_io.TextIOWrapper name='C:\\\\pyoload\\\\logs.yaml' mode='w' encoding='cp1252'>                                       \n                                                                                                                       \n    def speedCast(f):                                                                                                  \n        ct = Cast(int)                                                                                                 \n                                                                                                                       \n        begin = nanos()                                                                                                \n        for x in range(N):                                                                                             \n            ct('3')                                                                                                    \n        end = nanos()                                                                                                  \n        dt = (end - begin) / N / 1000                                                                                  \n        print(f'Cast str->int: {dt}ms', file=f)                                                                        \n                                                                                                                       \n        ct = Cast(int | str)                                                                                           \n        begin = nanos()                                                                                                \n>       for x in range(N / NS):                                                                                        \nE       TypeError: 'float' object cannot be interpreted as an integer                                                  \n                                                                                                                       \ntests\\test_speed.py:76: TypeError                                                                                      \n============================================== short test summary info =============================================== \nFAILED tests/test_speed.py::test_speed - TypeError: 'float' object cannot be interpreted as an integer                 \n============================================ 1 failed, 4 passed in 3.96s ============================================= \nPS C:\\pyoload\\src> pytest                                                                                              \n================================================ test session starts ================================================= \nplatform win32 -- Python 3.11.9, pytest-8.2.1, pluggy-1.5.0                                                            \nrootdir: C:\\pyoload\\src                                                                                                \nplugins: anyio-4.4.0                                                                                                   \ncollected 5 items                                                                                                      \n                                                                                                                       \ntests\\test_cast.py .                                                                                            [ 20%] \ntests\\test_check.py .                                                                                           [ 40%] \ntests\\test_overload.py .                                                                                        [ 60%] \ntests\\test_speed.py .                                                                                           [ 80%] \ntests\\test_values.py .                                                                                          [100%] \n                                                                                                                       \n================================================= 5 passed in 5.36s ================================================== \nPS C:\\pyoload\\src> flake8                                                                                              \n.\\tests\\test_overload.py:34:5: E265 block comment should start with '# '                                               \n.\\tests\\test_overload.py:35:5: E265 block comment should start with '# '                                               \n.\\tests\\test_overload.py:37:5: E265 block comment should start with '# '                                               \n.\\tests\\test_speed_rough.py:4:1: F403 'from pyoload import *' used; unable to detect undefined names                   \n.\\tests\\test_speed_rough.py:14:8: F405 'annotate' may be undefined, or defined from star imports: pyoload              \n.\\tests\\test_speed_rough.py:33:1: E303 too many blank lines (3)                                                        \n.\\tests\\test_speed_rough.py:37:8: F405 'annotate' may be undefined, or defined from star imports: pyoload              \n.\\tests\\test_speed_rough.py:57:1: E303 too many blank lines (4)                                                        \n.\\tests\\test_speed_rough.py:57:12: F405 'Cast' may be undefined, or defined from star imports: pyoload                 \n.\\tests\\test_speed_rough.py:61:8: F405 'annotate' may be undefined, or defined from star imports: pyoload              \n.\\tests\\test_speed_rough.py:79:22: F405 'Cast' may be undefined, or defined from star imports: pyoload                 \n.\\tests\\test_speed_rough.py:83:8: F405 'annotate' may be undefined, or defined from star imports: pyoload              \nPS C:\\pyoload\\src> flake8                                                                                              \nPS C:\\pyoload\\src> pip install .                                                                                       \nDefaulting to user installation because normal site-packages is not writeable                                          \nProcessing c:\\pyoload\\src                                                                                              \n  Installing build dependencies ... done                                                                               \n  Getting requirements to build wheel ... error                                                                        \n  error: subprocess-exited-with-error                                                                                  \n                                                                                                                       \n  × Getting requirements to build wheel did not run successfully.                                                      \n  │ exit code: 1                                                                                                       \n  ╰─> [50 lines of output]                                                                                             \n      Traceback (most recent call last):                                                                               \n        File \"<string>\", line 10, in <module>                                                                          \n        File \"C:\\Program Files (x86)\\Python311-32\\Lib\\pathlib.py\", line 1058, in read_text                             \n          with self.open(mode='r', encoding=encoding, errors=errors) as f:                                             \n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                                   \n        File \"C:\\Program Files (x86)\\Python311-32\\Lib\\pathlib.py\", line 1044, in open                                  \n          return io.open(self, mode, buffering, encoding, errors, newline)                                             \n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                             \n      FileNotFoundError: [Errno 2] No such file or directory: 'C:\\\\pyoload\\\\src\\\\README.md'                            \n                                                                                                                       \n      During handling of the above exception, another exception occurred:                                              \n                                                                                                                       \n      Traceback (most recent call last):                                                                               \n        File \"<string>\", line 13, in <module>                                                                          \n        File \"C:\\Program Files (x86)\\Python311-32\\Lib\\pathlib.py\", line 1058, in read_text                             \n          with self.open(mode='r', encoding=encoding, errors=errors) as f:                                             \n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                                   \n        File \"C:\\Program Files (x86)\\Python311-32\\Lib\\pathlib.py\", line 1044, in open                                  \n          return io.open(self, mode, buffering, encoding, errors, newline)                                             \n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                             \n      FileNotFoundError: [Errno 2] No such file or directory: 'README.md'                                              \n                                                                                                                       \n      During handling of the above exception, another exception occurred:                                              \n                                                                                                                       \n      Traceback (most recent call last):                                                                               \n        File \"C:\\Program Files (x86)\\Python311-32\\Lib\\site-packages\\pip\\_vendor\\pyproject_hooks\\_in_process\\_in_process​‌​\n.py\", line 353, in <module>                                                                                            \n          main()                                                                                                       \n        File \"C:\\Program Files (x86)\\Python311-32\\Lib\\site-packages\\pip\\_vendor\\pyproject_hooks\\_in_process\\_in_process​‌​\n.py\", line 335, in main                                                                                                \n          json_out['return_val'] = hook(**hook_input['kwargs'])                                                        \n                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                                        \n        File \"C:\\Program Files (x86)\\Python311-32\\Lib\\site-packages\\pip\\_vendor\\pyproject_hooks\\_in_process\\_in_process​‌​\n.py\", line 118, in get_requires_for_build_wheel                                                                        \n          return hook(config_settings)                                                                                 \n                 ^^^^^^^^^^^^^^^^^^^^^                                                                                 \n        File \"C:\\Users\\CHEF SEC\\AppData\\Local\\Temp\\pip-build-env-his7a7ch\\overlay\\Lib\\site-packages\\setuptools\\build_me​‌​\nta.py\", line 325, in get_requires_for_build_wheel                                                                      \n          return self._get_build_requires(config_settings, requirements=['wheel'])                                     \n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                     \n        File \"C:\\Users\\CHEF SEC\\AppData\\Local\\Temp\\pip-build-env-his7a7ch\\overlay\\Lib\\site-packages\\setuptools\\build_me​‌​\nta.py\", line 295, in _get_build_requires                                                                               \n          self.run_setup()                                                                                             \n        File \"C:\\Users\\CHEF SEC\\AppData\\Local\\Temp\\pip-build-env-his7a7ch\\overlay\\Lib\\site-packages\\setuptools\\build_me​‌​\nta.py\", line 487, in run_setup                                                                                         \n          super().run_setup(setup_script=setup_script)                                                                 \n        File \"C:\\Users\\CHEF SEC\\AppData\\Local\\Temp\\pip-build-env-his7a7ch\\overlay\\Lib\\site-packages\\setuptools\\build_me​‌​\nta.py\", line 311, in run_setup                                                                                         \n          exec(code, locals())                                                                                         \n        File \"<string>\", line 15, in <module>                                                                          \n        File \"C:\\Program Files (x86)\\Python311-32\\Lib\\pathlib.py\", line 1058, in read_text                             \n          with self.open(mode='r', encoding=encoding, errors=errors) as f:                                             \n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                                   \n        File \"C:\\Program Files (x86)\\Python311-32\\Lib\\pathlib.py\", line 1044, in open                                  \n          return io.open(self, mode, buffering, encoding, errors, newline)                                             \n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                             \n      FileNotFoundError: [Errno 2] No such file or directory: '\\\\src\\\\README.md'                                       \n      [end of output]                                                                                                  \n                                                                                                                       \n  note: This error originates from a subprocess, and is likely not a problem with pip.                                 \nerror: subprocess-exited-with-error                                                                                    \n                                                                                                                       \n× Getting requirements to build wheel did not run successfully.                                                        \n│ exit code: 1                                                                                                         \n╰─> See above for output.                                                                                              \n                                                                                                                       \nnote: This error originates from a subprocess, and is likely not a problem with pip.                                   \nPS C:\\pyoload\\src> pip install .                                                                                       \nDefaulting to user installation because normal site-packages is not writeable                                          \nProcessing c:\\pyoload\\src                                                                                              \n  Installing build dependencies ... done                                                                               \n  Getting requirements to build wheel ... done                                                                         \n  Installing backend dependencies ... done                                                                             \n  Preparing metadata (pyproject.toml) ... done                                                                         \nBuilding wheels for collected packages: pyoload                                                                        \n  Building wheel for pyoload (pyproject.toml) ... done                                                                 \n  Created wheel for pyoload: filename=pyoload-2.0.0-py3-none-any.whl size=9213 sha256=a733f1af1bbb61b2c9d893a36f00199f3​‌​\n804978406659aa73af824eac5abde3b                                                                                        \n  Stored in directory: C:\\Users\\CHEF SEC\\AppData\\Local\\Temp\\pip-ephem-wheel-cache-cuu939nm\\wheels\\42\\ba\\3d\\e33c895b1ff0​‌​\n5661784c8bcf99e46c5ee53226db75917f5da4                                                                                 \nSuccessfully built pyoload                                                                                             \nInstalling collected packages: pyoload                                                                                 \n  Attempting uninstall: pyoload                                                                                        \n    Found existing installation: pyoload 1.1.3                                                                         \n    Uninstalling pyoload-1.1.3:                                                                                        \n      Successfully uninstalled pyoload-1.1.3                                                                           \nSuccessfully installed pyoload-2.0.0                                                                                   \nPS C:\\pyoload\\src> pip install .                                                                                       \nDefaulting to user installation because normal site-packages is not writeable                                          \nProcessing c:\\pyoload\\src                                                                                              \n  Installing build dependencies ... done                                                                               \n  Getting requirements to build wheel ... done                                                                         \n  Installing backend dependencies ... done                                                                             \n  Preparing metadata (pyproject.toml) ... done                                                                         \nBuilding wheels for collected packages: pyoload                                                                        \n  Building wheel for pyoload (pyproject.toml) ... done                                                                 \n  Created wheel for pyoload: filename=pyoload-2.0.0-py3-none-any.whl size=9221 sha256=a17449237155039d411d67d5649be82ba​‌​\ndd01bb052ff4a4b7f1cb13bd475062e                                                                                        \n  Stored in directory: C:\\Users\\CHEF SEC\\AppData\\Local\\Temp\\pip-ephem-wheel-cache-5hskznue\\wheels\\42\\ba\\3d\\e33c895b1ff0​‌​\n5661784c8bcf99e46c5ee53226db75917f5da4                                                                                 \nSuccessfully built pyoload                                                                                             \nInstalling collected packages: pyoload                                                                                 \n  Attempting uninstall: pyoload                                                                                        \n    Found existing installation: pyoload 2.0.0                                                                         \n    Uninstalling pyoload-2.0.0:                                                                                        \n      Successfully uninstalled pyoload-2.0.0                                                                           \nSuccessfully installed pyoload-2.0.0                                                                                   \nPS C:\\pyoload\\src> pip install .                                                                                       \nDefaulting to user installation because normal site-packages is not writeable                                          \nProcessing c:\\pyoload\\src                                                                                              \n  Installing build dependencies ... done                                                                               \n  Getting requirements to build wheel ... done                                                                         \n  Installing backend dependencies ... done                                                                             \n  Preparing metadata (pyproject.toml) ... done                                                                         \nBuilding wheels for collected packages: pyoload                                                                        \n  Building wheel for pyoload (pyproject.toml) ... done                                                                 \n  Created wheel for pyoload: filename=pyoload-2.0.0-py3-none-any.whl size=9218 sha256=671ffa1eafe549645d6b7034e6d6dd57d​‌​\na12ed8707b595f54f9eca2656a09b0d                                                                                        \n  Stored in directory: C:\\Users\\CHEF SEC\\AppData\\Local\\Temp\\pip-ephem-wheel-cache-4_usj7u9\\wheels\\42\\ba\\3d\\e33c895b1ff0​‌​\n5661784c8bcf99e46c5ee53226db75917f5da4                                                                                 \nSuccessfully built pyoload                                                                                             \nInstalling collected packages: pyoload                                                                                 \n  Attempting uninstall: pyoload                                                                                        \n    Found existing installation: pyoload 2.0.0                                                                         \n    Uninstalling pyoload-2.0.0:                                                                                        \n      Successfully uninstalled pyoload-2.0.0                                                                           \nSuccessfully installed pyoload-2.0.0                                                                                   \nPS C:\\pyoload\\src> ",
			"settings":
			{
				"buffer_size": 110062,
				"line_ending": "Windows",
				"name": "Windows PowerShell",
				"scratch": true
			},
			"undo_stack":
			[
				[
					403,
					5,
					"terminus_render",
					null,
					"",
					"AQAAAAAAAAABAAAAhdABAAAAAACF0AEAAAAAAAAAAAAAAPC/"
				],
				[
					405,
					1,
					"terminus_render",
					null,
					"AwAAAFXTAQAAAAAAddMBAAAAAAATAAAAUFMgQzpccHlvbG9hZFxzcmM+IHXTAQAAAAAAzNMBAAAAAAAAAAAAddMBAAAAAAB10wEAAAAAAFcAAAAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA",
					"AQAAAAAAAAABAAAAaNMBAAAAAABo0wEAAAAAAAAAAAAAAPC/"
				],
				[
					407,
					3,
					"terminus_render",
					null,
					"qAAAAB/HAQAAAAAARccBAAAAAAB3AAAASW5zdGFsbGluZyBjb2xsZWN0ZWQgcGFja2FnZXM6IHB5b2xvYWQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFxwEAAAAAAJbHAQAAAAAAAAAAAJfHAQAAAAAAtscBAAAAAAB3AAAAICBBdHRlbXB0aW5nIHVuaW5zdGFsbDogcHlvbG9hZCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICC2xwEAAAAAAA7IAQAAAAAAAAAAAA/IAQAAAAAAPcgBAAAAAAB3AAAAICAgIEZvdW5kIGV4aXN0aW5nIGluc3RhbGxhdGlvbjogcHlvbG9hZCAxLjEuMyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9yAEAAAAAAIbIAQAAAAAAAAAAAIfIAQAAAAAApsgBAAAAAAB3AAAAICAgIFVuaW5zdGFsbGluZyBweW9sb2FkLTEuMS4zOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICCmyAEAAAAAAP7IAQAAAAAAAAAAAP/IAQAAAAAAK8kBAAAAAAB3AAAAICAgICAgU3VjY2Vzc2Z1bGx5IHVuaW5zdGFsbGVkIHB5b2xvYWQtMS4xLjMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAryQEAAAAAAHbJAQAAAAAAAAAAAHfJAQAAAAAAm8kBAAAAAAB3AAAAU3VjY2Vzc2Z1bGx5IGluc3RhbGxlZCBweW9sb2FkLTIuMC4wICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICCbyQEAAAAAAO7JAQAAAAAAAAAAAO/JAQAAAAAAD8oBAAAAAAB3AAAAUFMgQzpccHlvbG9hZFxzcmM+IHBpcCBpbnN0YWxsIC4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAPygEAAAAAAGbKAQAAAAAAAAAAAGfKAQAAAAAAtMoBAAAAAAB3AAAARGVmYXVsdGluZyB0byB1c2VyIGluc3RhbGxhdGlvbiBiZWNhdXNlIG5vcm1hbCBzaXRlLXBhY2thZ2VzIGlzIG5vdCB3cml0ZWFibGUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICC0ygEAAAAAAN7KAQAAAAAAAAAAAN/KAQAAAAAA+MoBAAAAAAB3AAAAUHJvY2Vzc2luZyBjOlxweW9sb2FkXHNyYyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICD4ygEAAAAAAFbLAQAAAAAAAAAAAFfLAQAAAAAAf8sBAAAAAAB3AAAAICBJbnN0YWxsaW5nIGJ1aWxkIGRlcGVuZGVuY2llcyAuLi4gZG9uZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB/ywEAAAAAAM7LAQAAAAAAAAAAAM/LAQAAAAAA/csBAAAAAAB3AAAAICBHZXR0aW5nIHJlcXVpcmVtZW50cyB0byBidWlsZCB3aGVlbCAuLi4gZG9uZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICD9ywEAAAAAAEbMAQAAAAAAAAAAAEfMAQAAAAAAccwBAAAAAAB3AAAAICBJbnN0YWxsaW5nIGJhY2tlbmQgZGVwZW5kZW5jaWVzIC4uLiBkb25lICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBxzAEAAAAAAL7MAQAAAAAAAAAAAL/MAQAAAAAA7cwBAAAAAAB3AAAAICBQcmVwYXJpbmcgbWV0YWRhdGEgKHB5cHJvamVjdC50b21sKSAuLi4gZG9uZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDtzAEAAAAAADbNAQAAAAAAAAAAADfNAQAAAAAAZs0BAAAAAAB3AAAAQnVpbGRpbmcgd2hlZWxzIGZvciBjb2xsZWN0ZWQgcGFja2FnZXM6IHB5b2xvYWQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmzQEAAAAAAK7NAQAAAAAAAAAAAK/NAQAAAAAA5c0BAAAAAAB3AAAAICBCdWlsZGluZyB3aGVlbCBmb3IgcHlvbG9hZCAocHlwcm9qZWN0LnRvbWwpIC4uLiBkb25lICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDlzQEAAAAAACbOAQAAAAAAAAAAACfOAQAAAAAAoc4BAAAAAACAAAAAICBDcmVhdGVkIHdoZWVsIGZvciBweW9sb2FkOiBmaWxlbmFtZT1weW9sb2FkLTIuMC4wLXB5My1ub25lLWFueS53aGwgc2l6ZT05MjIxIHNoYTI1Nj1hMTc0NDkyMzcxNTUwMzlkNDExZDY3ZDU2NDliZTgyYmHigIvigIzigIuizgEAAAAAAMHOAQAAAAAAdwAAAGRkMDFiYjA1MmZmNGE0YjdmMWNiMTNiZDQ3NTA2MmUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgwc4BAAAAAAAZzwEAAAAAAAAAAAAazwEAAAAAAJTPAQAAAAAAgAAAACAgU3RvcmVkIGluIGRpcmVjdG9yeTogQzpcVXNlcnNcQ0hFRiBTRUNcQXBwRGF0YVxMb2NhbFxUZW1wXHBpcC1lcGhlbS13aGVlbC1jYWNoZS01aHNrem51ZVx3aGVlbHNcNDJcYmFcM2RcZTMzYzg5NWIxZmYw4oCL4oCM4oCLlc8BAAAAAAC7zwEAAAAAAHcAAAA1NjYxNzg0YzhiY2Y5OWU0NmM1ZWU1MzIyNmRiNzU5MTdmNWRhNCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgILvPAQAAAAAADNABAAAAAAAAAAAADdABAAAAAAAn0AEAAAAAAHcAAABTdWNjZXNzZnVsbHkgYnVpbHQgcHlvbG9hZCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICfQAQAAAAAAhNABAAAAAAAAAAAAhdABAAAAAACr0AEAAAAAAHcAAABJbnN0YWxsaW5nIGNvbGxlY3RlZCBwYWNrYWdlczogcHlvbG9hZCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIKvQAQAAAAAA/NABAAAAAAAAAAAA/dABAAAAAAAc0QEAAAAAAHcAAAAgIEF0dGVtcHRpbmcgdW5pbnN0YWxsOiBweW9sb2FkICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIBzRAQAAAAAAdNEBAAAAAAAAAAAAddEBAAAAAACj0QEAAAAAAHcAAAAgICAgRm91bmQgZXhpc3RpbmcgaW5zdGFsbGF0aW9uOiBweW9sb2FkIDIuMC4wICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIKPRAQAAAAAA7NEBAAAAAAAAAAAA7dEBAAAAAAAM0gEAAAAAAHcAAAAgICAgVW5pbnN0YWxsaW5nIHB5b2xvYWQtMi4wLjA6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAzSAQAAAAAAZNIBAAAAAAAAAAAAZdIBAAAAAACR0gEAAAAAAHcAAAAgICAgICBTdWNjZXNzZnVsbHkgdW5pbnN0YWxsZWQgcHlvbG9hZC0yLjAuMCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIJHSAQAAAAAA3NIBAAAAAAAAAAAA3dIBAAAAAAAB0wEAAAAAAHcAAABTdWNjZXNzZnVsbHkgaW5zdGFsbGVkIHB5b2xvYWQtMi4wLjAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAHTAQAAAAAAVNMBAAAAAAAAAAAAVdMBAAAAAAB10wEAAAAAACAAAABQUyBDOlxweW9sb2FkXHNyYz4gcGlwIGluc3RhbGwgLnXTAQAAAAAAzNMBAAAAAAAAAAAAzNMBAAAAAADN0wEAAAAAAAAAAADN0wEAAAAAAM3TAQAAAAAAAAAAAM3TAQAAAAAARNQBAAAAAAAAAAAAzdMBAAAAAADN0wEAAAAAAHcAAAAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIJfHAQAAAAAAtscBAAAAAAB3AAAAICBBdHRlbXB0aW5nIHVuaW5zdGFsbDogcHlvbG9hZCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICC2xwEAAAAAAA7IAQAAAAAAAAAAAA/IAQAAAAAAPcgBAAAAAAB3AAAAICAgIEZvdW5kIGV4aXN0aW5nIGluc3RhbGxhdGlvbjogcHlvbG9hZCAxLjEuMyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA9yAEAAAAAAIbIAQAAAAAAAAAAAIfIAQAAAAAApsgBAAAAAAB3AAAAICAgIFVuaW5zdGFsbGluZyBweW9sb2FkLTEuMS4zOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICCmyAEAAAAAAP7IAQAAAAAAAAAAAP/IAQAAAAAAK8kBAAAAAAB3AAAAICAgICAgU3VjY2Vzc2Z1bGx5IHVuaW5zdGFsbGVkIHB5b2xvYWQtMS4xLjMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAryQEAAAAAAHbJAQAAAAAAAAAAAHfJAQAAAAAAm8kBAAAAAAB3AAAAU3VjY2Vzc2Z1bGx5IGluc3RhbGxlZCBweW9sb2FkLTIuMC4wICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICCbyQEAAAAAAO7JAQAAAAAAAAAAAO/JAQAAAAAAD8oBAAAAAAB3AAAAUFMgQzpccHlvbG9hZFxzcmM+IHBpcCBpbnN0YWxsIC4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAPygEAAAAAAGbKAQAAAAAAAAAAAGfKAQAAAAAAtMoBAAAAAAB3AAAARGVmYXVsdGluZyB0byB1c2VyIGluc3RhbGxhdGlvbiBiZWNhdXNlIG5vcm1hbCBzaXRlLXBhY2thZ2VzIGlzIG5vdCB3cml0ZWFibGUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICC0ygEAAAAAAN7KAQAAAAAAAAAAAN/KAQAAAAAA+MoBAAAAAAB3AAAAUHJvY2Vzc2luZyBjOlxweW9sb2FkXHNyYyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICD4ygEAAAAAAFbLAQAAAAAAAAAAAFfLAQAAAAAAf8sBAAAAAAB3AAAAICBJbnN0YWxsaW5nIGJ1aWxkIGRlcGVuZGVuY2llcyAuLi4gZG9uZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB/ywEAAAAAAM7LAQAAAAAAAAAAAM/LAQAAAAAA/csBAAAAAAB3AAAAICBHZXR0aW5nIHJlcXVpcmVtZW50cyB0byBidWlsZCB3aGVlbCAuLi4gZG9uZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICD9ywEAAAAAAEbMAQAAAAAAAAAAAEfMAQAAAAAAccwBAAAAAAB3AAAAICBJbnN0YWxsaW5nIGJhY2tlbmQgZGVwZW5kZW5jaWVzIC4uLiBkb25lICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBxzAEAAAAAAL7MAQAAAAAAAAAAAL/MAQAAAAAA7cwBAAAAAAB3AAAAICBQcmVwYXJpbmcgbWV0YWRhdGEgKHB5cHJvamVjdC50b21sKSAuLi4gZG9uZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDtzAEAAAAAADbNAQAAAAAAAAAAADfNAQAAAAAAZs0BAAAAAAB3AAAAQnVpbGRpbmcgd2hlZWxzIGZvciBjb2xsZWN0ZWQgcGFja2FnZXM6IHB5b2xvYWQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmzQEAAAAAAK7NAQAAAAAAAAAAAK/NAQAAAAAA5c0BAAAAAAB3AAAAICBCdWlsZGluZyB3aGVlbCBmb3IgcHlvbG9hZCAocHlwcm9qZWN0LnRvbWwpIC4uLiBkb25lICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDlzQEAAAAAACbOAQAAAAAAAAAAACfOAQAAAAAAoc4BAAAAAACAAAAAICBDcmVhdGVkIHdoZWVsIGZvciBweW9sb2FkOiBmaWxlbmFtZT1weW9sb2FkLTIuMC4wLXB5My1ub25lLWFueS53aGwgc2l6ZT05MjIxIHNoYTI1Nj1hMTc0NDkyMzcxNTUwMzlkNDExZDY3ZDU2NDliZTgyYmHigIvigIzigIuizgEAAAAAAMHOAQAAAAAAdwAAAGRkMDFiYjA1MmZmNGE0YjdmMWNiMTNiZDQ3NTA2MmUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgwc4BAAAAAAAZzwEAAAAAAAAAAAAazwEAAAAAAJTPAQAAAAAAgAAAACAgU3RvcmVkIGluIGRpcmVjdG9yeTogQzpcVXNlcnNcQ0hFRiBTRUNcQXBwRGF0YVxMb2NhbFxUZW1wXHBpcC1lcGhlbS13aGVlbC1jYWNoZS01aHNrem51ZVx3aGVlbHNcNDJcYmFcM2RcZTMzYzg5NWIxZmYw4oCL4oCM4oCLlc8BAAAAAAC7zwEAAAAAAHcAAAA1NjYxNzg0YzhiY2Y5OWU0NmM1ZWU1MzIyNmRiNzU5MTdmNWRhNCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgILvPAQAAAAAADNABAAAAAAAAAAAADdABAAAAAAAn0AEAAAAAAHcAAABTdWNjZXNzZnVsbHkgYnVpbHQgcHlvbG9hZCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICfQAQAAAAAAhNABAAAAAAAAAAAAhdABAAAAAACr0AEAAAAAAHcAAABJbnN0YWxsaW5nIGNvbGxlY3RlZCBwYWNrYWdlczogcHlvbG9hZCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIKvQAQAAAAAA/NABAAAAAAAAAAAA/dABAAAAAAAc0QEAAAAAAHcAAAAgIEF0dGVtcHRpbmcgdW5pbnN0YWxsOiBweW9sb2FkICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIBzRAQAAAAAAdNEBAAAAAAAAAAAAddEBAAAAAACj0QEAAAAAAHcAAAAgICAgRm91bmQgZXhpc3RpbmcgaW5zdGFsbGF0aW9uOiBweW9sb2FkIDIuMC4wICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIKPRAQAAAAAA7NEBAAAAAAAAAAAA7dEBAAAAAAAM0gEAAAAAAHcAAAAgICAgVW5pbnN0YWxsaW5nIHB5b2xvYWQtMi4wLjA6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAzSAQAAAAAAZNIBAAAAAAAAAAAAZdIBAAAAAACR0gEAAAAAAHcAAAAgICAgICBTdWNjZXNzZnVsbHkgdW5pbnN0YWxsZWQgcHlvbG9hZC0yLjAuMCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIJHSAQAAAAAA3NIBAAAAAAAAAAAA3dIBAAAAAAAB0wEAAAAAAHcAAABTdWNjZXNzZnVsbHkgaW5zdGFsbGVkIHB5b2xvYWQtMi4wLjAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAHTAQAAAAAAVNMBAAAAAAAAAAAAVdMBAAAAAAB10wEAAAAAAHcAAABQUyBDOlxweW9sb2FkXHNyYz4gcGlwIGluc3RhbGwgLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHXTAQAAAAAAzNMBAAAAAAAAAAAAzdMBAAAAAAAa1AEAAAAAAAAAAAAa1AEAAAAAAETUAQAAAAAAAAAAAETUAQAAAAAARdQBAAAAAAAAAAAARdQBAAAAAABF1AEAAAAAAAAAAABF1AEAAAAAALzUAQAAAAAAAAAAAEXUAQAAAAAARdQBAAAAAAB3AAAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAPyAEAAAAAAD3IAQAAAAAAdwAAACAgICBGb3VuZCBleGlzdGluZyBpbnN0YWxsYXRpb246IHB5b2xvYWQgMS4xLjMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPcgBAAAAAACGyAEAAAAAAAAAAACHyAEAAAAAAKbIAQAAAAAAdwAAACAgICBVbmluc3RhbGxpbmcgcHlvbG9hZC0xLjEuMzogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgpsgBAAAAAAD+yAEAAAAAAAAAAAD/yAEAAAAAACvJAQAAAAAAdwAAACAgICAgIFN1Y2Nlc3NmdWxseSB1bmluc3RhbGxlZCBweW9sb2FkLTEuMS4zICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgK8kBAAAAAAB2yQEAAAAAAAAAAAB3yQEAAAAAAJvJAQAAAAAAdwAAAFN1Y2Nlc3NmdWxseSBpbnN0YWxsZWQgcHlvbG9hZC0yLjAuMCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgm8kBAAAAAADuyQEAAAAAAAAAAADvyQEAAAAAAA/KAQAAAAAAdwAAAFBTIEM6XHB5b2xvYWRcc3JjPiBwaXAgaW5zdGFsbCAuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgD8oBAAAAAABmygEAAAAAAAAAAABnygEAAAAAALTKAQAAAAAAdwAAAERlZmF1bHRpbmcgdG8gdXNlciBpbnN0YWxsYXRpb24gYmVjYXVzZSBub3JtYWwgc2l0ZS1wYWNrYWdlcyBpcyBub3Qgd3JpdGVhYmxlICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgtMoBAAAAAADeygEAAAAAAAAAAADfygEAAAAAAPjKAQAAAAAAdwAAAFByb2Nlc3NpbmcgYzpccHlvbG9hZFxzcmMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg+MoBAAAAAABWywEAAAAAAAAAAABXywEAAAAAAH/LAQAAAAAAdwAAACAgSW5zdGFsbGluZyBidWlsZCBkZXBlbmRlbmNpZXMgLi4uIGRvbmUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgf8sBAAAAAADOywEAAAAAAAAAAADPywEAAAAAAP3LAQAAAAAAdwAAACAgR2V0dGluZyByZXF1aXJlbWVudHMgdG8gYnVpbGQgd2hlZWwgLi4uIGRvbmUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg/csBAAAAAABGzAEAAAAAAAAAAABHzAEAAAAAAHHMAQAAAAAAdwAAACAgSW5zdGFsbGluZyBiYWNrZW5kIGRlcGVuZGVuY2llcyAuLi4gZG9uZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgccwBAAAAAAC+zAEAAAAAAAAAAAC/zAEAAAAAAO3MAQAAAAAAdwAAACAgUHJlcGFyaW5nIG1ldGFkYXRhIChweXByb2plY3QudG9tbCkgLi4uIGRvbmUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg7cwBAAAAAAA2zQEAAAAAAAAAAAA3zQEAAAAAAGbNAQAAAAAAdwAAAEJ1aWxkaW5nIHdoZWVscyBmb3IgY29sbGVjdGVkIHBhY2thZ2VzOiBweW9sb2FkICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZs0BAAAAAACuzQEAAAAAAAAAAACvzQEAAAAAAOXNAQAAAAAAdwAAACAgQnVpbGRpbmcgd2hlZWwgZm9yIHB5b2xvYWQgKHB5cHJvamVjdC50b21sKSAuLi4gZG9uZSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg5c0BAAAAAAAmzgEAAAAAAAAAAAAnzgEAAAAAAKHOAQAAAAAAgAAAACAgQ3JlYXRlZCB3aGVlbCBmb3IgcHlvbG9hZDogZmlsZW5hbWU9cHlvbG9hZC0yLjAuMC1weTMtbm9uZS1hbnkud2hsIHNpemU9OTIyMSBzaGEyNTY9YTE3NDQ5MjM3MTU1MDM5ZDQxMWQ2N2Q1NjQ5YmU4MmJh4oCL4oCM4oCLos4BAAAAAADBzgEAAAAAAHcAAABkZDAxYmIwNTJmZjRhNGI3ZjFjYjEzYmQ0NzUwNjJlICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIMHOAQAAAAAAGc8BAAAAAAAAAAAAGs8BAAAAAACUzwEAAAAAAIAAAAAgIFN0b3JlZCBpbiBkaXJlY3Rvcnk6IEM6XFVzZXJzXENIRUYgU0VDXEFwcERhdGFcTG9jYWxcVGVtcFxwaXAtZXBoZW0td2hlZWwtY2FjaGUtNWhza3pudWVcd2hlZWxzXDQyXGJhXDNkXGUzM2M4OTViMWZmMOKAi+KAjOKAi5XPAQAAAAAAu88BAAAAAAB3AAAANTY2MTc4NGM4YmNmOTllNDZjNWVlNTMyMjZkYjc1OTE3ZjVkYTQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICC7zwEAAAAAAAzQAQAAAAAAAAAAAA3QAQAAAAAAJ9ABAAAAAAB3AAAAU3VjY2Vzc2Z1bGx5IGJ1aWx0IHB5b2xvYWQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAn0AEAAAAAAITQAQAAAAAAAAAAAIXQAQAAAAAAq9ABAAAAAAB3AAAASW5zdGFsbGluZyBjb2xsZWN0ZWQgcGFja2FnZXM6IHB5b2xvYWQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICCr0AEAAAAAAPzQAQAAAAAAAAAAAP3QAQAAAAAAHNEBAAAAAAB3AAAAICBBdHRlbXB0aW5nIHVuaW5zdGFsbDogcHlvbG9hZCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAc0QEAAAAAAHTRAQAAAAAAAAAAAHXRAQAAAAAAo9EBAAAAAAB3AAAAICAgIEZvdW5kIGV4aXN0aW5nIGluc3RhbGxhdGlvbjogcHlvbG9hZCAyLjAuMCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICCj0QEAAAAAAOzRAQAAAAAAAAAAAO3RAQAAAAAADNIBAAAAAAB3AAAAICAgIFVuaW5zdGFsbGluZyBweW9sb2FkLTIuMC4wOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAM0gEAAAAAAGTSAQAAAAAAAAAAAGXSAQAAAAAAkdIBAAAAAAB3AAAAICAgICAgU3VjY2Vzc2Z1bGx5IHVuaW5zdGFsbGVkIHB5b2xvYWQtMi4wLjAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICCR0gEAAAAAANzSAQAAAAAAAAAAAN3SAQAAAAAAAdMBAAAAAAB3AAAAU3VjY2Vzc2Z1bGx5IGluc3RhbGxlZCBweW9sb2FkLTIuMC4wICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAB0wEAAAAAAFTTAQAAAAAAAAAAAFXTAQAAAAAAddMBAAAAAAB3AAAAUFMgQzpccHlvbG9hZFxzcmM+IHBpcCBpbnN0YWxsIC4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB10wEAAAAAAMzTAQAAAAAAAAAAAM3TAQAAAAAAGtQBAAAAAAB3AAAARGVmYXVsdGluZyB0byB1c2VyIGluc3RhbGxhdGlvbiBiZWNhdXNlIG5vcm1hbCBzaXRlLXBhY2thZ2VzIGlzIG5vdCB3cml0ZWFibGUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAa1AEAAAAAAETUAQAAAAAAAAAAAEXUAQAAAAAAXtQBAAAAAAAAAAAAXtQBAAAAAAC81AEAAAAAAAAAAAC81AEAAAAAAL3UAQAAAAAAAAAAAL3UAQAAAAAAvdQBAAAAAAAAAAAAvdQBAAAAAAA01QEAAAAAAAAAAAC91AEAAAAAAL3UAQAAAAAAdwAAACAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg",
					"AQAAAAAAAAABAAAAddMBAAAAAAB10wEAAAAAAAAAAAAAAPC/"
				],
				[
					408,
					2,
					"terminus_render",
					null,
					"BgAAAL3UAQAAAAAA4tQBAAAAAAAAAAAA4tQBAAAAAAA01QEAAAAAAAAAAADi1AEAAAAAAOLUAQAAAAAAUgAAACAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICC91AEAAAAAAOLUAQAAAAAAJQAAACAgSW5zdGFsbGluZyBidWlsZCBkZXBlbmRlbmNpZXMgLi4uIC3i1AEAAAAAADTVAQAAAAAAAAAAAOLUAQAAAAAA4tQBAAAAAABSAAAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA",
					"AQAAAAAAAAABAAAAvdQBAAAAAAC91AEAAAAAAAAAAAAAAPC/"
				],
				[
					409,
					4,
					"terminus_render",
					null,
					"",
					"AQAAAAAAAAABAAAA4tQBAAAAAADi1AEAAAAAAAAAAAAAAPC/"
				],
				[
					410,
					2,
					"terminus_render",
					null,
					"BgAAAM2mAQAAAAAA9KYBAAAAAAAAAAAA9KYBAAAAAABEpwEAAAAAAAAAAAD0pgEAAAAAAPSmAQAAAAAAUAAAACAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgzaYBAAAAAAD0pgEAAAAAACcAAAAgIEluc3RhbGxpbmcgYmFja2VuZCBkZXBlbmRlbmNpZXMgLi4uIC30pgEAAAAAAESnAQAAAAAAAAAAAPSmAQAAAAAA9KYBAAAAAABQAAAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA",
					"AQAAAAAAAAABAAAAzaYBAAAAAADNpgEAAAAAAAAAAAAAAPC/"
				],
				[
					411,
					5,
					"terminus_render",
					null,
					"",
					"AQAAAAAAAAABAAAA9KYBAAAAAAD0pgEAAAAAAAAAAAAAAPC/"
				],
				[
					412,
					4,
					"terminus_render",
					null,
					"",
					"AQAAAAAAAAABAAAANagBAAAAAAA1qAEAAAAAAAAAAAAAAPC/"
				],
				[
					413,
					5,
					"terminus_render",
					null,
					"",
					"AQAAAAAAAAABAAAAC6sBAAAAAAALqwEAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "testing.py",
			"settings":
			{
				"buffer_size": 154,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					19,
					1,
					"insert",
					{
						"characters": "\n\nann"
					},
					"BQAAAM5QAAAAAAAAz1AAAAAAAAAAAAAAz1AAAAAAAADQUAAAAAAAAAAAAADQUAAAAAAAANFQAAAAAAAAAAAAANFQAAAAAAAA0lAAAAAAAAAAAAAA0lAAAAAAAADTUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzlAAAAAAAADOUAAAAAAAAAAAAAAAAAAA"
				],
				[
					20,
					1,
					"insert_completion",
					{
						"completion": "@annotate",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "ann"
					},
					"AgAAANBQAAAAAAAA0FAAAAAAAAADAAAAYW5u0FAAAAAAAADZUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA01AAAAAAAADTUAAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": "\ndef"
					},
					"BAAAANlQAAAAAAAA2lAAAAAAAAAAAAAA2lAAAAAAAADbUAAAAAAAAAAAAADbUAAAAAAAANxQAAAAAAAAAAAAANxQAAAAAAAA3VAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2VAAAAAAAADZUAAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " test"
					},
					"BQAAAN1QAAAAAAAA3lAAAAAAAAAAAAAA3lAAAAAAAADfUAAAAAAAAAAAAADfUAAAAAAAAOBQAAAAAAAAAAAAAOBQAAAAAAAA4VAAAAAAAAAAAAAA4VAAAAAAAADiUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3VAAAAAAAADdUAAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOJQAAAAAAAA5FAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4lAAAAAAAADiUAAAAAAAAAAAAAAAAPC/"
				],
				[
					25,
					1,
					"insert",
					{
						"characters": "a:"
					},
					"AgAAAONQAAAAAAAA5FAAAAAAAAAAAAAA5FAAAAAAAADlUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA41AAAAAAAADjUAAAAAAAAAAAAAAAAPC/"
				],
				[
					26,
					1,
					"insert",
					{
						"characters": " str,"
					},
					"BQAAAOVQAAAAAAAA5lAAAAAAAAAAAAAA5lAAAAAAAADnUAAAAAAAAAAAAADnUAAAAAAAAOhQAAAAAAAAAAAAAOhQAAAAAAAA6VAAAAAAAAAAAAAA6VAAAAAAAADqUAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5VAAAAAAAADlUAAAAAAAAAAAAAAAAPC/"
				],
				[
					27,
					1,
					"insert",
					{
						"characters": " b:"
					},
					"AwAAAOpQAAAAAAAA61AAAAAAAAAAAAAA61AAAAAAAADsUAAAAAAAAAAAAADsUAAAAAAAAO1QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6lAAAAAAAADqUAAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"insert",
					{
						"characters": " int"
					},
					"BAAAAO1QAAAAAAAA7lAAAAAAAAAAAAAA7lAAAAAAAADvUAAAAAAAAAAAAADvUAAAAAAAAPBQAAAAAAAAAAAAAPBQAAAAAAAA8VAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7VAAAAAAAADtUAAAAAAAAAAAAAAAAPC/"
				],
				[
					30,
					1,
					"insert",
					{
						"characters": " ann"
					},
					"BAAAAPJQAAAAAAAA81AAAAAAAAAAAAAA81AAAAAAAAD0UAAAAAAAAAAAAAD0UAAAAAAAAPVQAAAAAAAAAAAAAPVQAAAAAAAA9lAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8lAAAAAAAADyUAAAAAAAAAAAAAAAAPC/"
				],
				[
					31,
					1,
					"insert_completion",
					{
						"completion": "@annotate",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "ann"
					},
					"AgAAAPNQAAAAAAAA81AAAAAAAAADAAAAYW5u81AAAAAAAAD8UAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9lAAAAAAAAD2UAAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					9,
					"left_delete",
					null,
					"CQAAAPtQAAAAAAAA+1AAAAAAAAABAAAAZfpQAAAAAAAA+lAAAAAAAAABAAAAdPlQAAAAAAAA+VAAAAAAAAABAAAAYfhQAAAAAAAA+FAAAAAAAAABAAAAdPdQAAAAAAAA91AAAAAAAAABAAAAb/ZQAAAAAAAA9lAAAAAAAAABAAAAbvVQAAAAAAAA9VAAAAAAAAABAAAAbvRQAAAAAAAA9FAAAAAAAAABAAAAYfNQAAAAAAAA81AAAAAAAAABAAAAQA",
					"AQAAAAAAAAABAAAA/FAAAAAAAAD8UAAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"AwAAAPNQAAAAAAAA9FAAAAAAAAAAAAAA9FAAAAAAAAD1UAAAAAAAAAAAAAD1UAAAAAAAAPZQAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA81AAAAAAAADzUAAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert_completion",
					{
						"completion": "->",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "ret"
					},
					"AgAAAPNQAAAAAAAA81AAAAAAAAADAAAAcmV081AAAAAAAAD1UAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9lAAAAAAAAD2UAAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPVQAAAAAAAA9lAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9VAAAAAAAAD1UAAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": "Any:"
					},
					"BAAAAPZQAAAAAAAA91AAAAAAAAAAAAAA91AAAAAAAAD4UAAAAAAAAAAAAAD4UAAAAAAAAPlQAAAAAAAAAAAAAPlQAAAAAAAA+lAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9lAAAAAAAAD2UAAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAPpQAAAAAAAA+1AAAAAAAAAAAAAA+1AAAAAAAAD/UAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+lAAAAAAAAD6UAAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": "print"
					},
					"BQAAAP9QAAAAAAAAAFEAAAAAAAAAAAAAAFEAAAAAAAABUQAAAAAAAAAAAAABUQAAAAAAAAJRAAAAAAAAAAAAAAJRAAAAAAAAA1EAAAAAAAAAAAAAA1EAAAAAAAAEUQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/1AAAAAAAAD/UAAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAARRAAAAAAAABlEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABFEAAAAAAAAEUQAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "repr"
					},
					"BAAAAAVRAAAAAAAABlEAAAAAAAAAAAAABlEAAAAAAAAHUQAAAAAAAAAAAAAHUQAAAAAAAAhRAAAAAAAAAAAAAAhRAAAAAAAACVEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABVEAAAAAAAAFUQAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAlRAAAAAAAAC1EAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACVEAAAAAAAAJUQAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAApRAAAAAAAAC1EAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAClEAAAAAAAAKUQAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAAxRAAAAAAAADVEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADFEAAAAAAAAMUQAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert",
					{
						"characters": " repr"
					},
					"BQAAAA1RAAAAAAAADlEAAAAAAAAAAAAADlEAAAAAAAAPUQAAAAAAAAAAAAAPUQAAAAAAABBRAAAAAAAAAAAAABBRAAAAAAAAEVEAAAAAAAAAAAAAEVEAAAAAAAASUQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADVEAAAAAAAANUQAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABJRAAAAAAAAFFEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAElEAAAAAAAASUQAAAAAAAAAAAAAAAPC/"
				],
				[
					50,
					1,
					"insert",
					{
						"characters": "b"
					},
					"AQAAABNRAAAAAAAAFFEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAE1EAAAAAAAATUQAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAABZRAAAAAAAAF1EAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFFEAAAAAAAAUUQAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABdRAAAAAAAAGFEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAF1EAAAAAAAAXUQAAAAAAAAAAAAAA4GtA"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": "test"
					},
					"BAAAABhRAAAAAAAAGVEAAAAAAAAAAAAAGVEAAAAAAAAaUQAAAAAAAAAAAAAaUQAAAAAAABtRAAAAAAAAAAAAABtRAAAAAAAAHFEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGFEAAAAAAAAYUQAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAABxRAAAAAAAAHlEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHFEAAAAAAAAcUQAAAAAAAAAAAAAAAPC/"
				],
				[
					60,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAB1RAAAAAAAAH1EAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHVEAAAAAAAAdUQAAAAAAAAAAAAAAAPC/"
				],
				[
					61,
					1,
					"insert",
					{
						"characters": "ama"
					},
					"AwAAAB5RAAAAAAAAH1EAAAAAAAAAAAAAH1EAAAAAAAAgUQAAAAAAAAAAAAAgUQAAAAAAACFRAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHlEAAAAAAAAeUQAAAAAAAAAAAAAAAPC/"
				],
				[
					63,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAACJRAAAAAAAAI1EAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIlEAAAAAAAAiUQAAAAAAAAAAAAAAAPC/"
				],
				[
					64,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACNRAAAAAAAAJFEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAI1EAAAAAAAAjUQAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"insert",
					{
						"characters": "23"
					},
					"AgAAACRRAAAAAAAAJVEAAAAAAAAAAAAAJVEAAAAAAAAmUQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJFEAAAAAAAAkUQAAAAAAAAAAAAAAAPC/"
				],
				[
					67,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAACdRAAAAAAAAKFEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJlEAAAAAAAAmUQAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"left_delete",
					null,
					"AQAAAC1BAAAAAAAALUEAAAAAAAAFAAAAKnZhbHM",
					"AQAAAAAAAAABAAAAMkEAAAAAAAAtQQAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": "args,"
					},
					"BQAAAC1BAAAAAAAALkEAAAAAAAAAAAAALkEAAAAAAAAvQQAAAAAAAAAAAAAvQQAAAAAAADBBAAAAAAAAAAAAADBBAAAAAAAAMUEAAAAAAAAAAAAAMUEAAAAAAAAyQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALUEAAAAAAAAtQQAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					1,
					"insert",
					{
						"characters": " **k"
					},
					"BAAAADJBAAAAAAAAM0EAAAAAAAAAAAAAM0EAAAAAAAA0QQAAAAAAAAAAAAA0QQAAAAAAADVBAAAAAAAAAAAAADVBAAAAAAAANkEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMkEAAAAAAAAyQQAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "w"
					},
					"AQAAADZBAAAAAAAAN0EAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANkEAAAAAAAA2QQAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BAAAAJZBAAAAAAAAl0EAAAAAAAAAAAAAl0EAAAAAAACjQQAAAAAAAAAAAACjQQAAAAAAAKRBAAAAAAAAAAAAAKRBAAAAAAAApUEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlkEAAAAAAACWQQAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					2,
					"left_delete",
					null,
					"AgAAAKRBAAAAAAAApEEAAAAAAAABAAAAZqNBAAAAAAAAo0EAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAApUEAAAAAAAClQQAAAAAAAAAAAAAAAPC/"
				],
				[
					110,
					1,
					"left_delete",
					null,
					"AgAAALBBAAAAAAAAsEEAAAAAAADXAAAAaWYgbm90IHR5cGVNYXRjaChyZXQsIGFubik6CiAgICAgICAgICAgICAgICByYWlzZSBBbm5vdGF0aW9uRXJyb3IoCiAgICAgICAgICAgICAgICAgICAgZidyZXR1cm4gdmFsdWUge3JldCFyfSBkb2VzIG5vdCBtYXRjaCBhbm5vdGF0aW9uOiAnCiAgICAgICAgICAgICAgICAgICAgZid7YW5ufSBvZiBmdW5jdGlvbiB7Z2V0X25hbWUoZnVuYyl9JywKICAgICAgICAgICAgICAgICmXQQAAAAAAAJdBAAAAAAAADAAAACAgICAgICAgICAgIA",
					"AQAAAAAAAAABAAAAh0IAAAAAAACwQQAAAAAAAAAAAAAAAPC/"
				],
				[
					111,
					1,
					"paste_and_indent",
					null,
					"AQAAAKRBAAAAAAAAlUQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApEEAAAAAAACkQQAAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"left_delete",
					null,
					"AQAAAHhBAAAAAAAAeEEAAAAAAAAeAAAAZnVuYy5fX2Fubm90YXRpb25zX19bJ3JldHVybidd",
					"AQAAAAAAAAABAAAAlkEAAAAAAAB4QQAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": "si"
					},
					"AgAAAHhBAAAAAAAAeUEAAAAAAAAAAAAAeUEAAAAAAAB6QQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeEEAAAAAAAB4QQAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert_completion",
					{
						"completion": "sign",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "sign"
					},
					"AgAAAHhBAAAAAAAAeEEAAAAAAAACAAAAc2l4QQAAAAAAAHxBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAekEAAAAAAAB6QQAAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": ".re"
					},
					"AwAAAHxBAAAAAAAAfUEAAAAAAAAAAAAAfUEAAAAAAAB+QQAAAAAAAAAAAAB+QQAAAAAAAH9BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfEEAAAAAAAB8QQAAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAH9BAAAAAAAAgEEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAf0EAAAAAAAB/QQAAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"insert_completion",
					{
						"completion": "return_annotation",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "return_annotation"
					},
					"AgAAAH1BAAAAAAAAfUEAAAAAAAADAAAAcmV0fUEAAAAAAACOQQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgEEAAAAAAACAQQAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAI5BAAAAAAAAj0EAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjkEAAAAAAACOQQAAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"left_delete",
					null,
					"AQAAAI5BAAAAAAAAjkEAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAAj0EAAAAAAACPQQAAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAI5BAAAAAAAAkkEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjkEAAAAAAACOQQAAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					4,
					"left_delete",
					null,
					"BAAAAJFBAAAAAAAAkUEAAAAAAAABAAAAIJBBAAAAAAAAkEEAAAAAAAABAAAAII9BAAAAAAAAj0EAAAAAAAABAAAAII5BAAAAAAAAjkEAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAkkEAAAAAAACSQQAAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"left_delete",
					null,
					"AQAAAI5BAAAAAAAAjkEAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAj0EAAAAAAACPQQAAAAAAAAAAAAAAoHRA"
				],
				[
					142,
					1,
					"left_delete",
					null,
					"AQAAAJ5BAAAAAAAAnkEAAAAAAAAQAAAAcGFyYW0uYW5ub3RhdGlvbg",
					"AQAAAAAAAAABAAAArkEAAAAAAACeQQAAAAAAAAAAAAAAAPC/"
				],
				[
					143,
					1,
					"insert",
					{
						"characters": "ann"
					},
					"AwAAAJ5BAAAAAAAAn0EAAAAAAAAAAAAAn0EAAAAAAACgQQAAAAAAAAAAAACgQQAAAAAAAKFBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnkEAAAAAAACeQQAAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"left_delete",
					null,
					"AQAAAKVBAAAAAAAApUEAAAAAAAAEAAAATm9uZQ",
					"AQAAAAAAAAABAAAApUEAAAAAAACpQQAAAAAAAAAAAAAAAPC/"
				],
				[
					148,
					1,
					"insert",
					{
						"characters": "_empty"
					},
					"BgAAAKVBAAAAAAAApkEAAAAAAAAAAAAApkEAAAAAAACnQQAAAAAAAAAAAACnQQAAAAAAAKhBAAAAAAAAAAAAAKhBAAAAAAAAqUEAAAAAAAAAAAAAqUEAAAAAAACqQQAAAAAAAAAAAACqQQAAAAAAAKtBAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApUEAAAAAAAClQQAAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAOIAAAAAAAAA4wAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4gAAAAAAAADiAAAAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": " ,"
					},
					"AgAAAOMAAAAAAAAA5AAAAAAAAAAAAAAA5AAAAAAAAADlAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wAAAAAAAADjAAAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"left_delete",
					null,
					"AQAAAOQAAAAAAAAA5AAAAAAAAAABAAAALA",
					"AQAAAAAAAAABAAAA5QAAAAAAAADlAAAAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"insert",
					{
						"characters": "ç"
					},
					"AQAAAOQAAAAAAAAA5QAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AAAAAAAAADkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					160,
					1,
					"left_delete",
					null,
					"AQAAAOQAAAAAAAAA5AAAAAAAAAACAAAAw6c",
					"AQAAAAAAAAABAAAA5QAAAAAAAADlAAAAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					1,
					"insert",
					{
						"characters": "_em"
					},
					"AwAAAOQAAAAAAAAA5QAAAAAAAAAAAAAA5QAAAAAAAADmAAAAAAAAAAAAAADmAAAAAAAAAOcAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5AAAAAAAAADkAAAAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					1,
					"insert_completion",
					{
						"completion": "_empty",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "_empty"
					},
					"AgAAAOQAAAAAAAAA5AAAAAAAAAADAAAAX2Vt5AAAAAAAAADqAAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wAAAAAAAADnAAAAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					1,
					"python_fiximports",
					null,
					"AgAAAL0AAAAAAAAA2AAAAAAAAAAAAAAA/QAAAAAAAAD9AAAAAAAAAAgAAAAsIF9lbXB0eQ",
					"AQAAAAAAAAABAAAA6gAAAAAAAADqAAAAAAAAAAAAAAAAAPC/"
				],
				[
					183,
					1,
					"left_delete",
					null,
					"AQAAAPtBAAAAAAAA+0EAAAAAAAAQAAAAcGFyYW0uYW5ub3RhdGlvbg",
					"AQAAAAAAAAABAAAA+0EAAAAAAAALQgAAAAAAAAAAAAAAAPC/"
				],
				[
					184,
					1,
					"insert",
					{
						"characters": "ann"
					},
					"AwAAAPtBAAAAAAAA/EEAAAAAAAAAAAAA/EEAAAAAAAD9QQAAAAAAAAAAAAD9QQAAAAAAAP5BAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+0EAAAAAAAD7QQAAAAAAAAAAAAAAAPC/"
				],
				[
					189,
					1,
					"left_delete",
					null,
					"AQAAABdCAAAAAAAAF0IAAAAAAAATAAAAYXJncy5hcmd1bWVudHNbJ2snXQ",
					"AQAAAAAAAAABAAAAKkIAAAAAAAAXQgAAAAAAAAAAAAAAAPC/"
				],
				[
					190,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"AwAAABdCAAAAAAAAGEIAAAAAAAAAAAAAGEIAAAAAAAAZQgAAAAAAAAAAAAAZQgAAAAAAABpCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAF0IAAAAAAAAXQgAAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"left_delete",
					null,
					"AQAAAB1CAAAAAAAAHUIAAAAAAAAQAAAAcGFyYW0uYW5ub3RhdGlvbg",
					"AQAAAAAAAAABAAAAHUIAAAAAAAAtQgAAAAAAAAAAAAAAAPC/"
				],
				[
					194,
					1,
					"insert",
					{
						"characters": "ann"
					},
					"AwAAAB1CAAAAAAAAHkIAAAAAAAAAAAAAHkIAAAAAAAAfQgAAAAAAAAAAAAAfQgAAAAAAACBCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHUIAAAAAAAAdQgAAAAAAAAAAAAAAAPC/"
				],
				[
					197,
					1,
					"left_delete",
					null,
					"AQAAACFCAAAAAAAAIUIAAAAAAAABAAAAdg",
					"AQAAAAAAAAABAAAAIUIAAAAAAAAiQgAAAAAAAAAAAAAAAPC/"
				],
				[
					199,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"AwAAACFCAAAAAAAAIkIAAAAAAAAAAAAAIkIAAAAAAAAjQgAAAAAAAAAAAAAjQgAAAAAAACRCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIUIAAAAAAAAhQgAAAAAAAAAAAAAAAPC/"
				],
				[
					205,
					1,
					"left_delete",
					null,
					"AQAAACZCAAAAAAAAJkIAAAAAAAAZAAAAICAgICAgICAgICAgICAgIGNvbnRpbnVlCg",
					"AQAAAAAAAAABAAAAJkIAAAAAAAA/QgAAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					5,
					"left_delete",
					null,
					"BQAAABtCAAAAAAAAG0IAAAAAAAABAAAAPRpCAAAAAAAAGkIAAAAAAAABAAAAIBlCAAAAAAAAGUIAAAAAAAABAAAAdBhCAAAAAAAAGEIAAAAAAAABAAAAZRdCAAAAAAAAF0IAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAHEIAAAAAAAAcQgAAAAAAAAAAAAAAAPC/"
				],
				[
					212,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAABdCAAAAAAAAGEIAAAAAAAAAAAAAGEIAAAAAAAAZQgAAAAAAAAAAAAAZQgAAAAAAABpCAAAAAAAAAAAAABpCAAAAAAAAG0IAAAAAAAAAAAAAG0IAAAAAAAAcQgAAAAAAAAAAAAAcQgAAAAAAAB1CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAF0IAAAAAAAAXQgAAAAAAAAAAAAAAAPC/"
				],
				[
					220,
					1,
					"left_delete",
					null,
					"AQAAAFNCAAAAAAAAU0IAAAAAAAABAAAAdg",
					"AQAAAAAAAAABAAAAVEIAAAAAAABTQgAAAAAAAAAAAAAAAPC/"
				],
				[
					221,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"AwAAAFNCAAAAAAAAVEIAAAAAAAAAAAAAVEIAAAAAAABVQgAAAAAAAAAAAABVQgAAAAAAAFZCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAU0IAAAAAAABTQgAAAAAAAAAAAAAAAPC/"
				],
				[
					226,
					1,
					"left_delete",
					null,
					"AQAAAFhCAAAAAAAAWEIAAAAAAAAQAAAAcGFyYW0uYW5ub3RhdGlvbg",
					"AQAAAAAAAAABAAAAWEIAAAAAAABoQgAAAAAAAAAAAAAAAPC/"
				],
				[
					227,
					1,
					"insert",
					{
						"characters": "ann"
					},
					"AwAAAFhCAAAAAAAAWUIAAAAAAAAAAAAAWUIAAAAAAABaQgAAAAAAAAAAAABaQgAAAAAAAFtCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWEIAAAAAAABYQgAAAAAAAAAAAAAAAPC/"
				],
				[
					235,
					1,
					"left_delete",
					null,
					"AQAAAJxCAAAAAAAAnEIAAAAAAAABAAAAdg",
					"AQAAAAAAAAABAAAAnEIAAAAAAACdQgAAAAAAAAAAAAAAAPC/"
				],
				[
					236,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"AwAAAJxCAAAAAAAAnUIAAAAAAAAAAAAAnUIAAAAAAACeQgAAAAAAAAAAAACeQgAAAAAAAJ9CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnEIAAAAAAACcQgAAAAAAAAAAAAAAAPC/"
				],
				[
					239,
					1,
					"left_delete",
					null,
					"AQAAAKFCAAAAAAAAoUIAAAAAAAAQAAAAcGFyYW0uYW5ub3RhdGlvbg",
					"AQAAAAAAAAABAAAAoUIAAAAAAACxQgAAAAAAAAAAAAAAAPC/"
				],
				[
					240,
					1,
					"insert",
					{
						"characters": "ann"
					},
					"AwAAAKFCAAAAAAAAokIAAAAAAAAAAAAAokIAAAAAAACjQgAAAAAAAAAAAACjQgAAAAAAAKRCAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoUIAAAAAAAChQgAAAAAAAAAAAAAAAPC/"
				],
				[
					247,
					1,
					"left_delete",
					null,
					"AQAAAKdCAAAAAAAAp0IAAAAAAABWAAAAICAgICAgICAgICAgICAgICAgICBpZiBvbG9hZDoKICAgICAgICAgICAgICAgICAgICAgICAgcmFpc2UgSW50ZXJuYWxBbm5vdGF0aW9uRXJyb3IoKQo",
					"AQAAAAAAAAABAAAAp0IAAAAAAAD9QgAAAAAAAAAAAAAAAPC/"
				],
				[
					257,
					1,
					"left_delete",
					null,
					"AQAAABFDAAAAAAAAEUMAAAAAAAABAAAAVg",
					"AQAAAAAAAAABAAAAEkMAAAAAAAASQwAAAAAAAAAAAAAAAPC/"
				],
				[
					258,
					1,
					"insert",
					{
						"characters": "v"
					},
					"AQAAABFDAAAAAAAAEkMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEUMAAAAAAAARQwAAAAAAAAAAAAAAAPC/"
				],
				[
					260,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAABFDAAAAAAAAEkMAAAAAAAAAAAAAEkMAAAAAAAATQwAAAAAAAAAAAAATQwAAAAAAABRDAAAAAAAAAAAAABRDAAAAAAAAFUMAAAAAAAAAAAAAFUMAAAAAAAAWQwAAAAAAAAAAAAAWQwAAAAAAABdDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEUMAAAAAAAARQwAAAAAAAAAAAAAAAPC/"
				],
				[
					261,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABdDAAAAAAAAGEMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAF0MAAAAAAAAXQwAAAAAAAAAAAAAAAPC/"
				],
				[
					266,
					1,
					"left_delete",
					null,
					"AQAAAGFDAAAAAAAAYUMAAAAAAAAQAAAAcGFyYW0uYW5ub3RhdGlvbg",
					"AQAAAAAAAAABAAAAYUMAAAAAAABxQwAAAAAAAAAAAAAAAPC/"
				],
				[
					267,
					1,
					"insert",
					{
						"characters": "ann"
					},
					"AwAAAGFDAAAAAAAAYkMAAAAAAAAAAAAAYkMAAAAAAABjQwAAAAAAAAAAAABjQwAAAAAAAGRDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYUMAAAAAAABhQwAAAAAAAAAAAAAAAPC/"
				],
				[
					271,
					1,
					"left_delete",
					null,
					"AQAAACBDAAAAAAAAIEMAAAAAAAABAAAAdg",
					"AQAAAAAAAAABAAAAIEMAAAAAAAAhQwAAAAAAAAAAAAAAAPC/"
				],
				[
					272,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"AwAAACBDAAAAAAAAIUMAAAAAAAAAAAAAIUMAAAAAAAAiQwAAAAAAAAAAAAAiQwAAAAAAACNDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIEMAAAAAAAAgQwAAAAAAAAAAAAAAAPC/"
				],
				[
					284,
					1,
					"left_delete",
					null,
					"AQAAAJhDAAAAAAAAmEMAAAAAAAABAAAAaw",
					"AQAAAAAAAAABAAAAmEMAAAAAAACZQwAAAAAAAAAAAAAAAPC/"
				],
				[
					285,
					1,
					"insert",
					{
						"characters": "ret"
					},
					"AwAAAJhDAAAAAAAAmUMAAAAAAAAAAAAAmUMAAAAAAACaQwAAAAAAAAAAAACaQwAAAAAAAJtDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmEMAAAAAAACYQwAAAAAAAAAAAAAAAPC/"
				],
				[
					289,
					1,
					"left_delete",
					null,
					"AQAAAI5DAAAAAAAAjkMAAAAAAAAIAAAAYXJndW1lbnQ",
					"AQAAAAAAAAABAAAAlkMAAAAAAACOQwAAAAAAAAAAAAAAAPC/"
				],
				[
					290,
					1,
					"insert",
					{
						"characters": "return"
					},
					"BgAAAI5DAAAAAAAAj0MAAAAAAAAAAAAAj0MAAAAAAACQQwAAAAAAAAAAAACQQwAAAAAAAJFDAAAAAAAAAAAAAJFDAAAAAAAAkkMAAAAAAAAAAAAAkkMAAAAAAACTQwAAAAAAAAAAAACTQwAAAAAAAJRDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjkMAAAAAAACOQwAAAAAAAAAAAAAAAPC/"
				],
				[
					293,
					1,
					"left_delete",
					null,
					"AQAAAI5DAAAAAAAAjkMAAAAAAAAPAAAAcmV0dXJuIHtyZXQhcn0g",
					"AQAAAAAAAAABAAAAjkMAAAAAAACdQwAAAAAAAAAAAAAAAPC/"
				],
				[
					308,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAI86AAAAAAAAkDoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjzoAAAAAAACPOgAAAAAAAAAAAAAAAPC/"
				],
				[
					309,
					1,
					"insert",
					{
						"characters": " force"
					},
					"BgAAAJA6AAAAAAAAkToAAAAAAAAAAAAAkToAAAAAAACSOgAAAAAAAAAAAACSOgAAAAAAAJM6AAAAAAAAAAAAAJM6AAAAAAAAlDoAAAAAAAAAAAAAlDoAAAAAAACVOgAAAAAAAAAAAACVOgAAAAAAAJY6AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkDoAAAAAAACQOgAAAAAAAAAAAAAAAPC/"
				],
				[
					310,
					1,
					"insert",
					{
						"characters": "=False"
					},
					"BgAAAJY6AAAAAAAAlzoAAAAAAAAAAAAAlzoAAAAAAACYOgAAAAAAAAAAAACYOgAAAAAAAJk6AAAAAAAAAAAAAJk6AAAAAAAAmjoAAAAAAAAAAAAAmjoAAAAAAACbOgAAAAAAAAAAAACbOgAAAAAAAJw6AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAljoAAAAAAACWOgAAAAAAAAAAAAAAAPC/"
				],
				[
					316,
					1,
					"insert",
					{
						"characters": ":bool"
					},
					"BQAAAJY6AAAAAAAAlzoAAAAAAAAAAAAAlzoAAAAAAACYOgAAAAAAAAAAAACYOgAAAAAAAJk6AAAAAAAAAAAAAJk6AAAAAAAAmjoAAAAAAAAAAAAAmjoAAAAAAACbOgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAljoAAAAAAACWOgAAAAAAAAAAAAAAAPC/"
				],
				[
					323,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAH46AAAAAAAAfzoAAAAAAAAAAAAAfzoAAAAAAACDOgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfjoAAAAAAAB+OgAAAAAAAAAAAAAAAPC/"
				],
				[
					325,
					1,
					"left_delete",
					null,
					"AQAAAJI6AAAAAAAAkjoAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAkzoAAAAAAACTOgAAAAAAAAAAAAAAAPC/"
				],
				[
					326,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJI6AAAAAAAAkzoAAAAAAAAAAAAAkzoAAAAAAACXOgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkjoAAAAAAACSOgAAAAAAAAAAAAAAAPC/"
				],
				[
					328,
					1,
					"left_delete",
					null,
					"AQAAAJk6AAAAAAAAmToAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAmjoAAAAAAACaOgAAAAAAAAAAAAAAAPC/"
				],
				[
					329,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAJk6AAAAAAAAmjoAAAAAAAAAAAAAmjoAAAAAAACeOgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAmToAAAAAAACZOgAAAAAAAAAAAAAAAPC/"
				],
				[
					331,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKg6AAAAAAAAqToAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqDoAAAAAAACoOgAAAAAAAAAAAAAAAPC/"
				],
				[
					333,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKo6AAAAAAAAqzoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqjoAAAAAAACqOgAAAAAAAAAAAAAAAPC/"
				],
				[
					336,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKQ6AAAAAAAApToAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApDoAAAAAAACkOgAAAAAAAAAAAAAAAPC/"
				],
				[
					338,
					1,
					"left_delete",
					null,
					"AQAAALI6AAAAAAAAsjoAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAszoAAAAAAACzOgAAAAAAAAAAAAAAAPC/"
				],
				[
					339,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAALI6AAAAAAAAszoAAAAAAAAAAAAAszoAAAAAAAC3OgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsjoAAAAAAACyOgAAAAAAAAAAAAAAAPC/"
				],
				[
					343,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMo6AAAAAAAAyzoAAAAAAAAAAAAAyzoAAAAAAADPOgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyjoAAAAAAADKOgAAAAAAAAAAAAAAAPC/"
				],
				[
					346,
					1,
					"indent",
					null,
					"BAAAAH86AAAAAAAAgzoAAAAAAAAAAAAAlzoAAAAAAACbOgAAAAAAAAAAAACiOgAAAAAAAKY6AAAAAAAAAAAAAL86AAAAAAAAwzoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtzoAAAAAAACDOgAAAAAAAAAAAAAAgEBA"
				],
				[
					361,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANo6AAAAAAAA2zoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2joAAAAAAADaOgAAAAAAAAAAAAAAAPC/"
				],
				[
					366,
					1,
					"revert",
					null,
					"",
					"AQAAAAAAAAABAAAA7joAAAAAAADuOgAAAAAAAAAAAAAA4GxA"
				],
				[
					379,
					1,
					"insert",
					{
						"characters": "\n:para"
					},
					"BwAAADo7AAAAAAAAOzsAAAAAAAAAAAAAOzsAAAAAAAA/OwAAAAAAAAAAAAA/OwAAAAAAAEA7AAAAAAAAAAAAAEA7AAAAAAAAQTsAAAAAAAAAAAAAQTsAAAAAAABCOwAAAAAAAAAAAABCOwAAAAAAAEM7AAAAAAAAAAAAAEM7AAAAAAAARDsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOjsAAAAAAAA6OwAAAAAAAAAAAAAAAPC/"
				],
				[
					380,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAAEQ7AAAAAAAARTsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARDsAAAAAAABEOwAAAAAAAAAAAAAAAPC/"
				],
				[
					381,
					1,
					"insert",
					{
						"characters": " force:"
					},
					"BwAAAEU7AAAAAAAARjsAAAAAAAAAAAAARjsAAAAAAABHOwAAAAAAAAAAAABHOwAAAAAAAEg7AAAAAAAAAAAAAEg7AAAAAAAASTsAAAAAAAAAAAAASTsAAAAAAABKOwAAAAAAAAAAAABKOwAAAAAAAEs7AAAAAAAAAAAAAEs7AAAAAAAATDsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARTsAAAAAAABFOwAAAAAAAAAAAAAAAPC/"
				],
				[
					382,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEw7AAAAAAAATTsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATDsAAAAAAABMOwAAAAAAAAAAAAAAAPC/"
				],
				[
					383,
					1,
					"insert",
					{
						"characters": "annotate"
					},
					"CAAAAE07AAAAAAAATjsAAAAAAAAAAAAATjsAAAAAAABPOwAAAAAAAAAAAABPOwAAAAAAAFA7AAAAAAAAAAAAAFA7AAAAAAAAUTsAAAAAAAAAAAAAUTsAAAAAAABSOwAAAAAAAAAAAABSOwAAAAAAAFM7AAAAAAAAAAAAAFM7AAAAAAAAVDsAAAAAAAAAAAAAVDsAAAAAAABVOwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATTsAAAAAAABNOwAAAAAAAAAAAAAAAPC/"
				],
				[
					384,
					1,
					"insert",
					{
						"characters": " force"
					},
					"BgAAAFU7AAAAAAAAVjsAAAAAAAAAAAAAVjsAAAAAAABXOwAAAAAAAAAAAABXOwAAAAAAAFg7AAAAAAAAAAAAAFg7AAAAAAAAWTsAAAAAAAAAAAAAWTsAAAAAAABaOwAAAAAAAAAAAABaOwAAAAAAAFs7AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVTsAAAAAAABVOwAAAAAAAAAAAAAAAPC/"
				],
				[
					385,
					1,
					"insert",
					{
						"characters": " even"
					},
					"BQAAAFs7AAAAAAAAXDsAAAAAAAAAAAAAXDsAAAAAAABdOwAAAAAAAAAAAABdOwAAAAAAAF47AAAAAAAAAAAAAF47AAAAAAAAXzsAAAAAAAAAAAAAXzsAAAAAAABgOwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWzsAAAAAAABbOwAAAAAAAAAAAAAAAPC/"
				],
				[
					386,
					1,
					"insert",
					{
						"characters": " on"
					},
					"AwAAAGA7AAAAAAAAYTsAAAAAAAAAAAAAYTsAAAAAAABiOwAAAAAAAAAAAABiOwAAAAAAAGM7AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYDsAAAAAAABgOwAAAAAAAAAAAAAAAPC/"
				],
				[
					387,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAGM7AAAAAAAAZDsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYzsAAAAAAABjOwAAAAAAAAAAAAAAAPC/"
				],
				[
					388,
					1,
					"insert",
					{
						"characters": "unna"
					},
					"BAAAAGQ7AAAAAAAAZTsAAAAAAAAAAAAAZTsAAAAAAABmOwAAAAAAAAAAAABmOwAAAAAAAGc7AAAAAAAAAAAAAGc7AAAAAAAAaDsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZDsAAAAAAABkOwAAAAAAAAAAAAAAAPC/"
				],
				[
					389,
					1,
					"insert",
					{
						"characters": "n"
					},
					"AQAAAGg7AAAAAAAAaTsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaDsAAAAAAABoOwAAAAAAAAAAAAAAAPC/"
				],
				[
					391,
					1,
					"left_delete",
					null,
					"AQAAAGY7AAAAAAAAZjsAAAAAAAABAAAAbg",
					"AQAAAAAAAAABAAAAZzsAAAAAAABnOwAAAAAAAAAAAAAAAPC/"
				],
				[
					393,
					1,
					"insert",
					{
						"characters": "notatabl"
					},
					"CAAAAGg7AAAAAAAAaTsAAAAAAAAAAAAAaTsAAAAAAABqOwAAAAAAAAAAAABqOwAAAAAAAGs7AAAAAAAAAAAAAGs7AAAAAAAAbDsAAAAAAAAAAAAAbDsAAAAAAABtOwAAAAAAAAAAAABtOwAAAAAAAG47AAAAAAAAAAAAAG47AAAAAAAAbzsAAAAAAAAAAAAAbzsAAAAAAABwOwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaDsAAAAAAABoOwAAAAAAAAAAAAAAAPC/"
				],
				[
					394,
					1,
					"insert",
					{
						"characters": "es"
					},
					"AgAAAHA7AAAAAAAAcTsAAAAAAAAAAAAAcTsAAAAAAAByOwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcDsAAAAAAABwOwAAAAAAAAAAAAAAAPC/"
				],
				[
					441,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAACY7AAAAAAAAJzsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJjsAAAAAAAAmOwAAAAAAAAAAAAAAAPC/"
				],
				[
					442,
					1,
					"left_delete",
					null,
					"AQAAACY7AAAAAAAAJjsAAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAAJzsAAAAAAAAnOwAAAAAAAAAAAAAAAPC/"
				],
				[
					443,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAACY7AAAAAAAAJzsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJjsAAAAAAAAmOwAAAAAAAAAAAAAAAPC/"
				],
				[
					444,
					1,
					"left_delete",
					null,
					"AQAAACY7AAAAAAAAJjsAAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAJzsAAAAAAAAnOwAAAAAAAAAAAAAAAPC/"
				],
				[
					465,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAALA6AAAAAAAAsToAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsDoAAAAAAACwOgAAAAAAAAAAAAAAAPC/"
				],
				[
					466,
					1,
					"left_delete",
					null,
					"AQAAALA6AAAAAAAAsDoAAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAsToAAAAAAACxOgAAAAAAAAAAAAAAAPC/"
				],
				[
					467,
					1,
					"insert",
					{
						"characters": "f"
					},
					"AQAAALA6AAAAAAAAsToAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsDoAAAAAAACwOgAAAAAAAAAAAAAAAPC/"
				],
				[
					468,
					1,
					"left_delete",
					null,
					"AQAAALA6AAAAAAAAsDoAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAAsToAAAAAAACxOgAAAAAAAAAAAAAAAPC/"
				],
				[
					488,
					8,
					"left_delete",
					null,
					"CAAAABBCAAAAAAAAEEIAAAAAAAABAAAAZQ9CAAAAAAAAD0IAAAAAAAABAAAAdQ5CAAAAAAAADkIAAAAAAAABAAAAbg1CAAAAAAAADUIAAAAAAAABAAAAaQxCAAAAAAAADEIAAAAAAAABAAAAdAtCAAAAAAAAC0IAAAAAAAABAAAAbgpCAAAAAAAACkIAAAAAAAABAAAAbwlCAAAAAAAACUIAAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAEUIAAAAAAAARQgAAAAAAAAAAAAAAAPC/"
				],
				[
					489,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAAlCAAAAAAAACkIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACUIAAAAAAAAJQgAAAAAAAAAAAAAAAPC/"
				],
				[
					490,
					1,
					"left_delete",
					null,
					"AQAAAAlCAAAAAAAACUIAAAAAAAABAAAAZQ",
					"AQAAAAAAAAABAAAACkIAAAAAAAAKQgAAAAAAAAAAAAAAAPC/"
				],
				[
					491,
					1,
					"insert",
					{
						"characters": "re"
					},
					"AgAAAAlCAAAAAAAACkIAAAAAAAAAAAAACkIAAAAAAAALQgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACUIAAAAAAAAJQgAAAAAAAAAAAAAAAPC/"
				],
				[
					492,
					1,
					"insert_completion",
					{
						"completion": "return",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "return"
					},
					"AgAAAAlCAAAAAAAACUIAAAAAAAACAAAAcmUJQgAAAAAAAA9CAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAC0IAAAAAAAALQgAAAAAAAAAAAAAAAPC/"
				],
				[
					493,
					1,
					"insert",
					{
						"characters": " ret"
					},
					"BAAAAA9CAAAAAAAAEEIAAAAAAAAAAAAAEEIAAAAAAAARQgAAAAAAAAAAAAARQgAAAAAAABJCAAAAAAAAAAAAABJCAAAAAAAAE0IAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAD0IAAAAAAAAPQgAAAAAAAAAAAAAAAPC/"
				],
				[
					509,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAJ48AAAAAAAAnzwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnjwAAAAAAACePAAAAAAAAAAAAAAAAPC/"
				],
				[
					514,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAH49AAAAAAAAfz0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfj0AAAAAAAB+PQAAAAAAAAAAAAAAAPC/"
				],
				[
					524,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAHtBAAAAAAAAfEEAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAe0EAAAAAAAB7QQAAAAAAAAAAAAAAAPC/"
				],
				[
					547,
					1,
					"left_delete",
					null,
					"AQAAAMhSAAAAAAAAyFIAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAAyVIAAAAAAADJUgAAAAAAAAAAAAAAAPC/"
				],
				[
					549,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAMhSAAAAAAAAyVIAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyFIAAAAAAADIUgAAAAAAAAAAAAAAAPC/"
				],
				[
					557,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAI5SAAAAAAAAj1IAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjlIAAAAAAACOUgAAAAAAAAAAAAAAAPC/"
				],
				[
					559,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAJJSAAAAAAAAk1IAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAklIAAAAAAACSUgAAAAAAAAAAAAAAAPC/"
				],
				[
					560,
					1,
					"left_delete",
					null,
					"AQAAAJJSAAAAAAAAklIAAAAAAAABAAAAJw",
					"AQAAAAAAAAABAAAAk1IAAAAAAACTUgAAAAAAAAAAAAAAAPC/"
				],
				[
					561,
					1,
					"insert",
					{
						"characters": "'"
					},
					"AQAAAJJSAAAAAAAAk1IAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAklIAAAAAAACSUgAAAAAAAAAAAAAAAPC/"
				],
				[
					578,
					1,
					"insert",
					{
						"characters": "\nif"
					},
					"BQAAAKs8AAAAAAAArDwAAAAAAAAAAAAArDwAAAAAAACwPAAAAAAAAAAAAACwPAAAAAAAALQ8AAAAAAAAAAAAALQ8AAAAAAAAtTwAAAAAAAAAAAAAtTwAAAAAAAC2PAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqzwAAAAAAACrPAAAAAAAAAAAAAAAAPC/"
				],
				[
					579,
					1,
					"insert",
					{
						"characters": " st"
					},
					"AwAAALY8AAAAAAAAtzwAAAAAAAAAAAAAtzwAAAAAAAC4PAAAAAAAAAAAAAC4PAAAAAAAALk8AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtjwAAAAAAAC2PAAAAAAAAAAAAAAAAPC/"
				],
				[
					580,
					1,
					"insert",
					{
						"characters": "r"
					},
					"AQAAALk8AAAAAAAAujwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuTwAAAAAAAC5PAAAAAAAAAAAAAAAAPC/"
				],
				[
					581,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAALo8AAAAAAAAuzwAAAAAAAAAAAAAuzwAAAAAAAC8PAAAAAAAAAAAAAC8PAAAAAAAAL08AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAujwAAAAAAAC6PAAAAAAAAAAAAAAAAPC/"
				],
				[
					582,
					1,
					"insert",
					{
						"characters": " map"
					},
					"BAAAAL08AAAAAAAAvjwAAAAAAAAAAAAAvjwAAAAAAAC/PAAAAAAAAAAAAAC/PAAAAAAAAMA8AAAAAAAAAAAAAMA8AAAAAAAAwTwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvTwAAAAAAAC9PAAAAAAAAAAAAAAAAPC/"
				],
				[
					583,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAME8AAAAAAAAwzwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwTwAAAAAAADBPAAAAAAAAAAAAAAAAPC/"
				],
				[
					585,
					1,
					"insert",
					{
						"characters": "type"
					},
					"BAAAAMI8AAAAAAAAwzwAAAAAAAAAAAAAwzwAAAAAAADEPAAAAAAAAAAAAADEPAAAAAAAAMU8AAAAAAAAAAAAAMU8AAAAAAAAxjwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwjwAAAAAAADCPAAAAAAAAAAAAAAAAPC/"
				],
				[
					586,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAMY8AAAAAAAAxzwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxjwAAAAAAADGPAAAAAAAAAAAAAAAAPC/"
				],
				[
					587,
					1,
					"insert",
					{
						"characters": " fun"
					},
					"BAAAAMc8AAAAAAAAyDwAAAAAAAAAAAAAyDwAAAAAAADJPAAAAAAAAAAAAADJPAAAAAAAAMo8AAAAAAAAAAAAAMo8AAAAAAAAyzwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxzwAAAAAAADHPAAAAAAAAAAAAAAAAPC/"
				],
				[
					588,
					1,
					"insert",
					{
						"characters": "c.__"
					},
					"BAAAAMs8AAAAAAAAzDwAAAAAAAAAAAAAzDwAAAAAAADNPAAAAAAAAAAAAADNPAAAAAAAAM48AAAAAAAAAAAAAM48AAAAAAAAzzwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyzwAAAAAAADLPAAAAAAAAAAAAAAAAPC/"
				],
				[
					590,
					1,
					"insert_completion",
					{
						"completion": "__annotations__",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "__annotations__"
					},
					"AgAAAM08AAAAAAAAzTwAAAAAAAACAAAAX1/NPAAAAAAAANw8AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzzwAAAAAAADPPAAAAAAAAAAAAAAAAPC/"
				],
				[
					591,
					1,
					"insert",
					{
						"characters": ".values"
					},
					"BwAAANw8AAAAAAAA3TwAAAAAAAAAAAAA3TwAAAAAAADePAAAAAAAAAAAAADePAAAAAAAAN88AAAAAAAAAAAAAN88AAAAAAAA4DwAAAAAAAAAAAAA4DwAAAAAAADhPAAAAAAAAAAAAADhPAAAAAAAAOI8AAAAAAAAAAAAAOI8AAAAAAAA4zwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA3DwAAAAAAADcPAAAAAAAAAAAAAAAAPC/"
				],
				[
					592,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAOM8AAAAAAAA5TwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4zwAAAAAAADjPAAAAAAAAAAAAAAAAPC/"
				],
				[
					595,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAOY8AAAAAAAA5zwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5jwAAAAAAADmPAAAAAAAAAAAAAAAAPC/"
				],
				[
					596,
					1,
					"insert",
					{
						"characters": "\nre"
					},
					"BQAAAOc8AAAAAAAA6DwAAAAAAAAAAAAA6DwAAAAAAADwPAAAAAAAAAAAAADwPAAAAAAAAPQ8AAAAAAAAAAAAAPQ8AAAAAAAA9TwAAAAAAAAAAAAA9TwAAAAAAAD2PAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5zwAAAAAAADnPAAAAAAAAAAAAAAAAPC/"
				],
				[
					601,
					1,
					"insert_completion",
					{
						"completion": "resolveAnnotations",
						"format": "snippet",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "resolveAnnotations"
					},
					"AgAAAPQ8AAAAAAAA9DwAAAAAAAACAAAAcmX0PAAAAAAAAAY9AAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9jwAAAAAAAD2PAAAAAAAAAAAAAAAAPC/"
				],
				[
					602,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAAAY9AAAAAAAACD0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABj0AAAAAAAAGPQAAAAAAAAAAAAAAAPC/"
				],
				[
					604,
					1,
					"insert",
					{
						"characters": "func"
					},
					"BAAAAAc9AAAAAAAACD0AAAAAAAAAAAAACD0AAAAAAAAJPQAAAAAAAAAAAAAJPQAAAAAAAAo9AAAAAAAAAAAAAAo9AAAAAAAACz0AAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABz0AAAAAAAAHPQAAAAAAAAAAAAAAAPC/"
				],
				[
					624,
					1,
					"left_delete",
					null,
					"AQAAAPlSAAAAAAAA+VIAAAAAAAADAAAAQW55",
					"AQAAAAAAAAABAAAA+VIAAAAAAAD8UgAAAAAAAAAAAAAAAPC/"
				],
				[
					625,
					1,
					"insert",
					{
						"characters": "Cast("
					},
					"BQAAAPlSAAAAAAAA+lIAAAAAAAAAAAAA+lIAAAAAAAD7UgAAAAAAAAAAAAD7UgAAAAAAAPxSAAAAAAAAAAAAAPxSAAAAAAAA/VIAAAAAAAAAAAAA/VIAAAAAAAD+UgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+VIAAAAAAAD5UgAAAAAAAAAAAAAAAPC/"
				],
				[
					626,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAP5SAAAAAAAA/1IAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/lIAAAAAAAD+UgAAAAAAAAAAAAAAAPC/"
				],
				[
					628,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAP5SAAAAAAAA/1IAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/lIAAAAAAAD+UgAAAAAAAAAAAAAAAPC/"
				],
				[
					629,
					1,
					"left_delete",
					null,
					"AQAAAP5SAAAAAAAA/lIAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAA/1IAAAAAAAD/UgAAAAAAAAAAAAAAAPC/"
				],
				[
					631,
					1,
					"insert",
					{
						"characters": "float"
					},
					"BQAAAP5SAAAAAAAA/1IAAAAAAAAAAAAA/1IAAAAAAAAAUwAAAAAAAAAAAAAAUwAAAAAAAAFTAAAAAAAAAAAAAAFTAAAAAAAAAlMAAAAAAAAAAAAAAlMAAAAAAAADUwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/lIAAAAAAAD+UgAAAAAAAAAAAAAAAPC/"
				],
				[
					632,
					1,
					"insert",
					{
						"characters": " |"
					},
					"AgAAAANTAAAAAAAABFMAAAAAAAAAAAAABFMAAAAAAAAFUwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAA1MAAAAAAAADUwAAAAAAAAAAAAAAAPC/"
				],
				[
					633,
					1,
					"insert",
					{
						"characters": " str"
					},
					"BAAAAAVTAAAAAAAABlMAAAAAAAAAAAAABlMAAAAAAAAHUwAAAAAAAAAAAAAHUwAAAAAAAAhTAAAAAAAAAAAAAAhTAAAAAAAACVMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABVMAAAAAAAAFUwAAAAAAAAAAAAAAAPC/"
				],
				[
					640,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAACdTAAAAAAAAKFMAAAAAAAAAAAAAKFMAAAAAAAAsUwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJ1MAAAAAAAAnUwAAAAAAAAAAAAAAAPC/"
				],
				[
					641,
					2,
					"left_delete",
					null,
					"AgAAAChTAAAAAAAAKFMAAAAAAAAEAAAAICAgICdTAAAAAAAAJ1MAAAAAAAABAAAACg",
					"AQAAAAAAAAABAAAALFMAAAAAAAAsUwAAAAAAAAAAAAAAAPC/"
				],
				[
					644,
					1,
					"insert",
					{
						"characters": "tuple"
					},
					"BQAAAPlSAAAAAAAA+lIAAAAAAAAAAAAA+lIAAAAAAAD7UgAAAAAAAAAAAAD7UgAAAAAAAPxSAAAAAAAAAAAAAPxSAAAAAAAA/VIAAAAAAAAAAAAA/VIAAAAAAAD+UgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+VIAAAAAAAD5UgAAAAAAAAAAAAAAAPC/"
				],
				[
					645,
					1,
					"insert",
					{
						"characters": "{"
					},
					"AQAAAP5SAAAAAAAA/1IAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/lIAAAAAAAD+UgAAAAAAAAAAAAAAAPC/"
				],
				[
					646,
					1,
					"left_delete",
					null,
					"AQAAAP5SAAAAAAAA/lIAAAAAAAABAAAAew",
					"AQAAAAAAAAABAAAA/1IAAAAAAAD/UgAAAAAAAAAAAAAAAPC/"
				],
				[
					647,
					1,
					"insert",
					{
						"characters": "["
					},
					"AQAAAP5SAAAAAAAA/1IAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/lIAAAAAAAD+UgAAAAAAAAAAAAAAAPC/"
				],
				[
					649,
					1,
					"insert",
					{
						"characters": " ["
					},
					"AgAAABBTAAAAAAAAEVMAAAAAAAAAAAAAEVMAAAAAAAASUwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEFMAAAAAAAAQUwAAAAAAAAAAAAAAAPC/"
				],
				[
					650,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABJTAAAAAAAAE1MAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAElMAAAAAAAASUwAAAAAAAAAAAAAAAPC/"
				],
				[
					652,
					1,
					"left_delete",
					null,
					"AQAAABFTAAAAAAAAEVMAAAAAAAABAAAAWw",
					"AQAAAAAAAAABAAAAElMAAAAAAAASUwAAAAAAAAAAAAAAAPC/"
				],
				[
					653,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAABFTAAAAAAAAE1MAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEVMAAAAAAAARUwAAAAAAAAAAAAAAAPC/"
				],
				[
					655,
					1,
					"left_delete",
					null,
					"AQAAABBTAAAAAAAAEFMAAAAAAAACAAAAIFs",
					"AQAAAAAAAAABAAAAElMAAAAAAAAQUwAAAAAAAAAAAAAAAPC/"
				],
				[
					657,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAABFTAAAAAAAAElMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEVMAAAAAAAARUwAAAAAAAAAAAAAAAPC/"
				],
				[
					667,
					1,
					"cut",
					null,
					"AQAAAPlSAAAAAAAA+VIAAAAAAAAGAAAAdHVwbGVb",
					"AQAAAAAAAAABAAAA+VIAAAAAAAD/UgAAAAAAAAAAAAAAAPC/"
				],
				[
					669,
					1,
					"paste",
					null,
					"AQAAAP5SAAAAAAAABFMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/lIAAAAAAAD+UgAAAAAAAAAAAAAAAPC/"
				],
				[
					673,
					1,
					"cut",
					null,
					"AQAAABBTAAAAAAAAEFMAAAAAAAABAAAAXQ",
					"AQAAAAAAAAABAAAAEVMAAAAAAAAQUwAAAAAAAAAAAAAAAPC/"
				],
				[
					675,
					1,
					"paste",
					null,
					"AQAAAA9TAAAAAAAAEFMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAD1MAAAAAAAAPUwAAAAAAAAAAAAAAAPC/"
				],
				[
					678,
					1,
					"left_delete",
					null,
					"AQAAABFTAAAAAAAAEVMAAAAAAAABAAAAKQ",
					"AQAAAAAAAAABAAAAEVMAAAAAAAASUwAAAAAAAAAAAAAAAPC/"
				],
				[
					688,
					1,
					"left_delete",
					null,
					"AQAAABFTAAAAAAAAEVMAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAElMAAAAAAAASUwAAAAAAAAAAAAAAAPC/"
				],
				[
					694,
					1,
					"insert",
					{
						"characters": "\nreturn"
					},
					"CAAAAC5TAAAAAAAAL1MAAAAAAAAAAAAAL1MAAAAAAAAzUwAAAAAAAAAAAAAzUwAAAAAAADRTAAAAAAAAAAAAADRTAAAAAAAANVMAAAAAAAAAAAAANVMAAAAAAAA2UwAAAAAAAAAAAAA2UwAAAAAAADdTAAAAAAAAAAAAADdTAAAAAAAAOFMAAAAAAAAAAAAAOFMAAAAAAAA5UwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALlMAAAAAAAAuUwAAAAAAAAAAAAAAUHtA"
				],
				[
					695,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAADlTAAAAAAAAOlMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOVMAAAAAAAA5UwAAAAAAAAAAAAAAAPC/"
				],
				[
					696,
					1,
					"insert_snippet",
					{
						"contents": "($0)"
					},
					"AQAAADpTAAAAAAAAPFMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOlMAAAAAAAA6UwAAAAAAAAAAAAAAAPC/"
				],
				[
					698,
					1,
					"insert",
					{
						"characters": "3,"
					},
					"AgAAADtTAAAAAAAAPFMAAAAAAAAAAAAAPFMAAAAAAAA9UwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAO1MAAAAAAAA7UwAAAAAAAAAAAAAAAPC/"
				],
				[
					699,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD1TAAAAAAAAPlMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPVMAAAAAAAA9UwAAAAAAAAAAAAAAAPC/"
				],
				[
					700,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAD5TAAAAAAAAQFMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPlMAAAAAAAA+UwAAAAAAAAAAAAAAAPC/"
				],
				[
					701,
					1,
					"insert",
					{
						"characters": "3.0"
					},
					"AwAAAD9TAAAAAAAAQFMAAAAAAAAAAAAAQFMAAAAAAABBUwAAAAAAAAAAAABBUwAAAAAAAEJTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAP1MAAAAAAAA/UwAAAAAAAAAAAAAAAPC/"
				],
				[
					703,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAAENTAAAAAAAARFMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQ1MAAAAAAABDUwAAAAAAAAAAAAAAAPC/"
				],
				[
					704,
					1,
					"insert",
					{
						"characters": " 1j"
					},
					"AwAAAERTAAAAAAAARVMAAAAAAAAAAAAARVMAAAAAAABGUwAAAAAAAAAAAABGUwAAAAAAAEdTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARFMAAAAAAABEUwAAAAAAAAAAAAAAAPC/"
				],
				[
					711,
					1,
					"insert",
					{
						"characters": "print("
					},
					"BgAAAEtTAAAAAAAATFMAAAAAAAAAAAAATFMAAAAAAABNUwAAAAAAAAAAAABNUwAAAAAAAE5TAAAAAAAAAAAAAE5TAAAAAAAAT1MAAAAAAAAAAAAAT1MAAAAAAABQUwAAAAAAAAAAAABQUwAAAAAAAFFTAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAS1MAAAAAAABLUwAAAAAAAAAAAAAAAPC/"
				],
				[
					713,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAGBTAAAAAAAAYVMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYFMAAAAAAABgUwAAAAAAAAAAAAAAAPC/"
				],
				[
					718,
					1,
					"insert",
					{
						"characters": "repr("
					},
					"BQAAAFFTAAAAAAAAUlMAAAAAAAAAAAAAUlMAAAAAAABTUwAAAAAAAAAAAABTUwAAAAAAAFRTAAAAAAAAAAAAAFRTAAAAAAAAVVMAAAAAAAAAAAAAVVMAAAAAAABWUwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAUVMAAAAAAABRUwAAAAAAAAAAAAAAAPC/"
				],
				[
					721,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAGZTAAAAAAAAZ1MAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZlMAAAAAAABmUwAAAAAAAAAAAAAAAPC/"
				],
				[
					753,
					1,
					"cut",
					null,
					"",
					"AQAAAAAAAAABAAAAzlIAAAAAAAAAAAAAAAAAAAAAAAAAwGhA"
				]
			]
		},
		{
			"file": "/C/sublime_text/Data/Packages/subliminal/subliminal-Python.sublime-syntax",
			"settings":
			{
				"buffer_size": 136377,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					86,
					1,
					"insert",
					{
						"characters": "\n-"
					},
					"AwAAAEkqAQAAAAAASioBAAAAAAAAAAAASioBAAAAAABOKgEAAAAAAAAAAABOKgEAAAAAAE8qAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASSoBAAAAAABJKgEAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": " incl"
					},
					"BQAAAE8qAQAAAAAAUCoBAAAAAAAAAAAAUCoBAAAAAABRKgEAAAAAAAAAAABRKgEAAAAAAFIqAQAAAAAAAAAAAFIqAQAAAAAAUyoBAAAAAAAAAAAAUyoBAAAAAABUKgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATyoBAAAAAABPKgEAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					1,
					"insert",
					{
						"characters": "ude:"
					},
					"BAAAAFQqAQAAAAAAVSoBAAAAAAAAAAAAVSoBAAAAAABWKgEAAAAAAAAAAABWKgEAAAAAAFcqAQAAAAAAAAAAAFcqAQAAAAAAWCoBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVCoBAAAAAABUKgEAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": " ret"
					},
					"BAAAAFgqAQAAAAAAWSoBAAAAAAAAAAAAWSoBAAAAAABaKgEAAAAAAAAAAABaKgEAAAAAAFsqAQAAAAAAAAAAAFsqAQAAAAAAXCoBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWCoBAAAAAABYKgEAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					3,
					"left_delete",
					null,
					"AwAAAFsqAQAAAAAAWyoBAAAAAAABAAAAdFoqAQAAAAAAWioBAAAAAAABAAAAZVkqAQAAAAAAWSoBAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAXCoBAAAAAABcKgEAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert",
					{
						"characters": "docstri"
					},
					"BwAAAFkqAQAAAAAAWioBAAAAAAAAAAAAWioBAAAAAABbKgEAAAAAAAAAAABbKgEAAAAAAFwqAQAAAAAAAAAAAFwqAQAAAAAAXSoBAAAAAAAAAAAAXSoBAAAAAABeKgEAAAAAAAAAAABeKgEAAAAAAF8qAQAAAAAAAAAAAF8qAQAAAAAAYCoBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWSoBAAAAAABZKgEAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "ng-ret"
					},
					"BgAAAGAqAQAAAAAAYSoBAAAAAAAAAAAAYSoBAAAAAABiKgEAAAAAAAAAAABiKgEAAAAAAGMqAQAAAAAAAAAAAGMqAQAAAAAAZCoBAAAAAAAAAAAAZCoBAAAAAABlKgEAAAAAAAAAAABlKgEAAAAAAGYqAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYCoBAAAAAABgKgEAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					3,
					"left_delete",
					null,
					"AwAAAGUqAQAAAAAAZSoBAAAAAAABAAAAdGQqAQAAAAAAZCoBAAAAAAABAAAAZWMqAQAAAAAAYyoBAAAAAAABAAAAcg",
					"AQAAAAAAAAABAAAAZioBAAAAAABmKgEAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "markup"
					},
					"BgAAAGMqAQAAAAAAZCoBAAAAAAAAAAAAZCoBAAAAAABlKgEAAAAAAAAAAABlKgEAAAAAAGYqAQAAAAAAAAAAAGYqAQAAAAAAZyoBAAAAAAAAAAAAZyoBAAAAAABoKgEAAAAAAAAAAABoKgEAAAAAAGkqAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYyoBAAAAAABjKgEAAAAAAAAAAAAAAPC/"
				],
				[
					114,
					1,
					"reindent",
					null,
					"AQAAADsSAgAAAAAAQRICAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOxICAAAAAAA7EgIAAAAAAAAAAAAAAAAA"
				],
				[
					115,
					2,
					"left_delete",
					null,
					"AgAAAD8SAgAAAAAAPxICAAAAAAACAAAAICA9EgIAAAAAAD0SAgAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAAQRICAAAAAABBEgIAAAAAAAAAAAAAAPC/"
				],
				[
					116,
					1,
					"paste",
					null,
					"AQAAAD0SAgAAAAAATRICAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPRICAAAAAAA9EgIAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAE0SAgAAAAAAThICAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAATRICAAAAAABNEgIAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": "\n-"
					},
					"BAAAAE4SAgAAAAAATxICAAAAAAAAAAAATxICAAAAAABREgIAAAAAAAAAAABREgIAAAAAAFMSAgAAAAAAAAAAAFMSAgAAAAAAVBICAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAThICAAAAAABOEgIAAAAAAAAAAAAAAPC/"
				],
				[
					119,
					1,
					"insert",
					{
						"characters": " match"
					},
					"BgAAAFQSAgAAAAAAVRICAAAAAAAAAAAAVRICAAAAAABWEgIAAAAAAAAAAABWEgIAAAAAAFcSAgAAAAAAAAAAAFcSAgAAAAAAWBICAAAAAAAAAAAAWBICAAAAAABZEgIAAAAAAAAAAABZEgIAAAAAAFoSAgAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVBICAAAAAABUEgIAAAAAAAAAAAAAAPC/"
				],
				[
					120,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAFoSAgAAAAAAWxICAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWhICAAAAAABaEgIAAAAAAAAAAAAAAPC/"
				],
				[
					121,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAFsSAgAAAAAAXBICAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWxICAAAAAABbEgIAAAAAAAAAAAAAAPC/"
				],
				[
					122,
					1,
					"insert_snippet",
					{
						"contents": "'$0'"
					},
					"AQAAAFwSAgAAAAAAXhICAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXBICAAAAAABcEgIAAAAAAAAAAAAAAPC/"
				],
				[
					123,
					1,
					"insert",
					{
						"characters": "\\:"
					},
					"AgAAAF0SAgAAAAAAXhICAAAAAAAAAAAAXhICAAAAAABfEgIAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXRICAAAAAABdEgIAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": "param"
					},
					"BQAAAF8SAgAAAAAAYBICAAAAAAAAAAAAYBICAAAAAABhEgIAAAAAAAAAAABhEgIAAAAAAGISAgAAAAAAAAAAAGISAgAAAAAAYxICAAAAAAAAAAAAYxICAAAAAABkEgIAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXxICAAAAAABfEgIAAAAAAAAAAAAAAPC/"
				],
				[
					125,
					1,
					"insert",
					{
						"characters": " ("
					},
					"AgAAAGQSAgAAAAAAZRICAAAAAAAAAAAAZRICAAAAAABmEgIAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZBICAAAAAABkEgIAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAGYSAgAAAAAAZxICAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZhICAAAAAABmEgIAAAAAAAAAAAAAAPC/"
				],
				[
					128,
					1,
					"insert_snippet",
					{
						"contents": "[$0]"
					},
					"AQAAAGYSAgAAAAAAaBICAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZhICAAAAAABmEgIAAAAAAAAAAAAAAPC/"
				],
				[
					129,
					1,
					"insert",
					{
						"characters": "\\w"
					},
					"AgAAAGcSAgAAAAAAaBICAAAAAAAAAAAAaBICAAAAAABpEgIAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZxICAAAAAABnEgIAAAAAAAAAAAAAAPC/"
				],
				[
					130,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAAGkSAgAAAAAAahICAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaRICAAAAAABpEgIAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"left_delete",
					null,
					"AQAAAGkSAgAAAAAAaRICAAAAAAABAAAALQ",
					"AQAAAAAAAAABAAAAahICAAAAAABqEgIAAAAAAAAAAAAAAPC/"
				],
				[
					135,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAAGkSAgAAAAAAahICAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAaRICAAAAAABpEgIAAAAAAAAAAAAAAPC/"
				],
				[
					137,
					1,
					"insert",
					{
						"characters": "\\:"
					},
					"AgAAAGwSAgAAAAAAbRICAAAAAAAAAAAAbRICAAAAAABuEgIAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbBICAAAAAABsEgIAAAAAAAAAAAAAAPC/"
				],
				[
					139,
					1,
					"ensure_newline_at_eof",
					null,
					"AQAAAG8SAgAAAAAAcBICAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAbhICAAAAAABuEgIAAAAAAAAAAAAAAPC/"
				],
				[
					145,
					1,
					"insert",
					{
						"characters": "à"
					},
					"AQAAAGQSAgAAAAAAZRICAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZBICAAAAAABkEgIAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"left_delete",
					null,
					"AQAAAGQSAgAAAAAAZBICAAAAAAACAAAAw6A",
					"AQAAAAAAAAABAAAAZRICAAAAAABlEgIAAAAAAAAAAAAAAPC/"
				],
				[
					147,
					1,
					"insert",
					{
						"characters": ")"
					},
					"AQAAAGQSAgAAAAAAZRICAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZBICAAAAAABkEgIAAAAAAAAAAAAAAPC/"
				],
				[
					149,
					1,
					"insert",
					{
						"characters": "("
					},
					"AQAAAF8SAgAAAAAAYBICAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXxICAAAAAABfEgIAAAAAAAAAAAAAAPC/"
				],
				[
					152,
					1,
					"insert",
					{
						"characters": "\n\t"
					},
					"AwAAAHESAgAAAAAAchICAAAAAAAAAAAAchICAAAAAAB2EgIAAAAAAAAAAAB2EgIAAAAAAHgSAgAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAcRICAAAAAABxEgIAAAAAAAAAAAAAAPC/"
				],
				[
					153,
					1,
					"insert",
					{
						"characters": "cap"
					},
					"AwAAAHgSAgAAAAAAeRICAAAAAAAAAAAAeRICAAAAAAB6EgIAAAAAAAAAAAB6EgIAAAAAAHsSAgAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAeBICAAAAAAB4EgIAAAAAAAAAAAAAAPC/"
				],
				[
					154,
					1,
					"insert_completion",
					{
						"completion": "captures",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "captures"
					},
					"AgAAAHgSAgAAAAAAeBICAAAAAAADAAAAY2FweBICAAAAAACAEgIAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAexICAAAAAAB7EgIAAAAAAAAAAAAAAPC/"
				],
				[
					155,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAIASAgAAAAAAgRICAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgBICAAAAAACAEgIAAAAAAAAAAAAAAPC/"
				],
				[
					156,
					1,
					"insert",
					{
						"characters": "\n0"
					},
					"BAAAAIESAgAAAAAAghICAAAAAAAAAAAAghICAAAAAACIEgIAAAAAAAAAAACIEgIAAAAAAIoSAgAAAAAAAAAAAIoSAgAAAAAAixICAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAgRICAAAAAACBEgIAAAAAAAAAAAAAAPC/"
				],
				[
					157,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAIsSAgAAAAAAjBICAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAixICAAAAAACLEgIAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIwSAgAAAAAAjRICAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjBICAAAAAACMEgIAAAAAAAAAAAAAAPC/"
				],
				[
					159,
					1,
					"insert",
					{
						"characters": "con"
					},
					"AwAAAI0SAgAAAAAAjhICAAAAAAAAAAAAjhICAAAAAACPEgIAAAAAAAAAAACPEgIAAAAAAJASAgAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjRICAAAAAACNEgIAAAAAAAAAAAAAAPC/"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": "t"
					},
					"AQAAAJASAgAAAAAAkRICAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkBICAAAAAACQEgIAAAAAAAAAAAAAAPC/"
				],
				[
					161,
					4,
					"left_delete",
					null,
					"BAAAAJASAgAAAAAAkBICAAAAAAABAAAAdI8SAgAAAAAAjxICAAAAAAABAAAAbo4SAgAAAAAAjhICAAAAAAABAAAAb40SAgAAAAAAjRICAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAAkRICAAAAAACREgIAAAAAAAAAAAAAAPC/"
				],
				[
					162,
					1,
					"insert",
					{
						"characters": "key"
					},
					"AwAAAI0SAgAAAAAAjhICAAAAAAAAAAAAjhICAAAAAACPEgIAAAAAAAAAAACPEgIAAAAAAJASAgAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjRICAAAAAACNEgIAAAAAAAAAAAAAAPC/"
				],
				[
					163,
					1,
					"insert_completion",
					{
						"completion": "keyword",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "keyword"
					},
					"AgAAAI0SAgAAAAAAjRICAAAAAAADAAAAa2V5jRICAAAAAACUEgIAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkBICAAAAAACQEgIAAAAAAAAAAAAAAPC/"
				],
				[
					164,
					1,
					"insert",
					{
						"characters": ".co"
					},
					"AwAAAJQSAgAAAAAAlRICAAAAAAAAAAAAlRICAAAAAACWEgIAAAAAAAAAAACWEgIAAAAAAJcSAgAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlBICAAAAAACUEgIAAAAAAAAAAAAAAPC/"
				],
				[
					165,
					1,
					"insert_completion",
					{
						"completion": "control",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "control"
					},
					"AgAAAJUSAgAAAAAAlRICAAAAAAACAAAAY2+VEgIAAAAAAJwSAgAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlxICAAAAAACXEgIAAAAAAAAAAAAAAPC/"
				],
				[
					166,
					1,
					"insert",
					{
						"characters": "?"
					},
					"AQAAAJwSAgAAAAAAnRICAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnBICAAAAAACcEgIAAAAAAAAAAAAAAPC/"
				],
				[
					167,
					1,
					"left_delete",
					null,
					"AQAAAJwSAgAAAAAAnBICAAAAAAABAAAAPw",
					"AQAAAAAAAAABAAAAnRICAAAAAACdEgIAAAAAAAAAAAAAAPC/"
				],
				[
					168,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAAJwSAgAAAAAAnRICAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnBICAAAAAACcEgIAAAAAAAAAAAAAAPC/"
				],
				[
					169,
					1,
					"insert",
					{
						"characters": "doc"
					},
					"AwAAAJ0SAgAAAAAAnhICAAAAAAAAAAAAnhICAAAAAACfEgIAAAAAAAAAAACfEgIAAAAAAKASAgAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnRICAAAAAACdEgIAAAAAAAAAAAAAAPC/"
				],
				[
					171,
					1,
					"insert_completion",
					{
						"completion": "docstrings",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "docstrings"
					},
					"AgAAAJ0SAgAAAAAAnRICAAAAAAADAAAAZG9jnRICAAAAAACnEgIAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoBICAAAAAACgEgIAAAAAAAAAAAAAAPC/"
				],
				[
					172,
					1,
					"left_delete",
					null,
					"AQAAAKYSAgAAAAAAphICAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAApxICAAAAAACnEgIAAAAAAAAAAAAAAPC/"
				],
				[
					176,
					1,
					"insert",
					{
						"characters": "\n1:"
					},
					"BAAAAKYSAgAAAAAApxICAAAAAAAAAAAApxICAAAAAACvEgIAAAAAAAAAAACvEgIAAAAAALASAgAAAAAAAAAAALASAgAAAAAAsRICAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAphICAAAAAACmEgIAAAAAAAAAAAAAAPC/"
				],
				[
					177,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAALESAgAAAAAAshICAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAsRICAAAAAACxEgIAAAAAAAAAAAAAAPC/"
				],
				[
					178,
					1,
					"insert",
					{
						"characters": "var"
					},
					"AwAAALISAgAAAAAAsxICAAAAAAAAAAAAsxICAAAAAAC0EgIAAAAAAAAAAAC0EgIAAAAAALUSAgAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAshICAAAAAACyEgIAAAAAAAAAAAAAAPC/"
				],
				[
					179,
					1,
					"insert_completion",
					{
						"completion": "variable",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "variable"
					},
					"AgAAALISAgAAAAAAshICAAAAAAADAAAAdmFyshICAAAAAAC6EgIAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtRICAAAAAAC1EgIAAAAAAAAAAAAAAPC/"
				],
				[
					180,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAALoSAgAAAAAAuxICAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuhICAAAAAAC6EgIAAAAAAAAAAAAAAPC/"
				],
				[
					181,
					1,
					"insert_completion",
					{
						"completion": "parameter",
						"format": "text",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "parameter"
					},
					"AQAAALsSAgAAAAAAxBICAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuxICAAAAAAC7EgIAAAAAAAAAAAAAAPC/"
				],
				[
					182,
					1,
					"insert",
					{
						"characters": ".name"
					},
					"BQAAAMQSAgAAAAAAxRICAAAAAAAAAAAAxRICAAAAAADGEgIAAAAAAAAAAADGEgIAAAAAAMcSAgAAAAAAAAAAAMcSAgAAAAAAyBICAAAAAAAAAAAAyBICAAAAAADJEgIAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxBICAAAAAADEEgIAAAAAAAAAAAAAAPC/"
				],
				[
					191,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAMkSAgAAAAAAyhICAAAAAAAAAAAAyhICAAAAAADSEgIAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyRICAAAAAADJEgIAAAAAAAAAAAAAAPC/"
				],
				[
					192,
					2,
					"left_delete",
					null,
					"AgAAANASAgAAAAAA0BICAAAAAAACAAAAICDOEgIAAAAAAM4SAgAAAAAAAgAAACAg",
					"AQAAAAAAAAABAAAA0hICAAAAAADSEgIAAAAAAAAAAAAAAPC/"
				],
				[
					193,
					1,
					"paste",
					null,
					"AQAAAM4SAgAAAAAARBMCAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzhICAAAAAADOEgIAAAAAAAAAAAAAAPC/"
				],
				[
					201,
					1,
					"left_delete",
					null,
					"AQAAANoSAgAAAAAA2hICAAAAAAAPAAAAKHBhcmFtKSAoW1x3X10p",
					"AQAAAAAAAAABAAAA2hICAAAAAADpEgIAAAAAAAAAAAAAAPC/"
				],
				[
					202,
					1,
					"insert",
					{
						"characters": "returns"
					},
					"BwAAANoSAgAAAAAA2xICAAAAAAAAAAAA2xICAAAAAADcEgIAAAAAAAAAAADcEgIAAAAAAN0SAgAAAAAAAAAAAN0SAgAAAAAA3hICAAAAAAAAAAAA3hICAAAAAADfEgIAAAAAAAAAAADfEgIAAAAAAOASAgAAAAAAAAAAAOASAgAAAAAA4RICAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2hICAAAAAADaEgIAAAAAAAAAAAAAAPC/"
				],
				[
					208,
					1,
					"left_delete",
					null,
					"AQAAABoTAgAAAAAAGhMCAAAAAAAjAAAAICAgICAgICAxOiB2YXJpYWJsZS5wYXJhbWV0ZXIubmFtZQo",
					"AQAAAAAAAAABAAAAGhMCAAAAAAA9EwIAAAAAAAAAAAAAAPC/"
				],
				[
					211,
					8,
					"left_delete",
					null,
					"CAAAAPISAgAAAAAA8hICAAAAAAABAAAAc/ESAgAAAAAA8RICAAAAAAABAAAAZfASAgAAAAAA8BICAAAAAAABAAAAcu8SAgAAAAAA7xICAAAAAAABAAAAde4SAgAAAAAA7hICAAAAAAABAAAAdO0SAgAAAAAA7RICAAAAAAABAAAAcOwSAgAAAAAA7BICAAAAAAABAAAAYesSAgAAAAAA6xICAAAAAAABAAAAYw",
					"AQAAAAAAAAABAAAA8xICAAAAAADzEgIAAAAAAAAAAAAAAPC/"
				],
				[
					212,
					1,
					"insert",
					{
						"characters": "scope"
					},
					"BQAAAOsSAgAAAAAA7BICAAAAAAAAAAAA7BICAAAAAADtEgIAAAAAAAAAAADtEgIAAAAAAO4SAgAAAAAAAAAAAO4SAgAAAAAA7xICAAAAAAAAAAAA7xICAAAAAADwEgIAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6xICAAAAAADrEgIAAAAAAAAAAAAAAPC/"
				],
				[
					217,
					1,
					"left_delete",
					null,
					"AQAAAPESAgAAAAAA8RICAAAAAAALAAAACiAgICAgICAgMDo",
					"AQAAAAAAAAABAAAA/BICAAAAAADxEgIAAAAAAAAAAAAAAPC/"
				],
				[
					245,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAADAsAAAAAAAAMSwAAAAAAAAAAAAAMSwAAAAAAAA3LAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMCwAAAAAAAAwLAAAAAAAAAAAAAAAAPC/"
				],
				[
					246,
					1,
					"left_delete",
					null,
					"AQAAADUsAAAAAAAANSwAAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAANywAAAAAAAA3LAAAAAAAAAAAAAAAAPC/"
				],
				[
					247,
					1,
					"insert",
					{
						"characters": "-"
					},
					"AQAAADUsAAAAAAAANiwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANSwAAAAAAAA1LAAAAAAAAAAAAAAAAPC/"
				],
				[
					248,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAADYsAAAAAAAANywAAAAAAAAAAAAANywAAAAAAAA4LAAAAAAAAAAAAAA4LAAAAAAAADksAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANiwAAAAAAAA2LAAAAAAAAAAAAAAAAPC/"
				],
				[
					249,
					1,
					"insert_completion",
					{
						"completion": "include",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "include"
					},
					"AgAAADcsAAAAAAAANywAAAAAAAACAAAAaW43LAAAAAAAAD4sAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAOSwAAAAAAAA5LAAAAAAAAAAAAAAAAPC/"
				],
				[
					250,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAD4sAAAAAAAAPywAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPiwAAAAAAAA+LAAAAAAAAAAAAAAAAPC/"
				],
				[
					251,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAD8sAAAAAAAAQCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAPywAAAAAAAA/LAAAAAAAAAAAAAAAAPC/"
				],
				[
					252,
					1,
					"insert",
					{
						"characters": "do"
					},
					"AgAAAEAsAAAAAAAAQSwAAAAAAAAAAAAAQSwAAAAAAABCLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQCwAAAAAAABALAAAAAAAAAAAAAAAAPC/"
				],
				[
					253,
					1,
					"insert",
					{
						"characters": "cstr"
					},
					"BAAAAEIsAAAAAAAAQywAAAAAAAAAAAAAQywAAAAAAABELAAAAAAAAAAAAABELAAAAAAAAEUsAAAAAAAAAAAAAEUsAAAAAAAARiwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAQiwAAAAAAABCLAAAAAAAAAAAAAAAAPC/"
				],
				[
					255,
					1,
					"insert_completion",
					{
						"completion": "docstring-markup",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "docstring-markup"
					},
					"AgAAAEAsAAAAAAAAQCwAAAAAAAAGAAAAZG9jc3RyQCwAAAAAAABQLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARiwAAAAAAABGLAAAAAAAAAAAAAAAAPC/"
				],
				[
					330,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAEYyAQAAAAAARzIBAAAAAAAAAAAARzIBAAAAAABLMgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARjIBAAAAAABGMgEAAAAAAAAAAAAAAPC/"
				],
				[
					337,
					1,
					"paste",
					null,
					"AQAAAEsyAQAAAAAAcTIBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASzIBAAAAAABLMgEAAAAAAAAAAAAAoHVA"
				],
				[
					339,
					1,
					"left_delete",
					null,
					"AQAAAFYyAQAAAAAAVjIBAAAAAAAbAAAAc2luZ2xlLXF1b3RlZC1kb2NzdHJpbmctZW5k",
					"AQAAAAAAAAABAAAAcTIBAAAAAABWMgEAAAAAAAAAAAAAAPC/"
				],
				[
					340,
					1,
					"insert",
					{
						"characters": "doc"
					},
					"AwAAAFYyAQAAAAAAVzIBAAAAAAAAAAAAVzIBAAAAAABYMgEAAAAAAAAAAABYMgEAAAAAAFkyAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAVjIBAAAAAABWMgEAAAAAAAAAAAAAAPC/"
				],
				[
					341,
					1,
					"insert",
					{
						"characters": "sct"
					},
					"AwAAAFkyAQAAAAAAWjIBAAAAAAAAAAAAWjIBAAAAAABbMgEAAAAAAAAAAABbMgEAAAAAAFwyAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAWTIBAAAAAABZMgEAAAAAAAAAAAAAAPC/"
				],
				[
					342,
					1,
					"insert",
					{
						"characters": "ring-"
					},
					"BQAAAFwyAQAAAAAAXTIBAAAAAAAAAAAAXTIBAAAAAABeMgEAAAAAAAAAAABeMgEAAAAAAF8yAQAAAAAAAAAAAF8yAQAAAAAAYDIBAAAAAAAAAAAAYDIBAAAAAABhMgEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXDIBAAAAAABcMgEAAAAAAAAAAAAAAPC/"
				],
				[
					343,
					1,
					"insert",
					{
						"characters": "syntax"
					},
					"BgAAAGEyAQAAAAAAYjIBAAAAAAAAAAAAYjIBAAAAAABjMgEAAAAAAAAAAABjMgEAAAAAAGQyAQAAAAAAAAAAAGQyAQAAAAAAZTIBAAAAAAAAAAAAZTIBAAAAAABmMgEAAAAAAAAAAABmMgEAAAAAAGcyAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYTIBAAAAAABhMgEAAAAAAAAAAAAAAPC/"
				],
				[
					352,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAAOUwAQAAAAAA5jABAAAAAAAAAAAA5jABAAAAAADqMAEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5TABAAAAAADlMAEAAAAAAAAAAAAAAPC/"
				],
				[
					353,
					1,
					"paste",
					null,
					"AQAAAOowAQAAAAAABjEBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6jABAAAAAADqMAEAAAAAAAAAAAAAAPC/"
				],
				[
					356,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAANExAQAAAAAA0jEBAAAAAAAAAAAA0jEBAAAAAADWMQEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0TEBAAAAAADRMQEAAAAAAAAAAAAAAPC/"
				],
				[
					357,
					1,
					"paste",
					null,
					"AQAAANYxAQAAAAAA8jEBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1jEBAAAAAADWMQEAAAAAAAAAAAAAAPC/"
				],
				[
					360,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AgAAABkwAQAAAAAAGjABAAAAAAAAAAAAGjABAAAAAAAgMAEAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGTABAAAAAAAZMAEAAAAAAAAAAAAAAPC/"
				],
				[
					361,
					1,
					"left_delete",
					null,
					"AQAAAB4wAQAAAAAAHjABAAAAAAACAAAAICA",
					"AQAAAAAAAAABAAAAIDABAAAAAAAgMAEAAAAAAAAAAAAAAPC/"
				],
				[
					362,
					1,
					"paste",
					null,
					"AQAAAB4wAQAAAAAAOjABAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHjABAAAAAAAeMAEAAAAAAAAAAAAAAPC/"
				],
				[
					367,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAOQsAQAAAAAA5SwBAAAAAAAAAAAA5SwBAAAAAADnLAEAAAAAAAAAAADnLAEAAAAAAOksAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5CwBAAAAAADkLAEAAAAAAAAAAAAAgHBA"
				],
				[
					368,
					1,
					"paste",
					null,
					"AQAAAOksAQAAAAAABS0BAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6SwBAAAAAADpLAEAAAAAAAAAAAAAAPC/"
				],
				[
					372,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAF8sAQAAAAAAYCwBAAAAAAAAAAAAYCwBAAAAAABiLAEAAAAAAAAAAABiLAEAAAAAAGQsAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXywBAAAAAABfLAEAAAAAAAAAAAAAAPC/"
				],
				[
					373,
					1,
					"paste",
					null,
					"AQAAAGQsAQAAAAAAgCwBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZCwBAAAAAABkLAEAAAAAAAAAAAAAAPC/"
				],
				[
					376,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAIorAQAAAAAAiysBAAAAAAAAAAAAiysBAAAAAACNKwEAAAAAAAAAAACNKwEAAAAAAI8rAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAiisBAAAAAACKKwEAAAAAAAAAAAAAAPC/"
				],
				[
					377,
					1,
					"paste",
					null,
					"AQAAAI8rAQAAAAAAqysBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAjysBAAAAAACPKwEAAAAAAAAAAAAAAPC/"
				],
				[
					382,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAALcqAQAAAAAAuCoBAAAAAAAAAAAAuCoBAAAAAAC6KgEAAAAAAAAAAAC6KgEAAAAAALwqAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAtyoBAAAAAAC3KgEAAAAAAAAAAAAAAPC/"
				],
				[
					383,
					1,
					"paste",
					null,
					"AQAAALwqAQAAAAAA2CoBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvCoBAAAAAAC8KgEAAAAAAAAAAAAAAPC/"
				],
				[
					389,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAFwoAQAAAAAAXSgBAAAAAAAAAAAAXSgBAAAAAABfKAEAAAAAAAAAAABfKAEAAAAAAGEoAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAXCgBAAAAAABcKAEAAAAAAAAAAAAAAPC/"
				],
				[
					390,
					1,
					"paste",
					null,
					"AQAAAGEoAQAAAAAAfSgBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAYSgBAAAAAABhKAEAAAAAAAAAAAAAAPC/"
				],
				[
					394,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAJEnAQAAAAAAkicBAAAAAAAAAAAAkicBAAAAAACUJwEAAAAAAAAAAACUJwEAAAAAAJYnAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkScBAAAAAACRJwEAAAAAAAAAAAAAAPC/"
				],
				[
					395,
					1,
					"paste",
					null,
					"AQAAAJYnAQAAAAAAsicBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlicBAAAAAACWJwEAAAAAAAAAAAAAAPC/"
				],
				[
					397,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAAJ0lAQAAAAAAniUBAAAAAAAAAAAAniUBAAAAAACgJQEAAAAAAAAAAACgJQEAAAAAAKIlAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAnSUBAAAAAACdJQEAAAAAAAAAAAAAgHBA"
				],
				[
					398,
					1,
					"paste",
					null,
					"AQAAAKIlAQAAAAAAviUBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAoiUBAAAAAACiJQEAAAAAAAAAAAAAAPC/"
				],
				[
					401,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AwAAADAlAQAAAAAAMSUBAAAAAAAAAAAAMSUBAAAAAAAzJQEAAAAAAAAAAAAzJQEAAAAAADUlAQAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMCUBAAAAAAAwJQEAAAAAAAAAAAAAgHBA"
				],
				[
					402,
					1,
					"paste",
					null,
					"AQAAADUlAQAAAAAAUSUBAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAANSUBAAAAAAA1JQEAAAAAAAAAAAAAAPC/"
				],
				[
					422,
					1,
					"insert",
					{
						"characters": "\n-"
					},
					"BAAAAPoTAgAAAAAA+xMCAAAAAAAAAAAA+xMCAAAAAAD9EwIAAAAAAAAAAAD9EwIAAAAAAP8TAgAAAAAAAAAAAP8TAgAAAAAAABQCAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+hMCAAAAAAD6EwIAAAAAAAAAAAAAAPC/"
				],
				[
					423,
					1,
					"insert",
					{
						"characters": " match"
					},
					"BgAAAAAUAgAAAAAAARQCAAAAAAAAAAAAARQCAAAAAAACFAIAAAAAAAAAAAACFAIAAAAAAAMUAgAAAAAAAAAAAAMUAgAAAAAABBQCAAAAAAAAAAAABBQCAAAAAAAFFAIAAAAAAAAAAAAFFAIAAAAAAAYUAgAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAABQCAAAAAAAAFAIAAAAAAAAAAAAAAPC/"
				],
				[
					424,
					1,
					"insert",
					{
						"characters": ":"
					},
					"AQAAAAYUAgAAAAAABxQCAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABhQCAAAAAAAGFAIAAAAAAAAAAAAAAPC/"
				],
				[
					425,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAcUAgAAAAAACBQCAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABxQCAAAAAAAHFAIAAAAAAAAAAAAAAPC/"
				],
				[
					426,
					1,
					"insert",
					{
						"characters": "\\w+"
					},
					"AwAAAAgUAgAAAAAACRQCAAAAAAAAAAAACRQCAAAAAAAKFAIAAAAAAAAAAAAKFAIAAAAAAAsUAgAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACBQCAAAAAAAIFAIAAAAAAAAAAAAAAPC/"
				],
				[
					427,
					1,
					"insert",
					{
						"characters": "\n\tsc"
					},
					"BQAAAAsUAgAAAAAADBQCAAAAAAAAAAAADBQCAAAAAAAQFAIAAAAAAAAAAAAQFAIAAAAAABIUAgAAAAAAAAAAABIUAgAAAAAAExQCAAAAAAAAAAAAExQCAAAAAAAUFAIAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACxQCAAAAAAALFAIAAAAAAAAAAAAAAPC/"
				],
				[
					428,
					1,
					"insert",
					{
						"characters": "ope:"
					},
					"BAAAABQUAgAAAAAAFRQCAAAAAAAAAAAAFRQCAAAAAAAWFAIAAAAAAAAAAAAWFAIAAAAAABcUAgAAAAAAAAAAABcUAgAAAAAAGBQCAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFBQCAAAAAAAUFAIAAAAAAAAAAAAAAPC/"
				],
				[
					429,
					1,
					"insert",
					{
						"characters": " w"
					},
					"AgAAABgUAgAAAAAAGRQCAAAAAAAAAAAAGRQCAAAAAAAaFAIAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGBQCAAAAAAAYFAIAAAAAAAAAAAAAAPC/"
				],
				[
					430,
					1,
					"left_delete",
					null,
					"AQAAABkUAgAAAAAAGRQCAAAAAAABAAAAdw",
					"AQAAAAAAAAABAAAAGhQCAAAAAAAaFAIAAAAAAAAAAAAAAPC/"
				],
				[
					431,
					1,
					"insert",
					{
						"characters": "ke"
					},
					"AgAAABkUAgAAAAAAGhQCAAAAAAAAAAAAGhQCAAAAAAAbFAIAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGRQCAAAAAAAZFAIAAAAAAAAAAAAAAPC/"
				],
				[
					432,
					1,
					"insert_completion",
					{
						"completion": "keyword",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "keyword"
					},
					"AgAAABkUAgAAAAAAGRQCAAAAAAACAAAAa2UZFAIAAAAAACAUAgAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGxQCAAAAAAAbFAIAAAAAAAAAAAAAAPC/"
				],
				[
					437,
					1,
					"left_delete",
					null,
					"AQAAAB8UAgAAAAAAHxQCAAAAAAABAAAAZA",
					"AQAAAAAAAAABAAAAIBQCAAAAAAAgFAIAAAAAAAAAAAAAAPC/"
				],
				[
					442,
					1,
					"insert",
					{
						"characters": "d"
					},
					"AQAAAB8UAgAAAAAAIBQCAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHxQCAAAAAAAfFAIAAAAAAAAAAAAAAPC/"
				],
				[
					451,
					1,
					"left_delete",
					null,
					"AQAAAPsTAgAAAAAA+xMCAAAAAAAmAAAAICAgIC0gbWF0Y2g6IFx3KwogICAgICBzY29wZToga2V5d29yZAo",
					"AQAAAAAAAAABAAAA+xMCAAAAAAAhFAIAAAAAAAAAAAAAAPC/"
				],
				[
					459,
					1,
					"insert",
					{
						"characters": "+"
					},
					"AQAAABkUAgAAAAAAGhQCAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGRQCAAAAAAAZFAIAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/User/Django.sublime-build",
					""
				],
				[
					"Packages/User/Django.sublime-build",
					"pylint"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/sass.sublime-build",
					""
				]
			],
			[
				"Anaconda Python Builder",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/sass.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/sass.sublime-build",
					""
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				],
				[
					"Packages/subliminal/Django.sublime-build",
					""
				],
				[
					"Packages/subliminal/Django.sublime-build",
					"pylint"
				],
				[
					"Packages/User/sass.sublime-build",
					""
				],
				[
					"Packages/User/sphinx.sublime-build",
					""
				]
			],
			[
				"Packages/User/sphinx.sublime-build",
				""
			]
		],
		[
			[
				[
					"Sbook",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: I",
				"Package Control: Install Package"
			],
			[
				"terminus op",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/pyoload",
		"/C/pyoload/src",
		"/C/pyoload/src/pyoload",
		"/C/pyoload/src/tests"
	],
	"file_history":
	[
		"/C/pyoload/src/setup.py",
		"/C/pyoload/src/tests/test_overload.py",
		"/C/pyoload/src/tests/test_annotate.py",
		"/C/pyoload/logs.yaml",
		"/C/pyoload/src/tests/test_check.py",
		"/C/pyoload/src/tests/test_speed_rough.py",
		"/C/pyoload/src/tests/test_speed.py",
		"/C/pyoload/src/del.py",
		"/C/pyoload/src/tests/test_cast.py",
		"/C/dashing/examples/demo.py",
		"/C/Users/CHEF SEC/AppData/Roaming/Python/Python311-32/site-packages/dashing/__init__.py",
		"/C/pyoload/src/pyoload/taskama.sublime-workspace",
		"/C/pyoload/docs/examples.rst",
		"/C/pyoload/docs/conf.py",
		"/C/pyoload/src/del.py.del",
		"/C/pyoload/docs/api.rst",
		"/C/pyoload/docs/index.rst",
		"/C/pyoload/docs/usage.rst",
		"/C/pyoload/docs/del.py",
		"/C/Users/CHEF SEC/del.py",
		"/C/Users/CHEF SEC/dash-test.py",
		"/C/sublime_text/Data/Packages/User/ret.sublime-snippet",
		"/C/sublime_text/Data/Packages/User/at.sublime-snippet",
		"/C/sublime_text/Data/Packages/User/annotate.sublime-snippet",
		"/C/pyoload/docs/build/html/usage.rst",
		"/C/pyoload/docs/requirements.txt",
		"/C/pyoload/docs/make.bat",
		"/C/sublime_text/Data/Packages/User/sphinx.sublime-build",
		"/C/vercel/templates/index.html",
		"/C/pyoload/README.md",
		"/C/pyoload/src/pyoload/__init__.py",
		"/C/pyoload/src/tests/OverloadTest.py",
		"/C/pyoload/.github/workflows/python-publish.yml",
		"/C/pyoload/src/tests/__init__.py",
		"/C/pyoload/src/tests/test_place.py",
		"/C/pyoload/src/tests/CheckTest.py",
		"/C/pyoload/src/tests/CastTest.py",
		"/C/pyoload/.github/workflows/test.yml",
		"/C/ken-morel/README.md",
		"/C/pyoload/README.rst",
		"/C/pyoload/.gitignore",
		"/C/Users/CHEF SEC/pyoload-test.py",
		"/C/sublime_text/Data/Packages/User/lt.sublime-snippet",
		"/C/sublime_text/Data/Packages/User/gt.sublime-snippet",
		"/C/Sbook/staticfiles/svg/solid/1.svg",
		"/C/Users/CHEF SEC/test.py",
		"/C/ken-morel/ama.svg",
		"/C/pyoload/docs/Makefile",
		"/C/pyoload/docker-compose.yml",
		"/C/pyoload/.dockerignore",
		"/C/pyoload/.github/workflows/pyre.yml",
		"/C/pyoload/Makefile",
		"/C/pyoload/.readthedocs.yaml",
		"/C/pyoload/src/tests/test_placeholder.py",
		"/C/pyoload/src/del.txt",
		"/C/pyoload/docs/source/conf.py",
		"/C/pyoload/docs/source/index.rst",
		"/C/pyoload/docs/source/usage.rst",
		"/C/pyoload/docs/source/api.rst",
		"/C/Users/Lenovo 11e/Desktop/pyoload/src/pyoload/__init__.py",
		"/C/Users/Lenovo 11e/Desktop/pyoload/README.md",
		"/C/Users/Lenovo 11e/Desktop/pyoload/src/setup.py",
		"/C/Users/Lenovo 11e/Desktop/pyoload/src/.coveragerc",
		"/C/Users/Lenovo 11e/Desktop/pyoload/src/.flake8",
		"/C/Users/Lenovo 11e/Desktop/pyoload/src/tests/test_placeholder.py",
		"/C/Users/Lenovo 11e/Desktop/pyoload/src/del.py",
		"/C/sublime_text/Data/Packages/User/py_complete.py",
		"/C/Users/CHEF SEC/AppData/Roaming/Sublime Text/Local/Session.sublime_session",
		"/C/Sbook/sbook/accounts.py",
		"/C/Sbook/sbook/urls.py",
		"/C/Sbook/sbook/views.py",
		"/C/Sbook/sbook/templates/main.django",
		"/C/Sbook/random_profile_image.py",
		"/C/Sbook/sbook/templates/signup.django",
		"/C/Sbook/Sbook.sublime-project",
		"/C/Sbook/requirements.txt",
		"/C/Sbook/note/accounts.py",
		"/C/del/del/del/settings.py",
		"/C/Sbook/sbook/settings.py",
		"/C/Sbook/manage.py",
		"/C/python-3.12.3-embed-win32/python312._pth",
		"/C/Sbook/main.py"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 101.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"print.+",
			"get_module",
			"comment.+\\:",
			"comment.block.documentation.summary.python",
			".+\\:param self\\:.+\\n",
			"Callable",
			"test",
			"tests",
			"annotation",
			"print",
			"\\.\\. image\\:\\: (http.+)\n  \\:alt\\: (.+)\n  \\:target\\: (http.+)",
			"\\.\\. image\\:\\: (http.+)\n  \\:target\\: (http.+)\n  \\:alt\\: (.+)",
			"class cast",
			"reso",
			"print",
			"\\:python\\:",
			"'''",
			"docs/conf"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			"",
			"getmodule",
			"",
			"[![$2]($1)]($3)",
			"[![$3]($1)]($2)",
			"",
			"\"\"\""
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/pyoload/__init__.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 21179,
						"regions":
						{
						},
						"selection":
						[
							[
								15492,
								15492
							]
						],
						"settings":
						{
							"color_scheme": "Neon.sublime-color-scheme",
							"rainbow_checked": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 10099.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/setup.py",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2658,
						"regions":
						{
						},
						"selection":
						[
							[
								2658,
								2658
							]
						],
						"settings":
						{
							"rainbow_checked": true,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1334.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 2,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 110062,
						"regions":
						{
						},
						"selection":
						[
							[
								110062,
								110062
							]
						],
						"settings":
						{
							"__vi_external_disable": true,
							"auto_complete": false,
							"auto_complete_commit_on_tab": false,
							"bracket_highlighter.clone_locations":
							{
							},
							"bracket_highlighter.ignore": true,
							"color_scheme": "Terminus.hidden-color-scheme",
							"draw_centered": false,
							"draw_indent_guides": false,
							"draw_unicode_white_space": false,
							"draw_white_space": "none",
							"gutter": false,
							"highlight_line": false,
							"is_widget": true,
							"rainbow_checked": true,
							"result_base_dir": "C:\\pyoload",
							"result_file_regex": null,
							"result_line_regex": null,
							"rulers":
							[
								[
									50,
									"dotted"
								],
								[
									79,
									"solid",
									2
								],
								500
							],
							"scroll_past_end": true,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"terminus.highlight_counter": 4311,
							"terminus_view": true,
							"terminus_view.args":
							{
								"auto_close": true,
								"cancellable": false,
								"cmd":
								[
									"powershell.exe"
								],
								"cwd": "C:\\pyoload",
								"default_title": "PowerShell",
								"env":
								{
									"TERMINUS_SUBLIME": "1",
									"TERM_PROGRAM": "Terminus-Sublime"
								},
								"file_regex": null,
								"line_regex": null,
								"panel_name": "Terminus",
								"reactivable": true,
								"show_in_panel": null,
								"tag": null,
								"timeit": false,
								"title": null
							},
							"terminus_view.cancellable": false,
							"terminus_view.key.ctrl+k": true,
							"terminus_view.key.ctrl+p": true,
							"terminus_view.natural_keyboard": true,
							"terminus_view.reactivable": true,
							"terminus_view.tag": null,
							"terminus_view.viewport_y": 16002.0,
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 16002.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "testing.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 154,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"rainbow_checked": true,
							"syntax": "Packages/subliminal/subliminal-Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/C/sublime_text/Data/Packages/subliminal/subliminal-Python.sublime-syntax",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 136377,
						"regions":
						{
							"rb_l0_Regular Expression":
							{
								"flags": 272,
								"regions": "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",
								"scope": "Regular Expression.l0.rb"
							},
							"rb_l1_Regular Expression":
							{
								"flags": 272,
								"regions": "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",
								"scope": "Regular Expression.l1.rb"
							},
							"rb_l2_Regular Expression":
							{
								"flags": 272,
								"regions": "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",
								"scope": "Regular Expression.l2.rb"
							},
							"rb_l3_Regular Expression":
							{
								"flags": 272,
								"regions": "",
								"scope": "Regular Expression.l3.rb"
							},
							"rb_l4_Regular Expression":
							{
								"flags": 272,
								"regions": "",
								"scope": "Regular Expression.l4.rb"
							},
							"rb_l5_Regular Expression":
							{
								"flags": 272,
								"regions": "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",
								"scope": "Regular Expression.l5.rb"
							},
							"rb_l6_Regular Expression":
							{
								"flags": 272,
								"regions": "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",
								"scope": "Regular Expression.l6.rb"
							},
							"rb_mismatch_Regular Expression":
							{
								"flags": 17,
								"regions":
								[
									[
										1190,
										1191
									],
									[
										1191,
										1192
									],
									[
										1263,
										1264
									],
									[
										1448,
										1449
									],
									[
										14369,
										14370
									],
									[
										21107,
										21108
									],
									[
										27335,
										27336
									],
									[
										27371,
										27372
									],
									[
										27822,
										27823
									],
									[
										28487,
										28488
									],
									[
										28849,
										28850
									],
									[
										30013,
										30014
									],
									[
										30182,
										30183
									],
									[
										30291,
										30292
									],
									[
										33681,
										33682
									],
									[
										34288,
										34289
									],
									[
										35366,
										35367
									],
									[
										35372,
										35373
									],
									[
										35373,
										35374
									],
									[
										40860,
										40861
									],
									[
										41048,
										41049
									],
									[
										41493,
										41494
									],
									[
										52410,
										52411
									],
									[
										52411,
										52412
									],
									[
										52488,
										52489
									],
									[
										52489,
										52490
									],
									[
										52996,
										52997
									],
									[
										52999,
										53000
									],
									[
										53000,
										53001
									],
									[
										55485,
										55486
									],
									[
										58112,
										58113
									],
									[
										58113,
										58114
									],
									[
										58116,
										58117
									],
									[
										60360,
										60361
									],
									[
										60366,
										60367
									],
									[
										60806,
										60807
									],
									[
										62477,
										62478
									],
									[
										62864,
										62865
									],
									[
										64557,
										64558
									],
									[
										64563,
										64564
									],
									[
										65140,
										65141
									],
									[
										89682,
										89683
									],
									[
										102243,
										102244
									],
									[
										115375,
										115376
									],
									[
										127924,
										127925
									],
									[
										132991,
										132992
									],
									[
										134533,
										134534
									],
									[
										135352,
										135353
									]
								],
								"scope": "Regular Expression.mismatch.rb"
							}
						},
						"selection":
						[
							[
								136218,
								136218
							]
						],
						"settings":
						{
							"rainbow_checked": true,
							"syntax": "Packages/YAML/YAML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 74447.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 126.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "pyoload.sublime-project",
	"replace":
	{
		"height": 70.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"C:\\Sbook\\Sbook.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 223.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
